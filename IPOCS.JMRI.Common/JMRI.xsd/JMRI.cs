//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.436.0.
namespace JMRI
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>General NamedBean type with a general system name specification.
    ///      Extend this with a definition of a specific system name type.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General NamedBean type with a general system name specification. Extend this with" +
        " a definition of a specific system name type.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NamedBeanType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JMRI.RouteManagerTypeRoute))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JMRI.TurnoutType))]
    public partial class NamedBeanType
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of a required separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of a required separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty> _properties;
        
        [System.Xml.Serialization.XmlArrayAttribute("properties")]
        [System.Xml.Serialization.XmlArrayItemAttribute("property")]
        public System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="NamedBeanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NamedBeanType" /> class.</para>
        /// </summary>
        public NamedBeanType()
        {
            this._properties = new System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NamedBeanTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamedBeanTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty> _property;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="NamedBeanTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NamedBeanTypeProperties" /> class.</para>
        /// </summary>
        public NamedBeanTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<NamedBeanTypePropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NamedBeanTypePropertiesProperty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamedBeanTypePropertiesProperty
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public NamedBeanTypePropertiesPropertyKey Key { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public NamedBeanTypePropertiesPropertyValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NamedBeanTypePropertiesPropertyKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamedBeanTypePropertiesPropertyKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NamedBeanTypePropertiesPropertyValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NamedBeanTypePropertiesPropertyValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Element (perhaps in an I18N language) with user-provided text where
    ///          whitespace must be preserved.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Element (perhaps in an I18N language) with user-provided text where whitespace mu" +
        "st be preserved.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PreservedTextType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreservedTextType
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.Space _space = JMRI.Space.Preserve;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.Space.Preserve)]
        [System.Xml.Serialization.XmlAttributeAttribute("space", Namespace="http://www.w3.org/XML/1998/namespace")]
        public JMRI.Space Space
        {
            get
            {
                return this._space;
            }
            set
            {
                this._space = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lang", Namespace="http://www.w3.org/XML/1998/namespace")]
        public string Lang { get; set; }
    }
    
    /// <summary>
    /// <para>Provide possible states of turnouts for e.g. attributes</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Provide possible states of turnouts for e.g. attributes")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("turnoutStateType", Namespace="")]
    public enum TurnoutStateType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("closed")]
        Closed,
        
        [System.Xml.Serialization.XmlEnumAttribute("thrown")]
        Thrown,
    }
    
    /// <summary>
    /// <para>Provide possible types of scrolling for a window</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Provide possible types of scrolling for a window")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("scrollableType", Namespace="")]
    public enum ScrollableType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("none")]
        None,
        
        [System.Xml.Serialization.XmlEnumAttribute("horizontal")]
        Horizontal,
        
        [System.Xml.Serialization.XmlEnumAttribute("vertical")]
        Vertical,
        
        [System.Xml.Serialization.XmlEnumAttribute("both")]
        Both,
    }
    
    /// <summary>
    /// <para>General definition of string that's either "yes" or "no".</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General definition of string that\'s either \"yes\" or \"no\".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yesNoType", Namespace="")]
    public enum YesNoType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
    }
    
    /// <summary>
    /// <para>General definition of string that's either "yes", "no" or "maybe".</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General definition of string that\'s either \"yes\", \"no\" or \"maybe\".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yesNoMaybeType", Namespace="")]
    public enum YesNoMaybeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
        
        [System.Xml.Serialization.XmlEnumAttribute("maybe")]
        Maybe,
    }
    
    /// <summary>
    /// <para>General definition of string that's either "yes", "no" or "default".</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General definition of string that\'s either \"yes\", \"no\" or \"default\".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yesNoDefaultType", Namespace="")]
    public enum YesNoDefaultType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
        
        [System.Xml.Serialization.XmlEnumAttribute("default")]
        Default,
    }
    
    /// <summary>
    /// <para>General definition of string that's either "true" or "false".</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General definition of string that\'s either \"true\" or \"false\".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("trueFalseType", Namespace="")]
    public enum TrueFalseType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("true")]
        True,
        
        [System.Xml.Serialization.XmlEnumAttribute("false")]
        False,
    }
    
    /// <summary>
    /// <para>General definition of string that's a valid signal color</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("General definition of string that\'s a valid signal color")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("signalColorType", Namespace="")]
    public enum SignalColorType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("green")]
        Green,
        
        [System.Xml.Serialization.XmlEnumAttribute("yellow")]
        Yellow,
        
        [System.Xml.Serialization.XmlEnumAttribute("red")]
        Red,
        
        [System.Xml.Serialization.XmlEnumAttribute("lunar")]
        Lunar,
        
        [System.Xml.Serialization.XmlEnumAttribute("flashgreen")]
        Flashgreen,
        
        [System.Xml.Serialization.XmlEnumAttribute("flashyellow")]
        Flashyellow,
        
        [System.Xml.Serialization.XmlEnumAttribute("flashred")]
        Flashred,
        
        [System.Xml.Serialization.XmlEnumAttribute("flashlunar")]
        Flashlunar,
        
        [System.Xml.Serialization.XmlEnumAttribute("dark")]
        Dark,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("space", Namespace="http://www.w3.org/XML/1998/namespace", AnonymousType=true)]
    public enum Space
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("preserve")]
        Preserve,
    }
    
    /// <summary>
    /// <para>Defines a layout connection configuration.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Defines a layout connection configuration.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionTypeOptions> _options;
        
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Collections.ObjectModel.Collection<ConnectionTypeOptions> Options
        {
            get
            {
                return this._options;
            }
            private set
            {
                this._options = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Options-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Options collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionsSpecified
        {
            get
            {
                return (this.Options.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConnectionType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConnectionType" /> class.</para>
        /// </summary>
        public ConnectionType()
        {
            this._options = new System.Collections.ObjectModel.Collection<ConnectionTypeOptions>();
            this._node = new System.Collections.ObjectModel.Collection<ConnectionTypeNode>();
            this._commandStationPreferences = new System.Collections.ObjectModel.Collection<ConnectionTypeCommandStationPreferences>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionTypeNode> _node;
        
        [System.Xml.Serialization.XmlElementAttribute("node")]
        public System.Collections.ObjectModel.Collection<ConnectionTypeNode> Node
        {
            get
            {
                return this._node;
            }
            private set
            {
                this._node = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Node-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Node collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NodeSpecified
        {
            get
            {
                return (this.Node.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionTypeCommandStationPreferences> _commandStationPreferences;
        
        [System.Xml.Serialization.XmlElementAttribute("commandStationPreferences")]
        public System.Collections.ObjectModel.Collection<ConnectionTypeCommandStationPreferences> CommandStationPreferences
        {
            get
            {
                return this._commandStationPreferences;
            }
            private set
            {
                this._commandStationPreferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CommandStationPreferences-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CommandStationPreferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommandStationPreferencesSpecified
        {
            get
            {
                return (this.CommandStationPreferences.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("port")]
        public string Port { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("address")]
        public string Address { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("option1")]
        public string Option1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("option2")]
        public string Option2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("option3")]
        public string Option3 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("option4")]
        public string Option4 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("manufacturer")]
        public string Manufacturer { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disabled")]
        public string Disabled { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("systemPrefix")]
        public string SystemPrefix { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeOptions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionTypeOptions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionTypeOptionsOption> _option;
        
        [System.Xml.Serialization.XmlElementAttribute("option")]
        public System.Collections.ObjectModel.Collection<ConnectionTypeOptionsOption> Option
        {
            get
            {
                return this._option;
            }
            private set
            {
                this._option = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Option-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Option collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionSpecified
        {
            get
            {
                return (this.Option.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConnectionTypeOptions" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConnectionTypeOptions" /> class.</para>
        /// </summary>
        public ConnectionTypeOptions()
        {
            this._option = new System.Collections.ObjectModel.Collection<ConnectionTypeOptionsOption>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeOptionsOption", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionTypeOptionsOption
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeNode", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionTypeNode
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionTypeNodeParameter> _parameter;
        
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        public System.Collections.ObjectModel.Collection<ConnectionTypeNodeParameter> Parameter
        {
            get
            {
                return this._parameter;
            }
            private set
            {
                this._parameter = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Parameter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Parameter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParameterSpecified
        {
            get
            {
                return (this.Parameter.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConnectionTypeNode" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConnectionTypeNode" /> class.</para>
        /// </summary>
        public ConnectionTypeNode()
        {
            this._parameter = new System.Collections.ObjectModel.Collection<ConnectionTypeNodeParameter>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeNodeParameter", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionTypeNodeParameter
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeCommandStationPreferences", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionTypeCommandStationPreferences
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("addTurnoutToCS")]
        public JMRI.YesNoType AddTurnoutToCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddTurnoutToCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddTurnoutToCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddTurnoutToCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addTurnoutToJMRI")]
        public JMRI.YesNoType AddTurnoutToJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddTurnoutToJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddTurnoutToJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddTurnoutToJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeTurnoutFromCS")]
        public JMRI.YesNoType RemoveTurnoutFromCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveTurnoutFromCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveTurnoutFromCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveTurnoutFromCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeTurnoutFromJMRI")]
        public JMRI.YesNoType RemoveTurnoutFromJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveTurnoutFromJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveTurnoutFromJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveTurnoutFromJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addSensorToCS")]
        public JMRI.YesNoType AddSensorToCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddSensorToCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddSensorToCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddSensorToCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addSensorToJMRI")]
        public JMRI.YesNoType AddSensorToJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddSensorToJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddSensorToJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddSensorToJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeSensorFromCS")]
        public JMRI.YesNoType RemoveSensorFromCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveSensorFromCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveSensorFromCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveSensorFromCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeSensorFromJMRI")]
        public JMRI.YesNoType RemoveSensorFromJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveSensorFromJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveSensorFromJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveSensorFromJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addLocoToCS")]
        public JMRI.YesNoType AddLocoToCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddLocoToCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddLocoToCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddLocoToCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addLocoToJMRI")]
        public JMRI.YesNoType AddLocoToJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddLocoToJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddLocoToJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddLocoToJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeLocoFromJMRI")]
        public JMRI.YesNoType RemoveLocoFromJMRI { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveLocoFromJMRI-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveLocoFromJMRI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveLocoFromJMRISpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("removeAdhocLocoFromCS")]
        public JMRI.YesNoType RemoveAdhocLocoFromCS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoveAdhocLocoFromCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoveAdhocLocoFromCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveAdhocLocoFromCSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultCSProtocol")]
        public string DefaultCSProtocol { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultCSLocoDescription")]
        public string DefaultCSLocoDescription { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("locoMaster")]
        public string LocoMaster { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ecosRosterAttribute")]
        public string EcosRosterAttribute { get; set; }
    }
    
    /// <summary>
    /// <para>Defines user Preferences configuration.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Defines user Preferences configuration.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<object> _setting;
        
        [System.Xml.Serialization.XmlElementAttribute("setting")]
        public System.Collections.ObjectModel.Collection<object> Setting
        {
            get
            {
                return this._setting;
            }
            private set
            {
                this._setting = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Setting-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Setting collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettingSpecified
        {
            get
            {
                return (this.Setting.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsType" /> class.</para>
        /// </summary>
        public UserPrefsType()
        {
            this._setting = new System.Collections.ObjectModel.Collection<object>();
            this._comboBoxLastValue = new System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValue>();
            this._classPreferences = new System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferences>();
            this._windowDetails = new System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetails>();
            this._tableDetails = new System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetails>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValue> _comboBoxLastValue;
        
        [System.Xml.Serialization.XmlElementAttribute("comboBoxLastValue")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValue> ComboBoxLastValue
        {
            get
            {
                return this._comboBoxLastValue;
            }
            private set
            {
                this._comboBoxLastValue = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ComboBoxLastValue-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ComboBoxLastValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComboBoxLastValueSpecified
        {
            get
            {
                return (this.ComboBoxLastValue.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferences> _classPreferences;
        
        [System.Xml.Serialization.XmlElementAttribute("classPreferences")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferences> ClassPreferences
        {
            get
            {
                return this._classPreferences;
            }
            private set
            {
                this._classPreferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClassPreferences-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClassPreferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassPreferencesSpecified
        {
            get
            {
                return (this.ClassPreferences.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetails> _windowDetails;
        
        [System.Xml.Serialization.XmlElementAttribute("windowDetails")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetails> WindowDetails
        {
            get
            {
                return this._windowDetails;
            }
            private set
            {
                this._windowDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WindowDetails-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the WindowDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WindowDetailsSpecified
        {
            get
            {
                return (this.WindowDetails.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetails> _tableDetails;
        
        [System.Xml.Serialization.XmlElementAttribute("tableDetails")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetails> TableDetails
        {
            get
            {
                return this._tableDetails;
            }
            private set
            {
                this._tableDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TableDetails-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TableDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TableDetailsSpecified
        {
            get
            {
                return (this.TableDetails.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeComboBoxLastValue", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeComboBoxLastValue
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValueComboBox> _comboBox;
        
        [System.Xml.Serialization.XmlElementAttribute("comboBox")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValueComboBox> ComboBox
        {
            get
            {
                return this._comboBox;
            }
            private set
            {
                this._comboBox = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ComboBox-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ComboBox collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComboBoxSpecified
        {
            get
            {
                return (this.ComboBox.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeComboBoxLastValue" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeComboBoxLastValue" /> class.</para>
        /// </summary>
        public UserPrefsTypeComboBoxLastValue()
        {
            this._comboBox = new System.Collections.ObjectModel.Collection<UserPrefsTypeComboBoxLastValueComboBox>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeComboBoxLastValueComboBox", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeComboBoxLastValueComboBox
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lastSelected")]
        public string LastSelected { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeClassPreferences", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeClassPreferences
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferencesReminderPrompts> _reminderPrompts;
        
        [System.Xml.Serialization.XmlElementAttribute("reminderPrompts")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferencesReminderPrompts> ReminderPrompts
        {
            get
            {
                return this._reminderPrompts;
            }
            private set
            {
                this._reminderPrompts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReminderPrompts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ReminderPrompts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReminderPromptsSpecified
        {
            get
            {
                return (this.ReminderPrompts.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeClassPreferences" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeClassPreferences" /> class.</para>
        /// </summary>
        public UserPrefsTypeClassPreferences()
        {
            this._reminderPrompts = new System.Collections.ObjectModel.Collection<UserPrefsTypeClassPreferencesReminderPrompts>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeClassPreferencesReminderPrompts", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeClassPreferencesReminderPrompts
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("reminder")]
        public string Reminder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeWindowDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeWindowDetails
    {
        
        [System.Xml.Serialization.XmlElementAttribute("locX")]
        public float LocX { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocX-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocX property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocXSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("locY")]
        public float LocY { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocY-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocY property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocYSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("width")]
        public float Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("height")]
        public float Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Height-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty> _properties;
        
        [System.Xml.Serialization.XmlArrayAttribute("properties")]
        [System.Xml.Serialization.XmlArrayItemAttribute("property")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeWindowDetails" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeWindowDetails" /> class.</para>
        /// </summary>
        public UserPrefsTypeWindowDetails()
        {
            this._properties = new System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeWindowDetailsProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeWindowDetailsProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeWindowDetailsProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeWindowDetailsProperties" /> class.</para>
        /// </summary>
        public UserPrefsTypeWindowDetailsProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<UserPrefsTypeWindowDetailsPropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeWindowDetailsPropertiesProperty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeWindowDetailsPropertiesProperty
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public UserPrefsTypeWindowDetailsPropertiesPropertyKey Key { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public UserPrefsTypeWindowDetailsPropertiesPropertyValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeWindowDetailsPropertiesPropertyKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeWindowDetailsPropertiesPropertyKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeWindowDetailsPropertiesPropertyValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeWindowDetailsPropertiesPropertyValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeTableDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeTableDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTable> _table;
        
        [System.Xml.Serialization.XmlElementAttribute("table")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTable> Table
        {
            get
            {
                return this._table;
            }
            private set
            {
                this._table = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Table-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Table collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TableSpecified
        {
            get
            {
                return (this.Table.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeTableDetails" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeTableDetails" /> class.</para>
        /// </summary>
        public UserPrefsTypeTableDetails()
        {
            this._table = new System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTable>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeTableDetailsTable", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeTableDetailsTable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTableColumn> _column;
        
        [System.Xml.Serialization.XmlElementAttribute("column")]
        public System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTableColumn> Column
        {
            get
            {
                return this._column;
            }
            private set
            {
                this._column = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Column-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Column collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSpecified
        {
            get
            {
                return (this.Column.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UserPrefsTypeTableDetailsTable" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserPrefsTypeTableDetailsTable" /> class.</para>
        /// </summary>
        public UserPrefsTypeTableDetailsTable()
        {
            this._column = new System.Collections.ObjectModel.Collection<UserPrefsTypeTableDetailsTableColumn>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserPrefsTypeTableDetailsTableColumn", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPrefsTypeTableDetailsTableColumn
    {
        
        [System.Xml.Serialization.XmlElementAttribute("order")]
        public int Order { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Order-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Order property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("width")]
        public int Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sort")]
        public int Sort { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sort-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sort property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("hidden")]
        public JMRI.YesNoType Hidden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Hidden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Hidden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a TurnoutManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a TurnoutManager implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutManagerType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("operations")]
        public TurnoutManagerTypeOperations Operations { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("defaultclosedspeed")]
        public object Defaultclosedspeed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("defaultthrownspeed")]
        public object Defaultthrownspeed { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutType> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<TurnoutType> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TurnoutManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TurnoutManagerType" /> class.</para>
        /// </summary>
        public TurnoutManagerType()
        {
            this._turnout = new System.Collections.ObjectModel.Collection<TurnoutType>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutManagerTypeOperations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutManagerTypeOperations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OperationType> _operation;
        
        [System.Xml.Serialization.XmlElementAttribute("operation")]
        public System.Collections.ObjectModel.Collection<OperationType> Operation
        {
            get
            {
                return this._operation;
            }
            private set
            {
                this._operation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationSpecified
        {
            get
            {
                return (this.Operation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TurnoutManagerTypeOperations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TurnoutManagerTypeOperations" /> class.</para>
        /// </summary>
        public TurnoutManagerTypeOperations()
        {
            this._operation = new System.Collections.ObjectModel.Collection<OperationType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("automate")]
        public string Automate { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OperationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperationType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("interval")]
        public int Interval { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Interval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("maxtries")]
        public int Maxtries { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maxtries-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maxtries property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxtriesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter1")]
        public string Parameter1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter2")]
        public string Parameter2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter3")]
        public string Parameter3 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter4")]
        public string Parameter4 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter5")]
        public string Parameter5 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter6")]
        public string Parameter6 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter7")]
        public string Parameter7 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter8")]
        public string Parameter8 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter9")]
        public string Parameter9 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameter10")]
        public string Parameter10 { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutType : JMRI.NamedBeanType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("operation")]
        public OperationType Operation { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("divergingSpeed")]
        public string DivergingSpeed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("straightSpeed")]
        public string StraightSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("feedback")]
        public string Feedback { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sensor1")]
        public string Sensor1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sensor2")]
        public string Sensor2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("numBits")]
        public int NumBits { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumBits-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumBits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumBitsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlType")]
        public string ControlType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("automate")]
        public string Automate { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _inverted = false;
        
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlAttributeAttribute("inverted")]
        public bool Inverted
        {
            get
            {
                return this._inverted;
            }
            set
            {
                this._inverted = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _locked = false;
        
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlAttributeAttribute("locked")]
        public bool Locked
        {
            get
            {
                return this._locked;
            }
            set
            {
                this._locked = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lockMode")]
        public string LockMode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("decoder")]
        public string Decoder { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public TurnoutTypeState State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die State-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutTypeState", Namespace="", AnonymousType=true)]
    public enum TurnoutTypeState
    {
        
        CLOSED,
        
        THROWN,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a SensorManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a SensorManager implementatio" +
        "n.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("defaultInitialState")]
        public SensorManagerTypeDefaultInitialState DefaultInitialState { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefaultInitialState-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DefaultInitialState property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultInitialStateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("globalDebounceTimers")]
        public SensorManagerTypeGlobalDebounceTimers GlobalDebounceTimers { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SensorManagerTypeSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<SensorManagerTypeSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SensorManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SensorManagerType" /> class.</para>
        /// </summary>
        public SensorManagerType()
        {
            this._sensor = new System.Collections.ObjectModel.Collection<SensorManagerTypeSensor>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeDefaultInitialState", Namespace="", AnonymousType=true)]
    public enum SensorManagerTypeDefaultInitialState
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("inactive")]
        Inactive,
        
        [System.Xml.Serialization.XmlEnumAttribute("active")]
        Active,
        
        [System.Xml.Serialization.XmlEnumAttribute("unknown")]
        Unknown,
        
        [System.Xml.Serialization.XmlEnumAttribute("inconsistent")]
        Inconsistent,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeGlobalDebounceTimers", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeGlobalDebounceTimers
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("goingActive")]
        public object GoingActive { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("goingInActive")]
        public object GoingInActive { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensor
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty> _properties;
        
        [System.Xml.Serialization.XmlArrayAttribute("properties")]
        [System.Xml.Serialization.XmlArrayItemAttribute("property")]
        public System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SensorManagerTypeSensor" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SensorManagerTypeSensor" /> class.</para>
        /// </summary>
        public SensorManagerTypeSensor()
        {
            this._properties = new System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("useGlobalDebounceTimer")]
        public JMRI.YesNoType UseGlobalDebounceTimer { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseGlobalDebounceTimer-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseGlobalDebounceTimer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseGlobalDebounceTimerSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("debounceTimers")]
        public SensorManagerTypeSensorDebounceTimers DebounceTimers { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("pullResistance")]
        public string PullResistance { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _inverted = false;
        
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlAttributeAttribute("inverted")]
        public bool Inverted
        {
            get
            {
                return this._inverted;
            }
            set
            {
                this._inverted = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensorProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensorProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty> _property;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SensorManagerTypeSensorProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SensorManagerTypeSensorProperties" /> class.</para>
        /// </summary>
        public SensorManagerTypeSensorProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<SensorManagerTypeSensorPropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensorPropertiesProperty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensorPropertiesProperty
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public SensorManagerTypeSensorPropertiesPropertyKey Key { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public SensorManagerTypeSensorPropertiesPropertyValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensorPropertiesPropertyKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensorPropertiesPropertyKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensorPropertiesPropertyValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensorPropertiesPropertyValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SensorManagerTypeSensorDebounceTimers", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SensorManagerTypeSensorDebounceTimers
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("goingActive")]
        public object GoingActive { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("goingInActive")]
        public object GoingInActive { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a LightManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a LightManager implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LightManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LightManagerTypeLight> _light;
        
        [System.Xml.Serialization.XmlElementAttribute("light")]
        public System.Collections.ObjectModel.Collection<LightManagerTypeLight> Light
        {
            get
            {
                return this._light;
            }
            private set
            {
                this._light = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Light-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Light collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightSpecified
        {
            get
            {
                return (this.Light.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LightManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LightManagerType" /> class.</para>
        /// </summary>
        public LightManagerType()
        {
            this._light = new System.Collections.ObjectModel.Collection<LightManagerTypeLight>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LightManagerTypeLight", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightManagerTypeLight
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LightManagerTypeLightLightcontrol> _lightcontrol;
        
        [System.Xml.Serialization.XmlElementAttribute("lightcontrol")]
        public System.Collections.ObjectModel.Collection<LightManagerTypeLightLightcontrol> Lightcontrol
        {
            get
            {
                return this._lightcontrol;
            }
            private set
            {
                this._lightcontrol = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lightcontrol-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Lightcontrol collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightcontrolSpecified
        {
            get
            {
                return (this.Lightcontrol.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LightManagerTypeLight" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LightManagerTypeLight" /> class.</para>
        /// </summary>
        public LightManagerTypeLight()
        {
            this._lightcontrol = new System.Collections.ObjectModel.Collection<LightManagerTypeLightLightcontrol>();
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of nested lightcontrol element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of nested lightcontrol element")]
        [System.Xml.Serialization.XmlAttributeAttribute("controlType")]
        public string ControlType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("minIntensity")]
        public string MinIntensity { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("maxIntensity")]
        public string MaxIntensity { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("transitionTime")]
        public string TransitionTime { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LightManagerTypeLightLightcontrol", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightManagerTypeLightLightcontrol
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("controlType")]
        public string ControlType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor2")]
        public string ControlSensor2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sensorSense")]
        public string SensorSense { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fastClockOnHour")]
        public string FastClockOnHour { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fastClockOnMin")]
        public string FastClockOnMin { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fastClockOffHour")]
        public string FastClockOffHour { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fastClockOffMin")]
        public string FastClockOffMin { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlTurnout")]
        public string ControlTurnout { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutState")]
        public string TurnoutState { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("timedControlSensor")]
        public string TimedControlSensor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public string Duration { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a ReporterManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a ReporterManager implementat" +
        "ion.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ReporterManagerTypeReporter> _reporter;
        
        [System.Xml.Serialization.XmlElementAttribute("reporter")]
        public System.Collections.ObjectModel.Collection<ReporterManagerTypeReporter> Reporter
        {
            get
            {
                return this._reporter;
            }
            private set
            {
                this._reporter = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reporter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reporter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReporterSpecified
        {
            get
            {
                return (this.Reporter.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReporterManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReporterManagerType" /> class.</para>
        /// </summary>
        public ReporterManagerType()
        {
            this._reporter = new System.Collections.ObjectModel.Collection<ReporterManagerTypeReporter>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerTypeReporter", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerTypeReporter
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty> _properties;
        
        [System.Xml.Serialization.XmlArrayAttribute("properties")]
        [System.Xml.Serialization.XmlArrayItemAttribute("property")]
        public System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReporterManagerTypeReporter" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReporterManagerTypeReporter" /> class.</para>
        /// </summary>
        public ReporterManagerTypeReporter()
        {
            this._properties = new System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerTypeReporterProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerTypeReporterProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty> _property;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReporterManagerTypeReporterProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReporterManagerTypeReporterProperties" /> class.</para>
        /// </summary>
        public ReporterManagerTypeReporterProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<ReporterManagerTypeReporterPropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerTypeReporterPropertiesProperty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerTypeReporterPropertiesProperty
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public ReporterManagerTypeReporterPropertiesPropertyKey Key { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public ReporterManagerTypeReporterPropertiesPropertyValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerTypeReporterPropertiesPropertyKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerTypeReporterPropertiesPropertyKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReporterManagerTypeReporterPropertiesPropertyValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReporterManagerTypeReporterPropertiesPropertyValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a MemoryManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a MemoryManager implementatio" +
        "n.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemoryManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MemoryManagerTypeMemory> _memory;
        
        [System.Xml.Serialization.XmlElementAttribute("memory")]
        public System.Collections.ObjectModel.Collection<MemoryManagerTypeMemory> Memory
        {
            get
            {
                return this._memory;
            }
            private set
            {
                this._memory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memory-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemorySpecified
        {
            get
            {
                return (this.Memory.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MemoryManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MemoryManagerType" /> class.</para>
        /// </summary>
        public MemoryManagerType()
        {
            this._memory = new System.Collections.ObjectModel.Collection<MemoryManagerTypeMemory>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryManagerTypeMemory", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemoryManagerTypeMemory
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("valueClass")]
        public string ValueClass { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a BlockManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a BlockManager implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("defaultspeed")]
        public object Defaultspeed { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlock> _block;
        
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlock> Block
        {
            get
            {
                return this._block;
            }
            private set
            {
                this._block = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Block-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Block collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockSpecified
        {
            get
            {
                return (this.Block.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerType" /> class.</para>
        /// </summary>
        public BlockManagerType()
        {
            this._block = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlock>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlock
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerTypeBlock" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerTypeBlock" /> class.</para>
        /// </summary>
        public BlockManagerTypeBlock()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockProperties>();
            this._speed = new System.Collections.ObjectModel.Collection<object>();
            this._permissive = new System.Collections.ObjectModel.Collection<object>();
            this._occupancysensor = new System.Collections.ObjectModel.Collection<string>();
            this._sensor = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockSensor>();
            this._reporter = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockReporter>();
            this._deniedBlocks = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockDeniedBlocks>();
            this._path = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPath>();
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<object> _speed;
        
        [System.Xml.Serialization.XmlElementAttribute("speed")]
        public System.Collections.ObjectModel.Collection<object> Speed
        {
            get
            {
                return this._speed;
            }
            private set
            {
                this._speed = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Speed-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Speed collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified
        {
            get
            {
                return (this.Speed.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<object> _permissive;
        
        [System.Xml.Serialization.XmlElementAttribute("permissive")]
        public System.Collections.ObjectModel.Collection<object> Permissive
        {
            get
            {
                return this._permissive;
            }
            private set
            {
                this._permissive = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Permissive-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Permissive collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PermissiveSpecified
        {
            get
            {
                return (this.Permissive.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _occupancysensor;
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("occupancysensor")]
        public System.Collections.ObjectModel.Collection<string> Occupancysensor
        {
            get
            {
                return this._occupancysensor;
            }
            private set
            {
                this._occupancysensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Occupancysensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Occupancysensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancysensorSpecified
        {
            get
            {
                return (this.Occupancysensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockReporter> _reporter;
        
        [System.Xml.Serialization.XmlElementAttribute("reporter")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockReporter> Reporter
        {
            get
            {
                return this._reporter;
            }
            private set
            {
                this._reporter = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reporter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reporter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReporterSpecified
        {
            get
            {
                return (this.Reporter.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockDeniedBlocks> _deniedBlocks;
        
        [System.Xml.Serialization.XmlElementAttribute("deniedBlocks")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockDeniedBlocks> DeniedBlocks
        {
            get
            {
                return this._deniedBlocks;
            }
            private set
            {
                this._deniedBlocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeniedBlocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeniedBlocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeniedBlocksSpecified
        {
            get
            {
                return (this.DeniedBlocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPath> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPath> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("curve")]
        public string Curve { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPropertiesProperty> _property;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPropertiesProperty> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerTypeBlockProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerTypeBlockProperties" /> class.</para>
        /// </summary>
        public BlockManagerTypeBlockProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPropertiesProperty>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPropertiesProperty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPropertiesProperty
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public BlockManagerTypeBlockPropertiesPropertyKey Key { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public BlockManagerTypeBlockPropertiesPropertyValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPropertiesPropertyKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPropertiesPropertyKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPropertiesPropertyValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPropertiesPropertyValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockSensor
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockReporter", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockReporter
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("useCurrent")]
        public JMRI.YesNoType UseCurrent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseCurrent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseCurrent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCurrentSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockDeniedBlocks", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockDeniedBlocks
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _block;
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public System.Collections.ObjectModel.Collection<string> Block
        {
            get
            {
                return this._block;
            }
            private set
            {
                this._block = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerTypeBlockDeniedBlocks" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerTypeBlockDeniedBlocks" /> class.</para>
        /// </summary>
        public BlockManagerTypeBlockDeniedBlocks()
        {
            this._block = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPath", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPath
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansetting> _beansetting;
        
        [System.Xml.Serialization.XmlElementAttribute("beansetting")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansetting> Beansetting
        {
            get
            {
                return this._beansetting;
            }
            private set
            {
                this._beansetting = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Beansetting-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Beansetting collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeansettingSpecified
        {
            get
            {
                return (this.Beansetting.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerTypeBlockPath" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerTypeBlockPath" /> class.</para>
        /// </summary>
        public BlockManagerTypeBlockPath()
        {
            this._beansetting = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansetting>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("todir")]
        public string Todir { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromdir")]
        public string Fromdir { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("block")]
        public string Block { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPathBeansetting", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPathBeansetting
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansettingTurnout> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansettingTurnout> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BlockManagerTypeBlockPathBeansetting" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BlockManagerTypeBlockPathBeansetting" /> class.</para>
        /// </summary>
        public BlockManagerTypeBlockPathBeansetting()
        {
            this._turnout = new System.Collections.ObjectModel.Collection<BlockManagerTypeBlockPathBeansettingTurnout>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("setting")]
        public string Setting { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BlockManagerTypeBlockPathBeansettingTurnout", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockManagerTypeBlockPathBeansettingTurnout
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of an OBlockManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of an OBlockManager implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblock> _oblock;
        
        [System.Xml.Serialization.XmlElementAttribute("oblock")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblock> Oblock
        {
            get
            {
                return this._oblock;
            }
            private set
            {
                this._oblock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Oblock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Oblock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OblockSpecified
        {
            get
            {
                return (this.Oblock.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockManagerType" /> class.</para>
        /// </summary>
        public OBlockManagerType()
        {
            this._oblock = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblock>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nextSysNum")]
        public string NextSysNum { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblock
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockManagerTypeOblock" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockManagerTypeOblock" /> class.</para>
        /// </summary>
        public OBlockManagerTypeOblock()
        {
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._sensor = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockSensor>();
            this._path = new System.Collections.ObjectModel.Collection<OBlockPathType>();
            this._portal = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortal>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("errorSensor")]
        public OBlockManagerTypeOblockErrorSensor ErrorSensor { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockPathType> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<OBlockPathType> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortal> _portal;
        
        [System.Xml.Serialization.XmlElementAttribute("portal")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortal> Portal
        {
            get
            {
                return this._portal;
            }
            private set
            {
                this._portal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Portal-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Portal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortalSpecified
        {
            get
            {
                return (this.Portal.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("curve")]
        public string Curve { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("units")]
        public JMRI.TrueFalseType Units { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Units-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Units property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("permissive")]
        public JMRI.TrueFalseType Permissive { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Permissive-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Permissive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PermissiveSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("speedNotch")]
        public string SpeedNotch { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockSensor
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockErrorSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockErrorSensor
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture of setting elements within oblocks</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture of setting elements within oblocks")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockPathType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockPathType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockSettingType> _setting;
        
        [System.Xml.Serialization.XmlElementAttribute("setting")]
        public System.Collections.ObjectModel.Collection<OBlockSettingType> Setting
        {
            get
            {
                return this._setting;
            }
            private set
            {
                this._setting = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Setting-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Setting collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettingSpecified
        {
            get
            {
                return (this.Setting.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockPathType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockPathType" /> class.</para>
        /// </summary>
        public OBlockPathType()
        {
            this._setting = new System.Collections.ObjectModel.Collection<OBlockSettingType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pathName")]
        public string PathName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blockName")]
        public string BlockName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromDirection")]
        public string FromDirection { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toDirection")]
        public string ToDirection { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromPortal")]
        public string FromPortal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toPortal")]
        public string ToPortal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture of path elements within oblocks</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture of path elements within oblocks")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockSettingType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockSettingType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("set")]
        public string Set { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnout")]
        public string Turnout { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockPortal", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockPortal
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromBlock> _fromBlock;
        
        [System.Xml.Serialization.XmlElementAttribute("fromBlock")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromBlock> FromBlock
        {
            get
            {
                return this._fromBlock;
            }
            private set
            {
                this._fromBlock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FromBlock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FromBlock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromBlockSpecified
        {
            get
            {
                return (this.FromBlock.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockManagerTypeOblockPortal" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockManagerTypeOblockPortal" /> class.</para>
        /// </summary>
        public OBlockManagerTypeOblockPortal()
        {
            this._fromBlock = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromBlock>();
            this._toBlock = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToBlock>();
            this._fromSignal = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromSignal>();
            this._toSignal = new System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToSignal>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToBlock> _toBlock;
        
        [System.Xml.Serialization.XmlElementAttribute("toBlock")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToBlock> ToBlock
        {
            get
            {
                return this._toBlock;
            }
            private set
            {
                this._toBlock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToBlock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToBlock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBlockSpecified
        {
            get
            {
                return (this.ToBlock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromSignal> _fromSignal;
        
        [System.Xml.Serialization.XmlElementAttribute("fromSignal")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalFromSignal> FromSignal
        {
            get
            {
                return this._fromSignal;
            }
            private set
            {
                this._fromSignal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FromSignal-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FromSignal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromSignalSpecified
        {
            get
            {
                return (this.FromSignal.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToSignal> _toSignal;
        
        [System.Xml.Serialization.XmlElementAttribute("toSignal")]
        public System.Collections.ObjectModel.Collection<OBlockManagerTypeOblockPortalToSignal> ToSignal
        {
            get
            {
                return this._toSignal;
            }
            private set
            {
                this._toSignal = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToSignal-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToSignal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToSignalSpecified
        {
            get
            {
                return (this.ToSignal.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("portalName")]
        public string PortalName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pathName")]
        public string PathName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromDirection")]
        public string FromDirection { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toDirection")]
        public string ToDirection { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromPortal")]
        public string FromPortal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toPortal")]
        public string ToPortal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockPortalFromBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockPortalFromBlock
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockPathType> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<OBlockPathType> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockManagerTypeOblockPortalFromBlock" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockManagerTypeOblockPortalFromBlock" /> class.</para>
        /// </summary>
        public OBlockManagerTypeOblockPortalFromBlock()
        {
            this._path = new System.Collections.ObjectModel.Collection<OBlockPathType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blockName")]
        public string BlockName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockPortalToBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockPortalToBlock
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OBlockPathType> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<OBlockPathType> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OBlockManagerTypeOblockPortalToBlock" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OBlockManagerTypeOblockPortalToBlock" /> class.</para>
        /// </summary>
        public OBlockManagerTypeOblockPortalToBlock()
        {
            this._path = new System.Collections.ObjectModel.Collection<OBlockPathType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blockName")]
        public string BlockName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockPortalFromSignal", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockPortalFromSignal
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalName")]
        public string SignalName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("signalDelay")]
        public float SignalDelay { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalDelay-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SignalDelay property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalDelaySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OBlockManagerTypeOblockPortalToSignal", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OBlockManagerTypeOblockPortalToSignal
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalName")]
        public string SignalName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("signalDelay")]
        public float SignalDelay { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalDelay-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SignalDelay property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalDelaySpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing a single property within a sections element's properties element.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing a single property within a sections element\'s" +
        " properties element.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionPropertyType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionPropertyType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SectionPropertyTypeKey> _key;
        
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public System.Collections.ObjectModel.Collection<SectionPropertyTypeKey> Key
        {
            get
            {
                return this._key;
            }
            private set
            {
                this._key = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Key-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Key collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeySpecified
        {
            get
            {
                return (this.Key.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SectionPropertyType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SectionPropertyType" /> class.</para>
        /// </summary>
        public SectionPropertyType()
        {
            this._key = new System.Collections.ObjectModel.Collection<SectionPropertyTypeKey>();
            this._value = new System.Collections.ObjectModel.Collection<SectionPropertyTypeValue>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SectionPropertyTypeValue> _value;
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public System.Collections.ObjectModel.Collection<SectionPropertyTypeValue> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Value-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionPropertyTypeKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionPropertyTypeKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the implementing Java class</para>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the implementing Java class")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionPropertyTypeValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionPropertyTypeValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the implementing Java class</para>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the implementing Java class")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a SectionManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a SectionManager implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SectionManagerTypeSection> _section;
        
        [System.Xml.Serialization.XmlElementAttribute("section")]
        public System.Collections.ObjectModel.Collection<SectionManagerTypeSection> Section
        {
            get
            {
                return this._section;
            }
            private set
            {
                this._section = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Section-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Section collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SectionSpecified
        {
            get
            {
                return (this.Section.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SectionManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SectionManagerType" /> class.</para>
        /// </summary>
        public SectionManagerType()
        {
            this._section = new System.Collections.ObjectModel.Collection<SectionManagerTypeSection>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerTypeSection", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionManagerTypeSection
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>May be Deprecated after 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("May be Deprecated after 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fsensorname")]
        public string Fsensorname { get; set; }
        
        /// <summary>
        /// <para>Will be Deprecated after 2.9.6 in favor of separate element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Will be Deprecated after 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("fsensorname")]
        public string Fsensorname_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("rsensorname")]
        public string Rsensorname { get; set; }
        
        /// <summary>
        /// <para>Will be Deprecated after 2.9.6 in favor of separate element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Will be Deprecated after 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("rsensorname")]
        public string Rsensorname_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fstopsensorname")]
        public string Fstopsensorname { get; set; }
        
        /// <summary>
        /// <para>Will be Deprecated after 2.9.6 in favor of separate element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Will be Deprecated after 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("fstopsensorname")]
        public string Fstopsensorname_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("rstopsensorname")]
        public string Rstopsensorname { get; set; }
        
        /// <summary>
        /// <para>Will be Deprecated after 2.9.6 in favor of separate element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Will be Deprecated after 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("rstopsensorname")]
        public string Rstopsensorname_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SectionManagerTypeSectionBlockentry> _blockentry;
        
        [System.Xml.Serialization.XmlElementAttribute("blockentry")]
        public System.Collections.ObjectModel.Collection<SectionManagerTypeSectionBlockentry> Blockentry
        {
            get
            {
                return this._blockentry;
            }
            private set
            {
                this._blockentry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blockentry-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Blockentry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockentrySpecified
        {
            get
            {
                return (this.Blockentry.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SectionManagerTypeSection" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SectionManagerTypeSection" /> class.</para>
        /// </summary>
        public SectionManagerTypeSection()
        {
            this._blockentry = new System.Collections.ObjectModel.Collection<SectionManagerTypeSectionBlockentry>();
            this._entrypoint = new System.Collections.ObjectModel.Collection<SectionManagerTypeSectionEntrypoint>();
            this._properties = new System.Collections.ObjectModel.Collection<SignalMastPropertyType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SectionManagerTypeSectionEntrypoint> _entrypoint;
        
        [System.Xml.Serialization.XmlElementAttribute("entrypoint")]
        public System.Collections.ObjectModel.Collection<SectionManagerTypeSectionEntrypoint> Entrypoint
        {
            get
            {
                return this._entrypoint;
            }
            private set
            {
                this._entrypoint = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Entrypoint-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Entrypoint collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntrypointSpecified
        {
            get
            {
                return (this.Entrypoint.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastPropertyType> _properties;
        
        [System.Xml.Serialization.XmlArrayAttribute("properties")]
        [System.Xml.Serialization.XmlArrayItemAttribute("property")]
        public System.Collections.ObjectModel.Collection<SignalMastPropertyType> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private SectionManagerTypeSectionCreationtype _creationtype = JMRI.SectionManagerTypeSectionCreationtype.Userdefined;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.SectionManagerTypeSectionCreationtype.Userdefined)]
        [System.Xml.Serialization.XmlAttributeAttribute("creationtype")]
        public SectionManagerTypeSectionCreationtype Creationtype
        {
            get
            {
                return this._creationtype;
            }
            set
            {
                this._creationtype = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerTypeSectionBlockentry", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionManagerTypeSectionBlockentry
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("sName")]
        public string SName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("order")]
        public string Order { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerTypeSectionEntrypoint", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionManagerTypeSectionEntrypoint
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromblock")]
        public string Fromblock { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toblock")]
        public string Toblock { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("direction")]
        public string Direction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public string Fixed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromblockdirection")]
        public string Fromblockdirection { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerTypeSectionProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectionManagerTypeSectionProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SectionManagerTypeSectionProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SectionManagerTypeSectionProperties" /> class.</para>
        /// </summary>
        public SectionManagerTypeSectionProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<SignalMastPropertyType>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a single property within a signalmast element's properties element.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a single property within a signalmast elemen" +
        "t\'s properties element.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastPropertyType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastPropertyType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastPropertyTypeKey> _key;
        
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public System.Collections.ObjectModel.Collection<SignalMastPropertyTypeKey> Key
        {
            get
            {
                return this._key;
            }
            private set
            {
                this._key = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Key-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Key collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeySpecified
        {
            get
            {
                return (this.Key.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastPropertyType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastPropertyType" /> class.</para>
        /// </summary>
        public SignalMastPropertyType()
        {
            this._key = new System.Collections.ObjectModel.Collection<SignalMastPropertyTypeKey>();
            this._value = new System.Collections.ObjectModel.Collection<SignalMastPropertyTypeValue>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastPropertyTypeValue> _value;
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public System.Collections.ObjectModel.Collection<SignalMastPropertyTypeValue> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Value-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastPropertyTypeKey", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastPropertyTypeKey
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the implementing Java class</para>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the implementing Java class")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastPropertyTypeValue", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastPropertyTypeValue
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the implementing Java class</para>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the implementing Java class")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SectionManagerTypeSectionCreationtype", Namespace="", AnonymousType=true)]
    public enum SectionManagerTypeSectionCreationtype
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("userdefined")]
        Userdefined,
        
        [System.Xml.Serialization.XmlEnumAttribute("signalmastlogic")]
        Signalmastlogic,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a TransitManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a TransitManager implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TransitManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransitManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TransitManagerTypeTransit> _transit;
        
        [System.Xml.Serialization.XmlElementAttribute("transit")]
        public System.Collections.ObjectModel.Collection<TransitManagerTypeTransit> Transit
        {
            get
            {
                return this._transit;
            }
            private set
            {
                this._transit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Transit-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Transit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransitSpecified
        {
            get
            {
                return (this.Transit.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TransitManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TransitManagerType" /> class.</para>
        /// </summary>
        public TransitManagerType()
        {
            this._transit = new System.Collections.ObjectModel.Collection<TransitManagerTypeTransit>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TransitManagerTypeTransit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransitManagerTypeTransit
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsection> _transitsection;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("transitsection")]
        public System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsection> Transitsection
        {
            get
            {
                return this._transitsection;
            }
            private set
            {
                this._transitsection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TransitManagerTypeTransit" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TransitManagerTypeTransit" /> class.</para>
        /// </summary>
        public TransitManagerTypeTransit()
        {
            this._transitsection = new System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsection>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TransitManagerTypeTransitTransitsection", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransitManagerTypeTransitTransitsection
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsectionTransitsectionaction> _transitsectionaction;
        
        [System.Xml.Serialization.XmlElementAttribute("transitsectionaction")]
        public System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsectionTransitsectionaction> Transitsectionaction
        {
            get
            {
                return this._transitsectionaction;
            }
            private set
            {
                this._transitsectionaction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Transitsectionaction-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Transitsectionaction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransitsectionactionSpecified
        {
            get
            {
                return (this.Transitsectionaction.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TransitManagerTypeTransitTransitsection" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TransitManagerTypeTransitTransitsection" /> class.</para>
        /// </summary>
        public TransitManagerTypeTransitTransitsection()
        {
            this._transitsectionaction = new System.Collections.ObjectModel.Collection<TransitManagerTypeTransitTransitsectionTransitsectionaction>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sectionname")]
        public string Sectionname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sequence")]
        public string Sequence { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("direction")]
        public string Direction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("alternate")]
        public JMRI.YesNoType Alternate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alternate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alternate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlternateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("safe")]
        public JMRI.YesNoType Safe { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Safe-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Safe property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SafeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("stopallocatingsensor")]
        public string Stopallocatingsensor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TransitManagerTypeTransitTransitsectionTransitsectionaction", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransitManagerTypeTransitTransitsectionTransitsectionaction
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("whencode")]
        public string Whencode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whatcode")]
        public string Whatcode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whendata")]
        public string Whendata { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whenstring")]
        public string Whenstring { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whatdata1")]
        public string Whatdata1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whatdata2")]
        public string Whatdata2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("whatstring")]
        public string Whatstring { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a Timebase implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a Timebase implementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TimebaseType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimebaseType
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("time")]
        public string Time { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rate")]
        public float Rate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Rate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startrate")]
        public float Startrate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Startrate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Startrate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartrateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("run")]
        public JMRI.YesNoType Run { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Run-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Run property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RunSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("master")]
        public JMRI.YesNoType Master { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Master-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Master property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MasterSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("mastername")]
        public string Mastername { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sync")]
        public JMRI.YesNoType Sync { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sync-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sync property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SyncSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("correct")]
        public JMRI.YesNoType Correct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Correct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Correct property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CorrectSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("display")]
        public JMRI.YesNoType Display { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Display-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Display property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplaySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("showbutton")]
        public JMRI.YesNoType Showbutton { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Showbutton-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Showbutton property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowbuttonSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startstopped")]
        public JMRI.YesNoType Startstopped { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Startstopped-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Startstopped property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartstoppedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startrunning")]
        public JMRI.YesNoType Startrunning { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Startrunning-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Startrunning property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartrunningSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startsettime")]
        public JMRI.YesNoType Startsettime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Startsettime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Startsettime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartsettimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startsetrate")]
        public JMRI.YesNoType Startsetrate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Startsetrate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Startsetrate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartsetrateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("startclockoption")]
        public string Startclockoption { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a SignalHeadManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a SignalHeadManager implement" +
        "ation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalHeadType> _signalhead;
        
        [System.Xml.Serialization.XmlElementAttribute("signalhead")]
        public System.Collections.ObjectModel.Collection<SignalHeadType> Signalhead
        {
            get
            {
                return this._signalhead;
            }
            private set
            {
                this._signalhead = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalhead-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalhead collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalheadSpecified
        {
            get
            {
                return (this.Signalhead.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalHeadManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalHeadManagerType" /> class.</para>
        /// </summary>
        public SignalHeadManagerType()
        {
            this._signalhead = new System.Collections.ObjectModel.Collection<SignalHeadType>();
            this._dccsignalhead = new System.Collections.ObjectModel.Collection<DccSignalHeadType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalHeadType> _dccsignalhead;
        
        [System.Xml.Serialization.XmlElementAttribute("dccsignalhead")]
        public System.Collections.ObjectModel.Collection<DccSignalHeadType> Dccsignalhead
        {
            get
            {
                return this._dccsignalhead;
            }
            private set
            {
                this._dccsignalhead = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dccsignalhead-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dccsignalhead collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DccsignalheadSpecified
        {
            get
            {
                return (this.Dccsignalhead.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalHead implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalHead implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalHeadType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalHeadType" /> class.</para>
        /// </summary>
        public SignalHeadType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._useAddressOffSet = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._packetsendcount = new System.Collections.ObjectModel.Collection<int>();
            this._turnout = new System.Collections.ObjectModel.Collection<SignalHeadTypeTurnout>();
            this._aspect = new System.Collections.ObjectModel.Collection<SignalHeadTypeAspect>();
            this._appearance = new System.Collections.ObjectModel.Collection<SignalHeadTypeAppearance>();
            this._turnoutname = new System.Collections.ObjectModel.Collection<SignalHeadTypeTurnoutname>();
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element; null OK due to SE8c bug</para>
        /// <para>General definition of "userName" attribute type
        ///          that can contain zero-length content.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element; null OK due to SE8c bug")]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _useAddressOffSet;
        
        [System.Xml.Serialization.XmlElementAttribute("useAddressOffSet")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> UseAddressOffSet
        {
            get
            {
                return this._useAddressOffSet;
            }
            private set
            {
                this._useAddressOffSet = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseAddressOffSet-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UseAddressOffSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseAddressOffSetSpecified
        {
            get
            {
                return (this.UseAddressOffSet.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<int> _packetsendcount;
        
        [System.Xml.Serialization.XmlElementAttribute("packetsendcount")]
        public System.Collections.ObjectModel.Collection<int> Packetsendcount
        {
            get
            {
                return this._packetsendcount;
            }
            private set
            {
                this._packetsendcount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Packetsendcount-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Packetsendcount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketsendcountSpecified
        {
            get
            {
                return (this.Packetsendcount.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalHeadTypeTurnout> _turnout;
        
        /// <summary>
        /// <para>Deprecated in JMRI 2.7.7 in favor of turnoutname element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated in JMRI 2.7.7 in favor of turnoutname element")]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<SignalHeadTypeTurnout> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalHeadTypeAspect> _aspect;
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public System.Collections.ObjectModel.Collection<SignalHeadTypeAspect> Aspect
        {
            get
            {
                return this._aspect;
            }
            private set
            {
                this._aspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectSpecified
        {
            get
            {
                return (this.Aspect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalHeadTypeAppearance> _appearance;
        
        [System.Xml.Serialization.XmlElementAttribute("appearance")]
        public System.Collections.ObjectModel.Collection<SignalHeadTypeAppearance> Appearance
        {
            get
            {
                return this._appearance;
            }
            private set
            {
                this._appearance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Appearance-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Appearance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppearanceSpecified
        {
            get
            {
                return (this.Appearance.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalHeadTypeTurnoutname> _turnoutname;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutname")]
        public System.Collections.ObjectModel.Collection<SignalHeadTypeTurnoutname> Turnoutname
        {
            get
            {
                return this._turnoutname;
            }
            private set
            {
                this._turnoutname = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnoutname-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnoutname collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutnameSpecified
        {
            get
            {
                return (this.Turnoutname.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("home")]
        public JMRI.YesNoType Home { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Home-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Home property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("aspects")]
        public string Aspects { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadTypeTurnout", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadTypeTurnout
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadTypeAspect", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadTypeAspect
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("number")]
        public string Number { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public string Defines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadTypeAppearance", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadTypeAppearance
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public JMRI.SignalColorType Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the appearance which is associated with the turnout state</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the appearance which is associated with the turnout state")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public JMRI.TurnoutStateType Defines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalHeadTypeTurnoutname", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalHeadTypeTurnoutname
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies which color the turnout drives</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies which color the turnout drives")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public string Defines { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one DccSignalHead implementation.
    ///          Obsolete/deprecated in 2.7.7, but around for until files are rewritten</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one DccSignalHead implementat" +
        "ion. Obsolete/deprecated in 2.7.7, but around for until files are rewritten")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalHeadType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalHeadType
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type
        ///          that can contain zero-length content.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of a SignalMastManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of a SignalMastManager implemen" +
        "tation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutSignalMastType> _turnoutsignalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutsignalmast")]
        public System.Collections.ObjectModel.Collection<TurnoutSignalMastType> Turnoutsignalmast
        {
            get
            {
                return this._turnoutsignalmast;
            }
            private set
            {
                this._turnoutsignalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnoutsignalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnoutsignalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutsignalmastSpecified
        {
            get
            {
                return (this.Turnoutsignalmast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastManagerType" /> class.</para>
        /// </summary>
        public SignalMastManagerType()
        {
            this._turnoutsignalmast = new System.Collections.ObjectModel.Collection<TurnoutSignalMastType>();
            this._dccsignalmast = new System.Collections.ObjectModel.Collection<DccSignalMastType>();
            this._olcbsignalmast = new System.Collections.ObjectModel.Collection<OlcbSignalMastType>();
            this._matrixsignalmast = new System.Collections.ObjectModel.Collection<MatrixSignalMastType>();
            this._signalmast = new System.Collections.ObjectModel.Collection<SignalMastType>();
            this._virtualsignalmast = new System.Collections.ObjectModel.Collection<SignalMastType>();
            this._signalmastrepeater = new System.Collections.ObjectModel.Collection<SignalMastRepeaterType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalMastType> _dccsignalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("dccsignalmast")]
        public System.Collections.ObjectModel.Collection<DccSignalMastType> Dccsignalmast
        {
            get
            {
                return this._dccsignalmast;
            }
            private set
            {
                this._dccsignalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dccsignalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dccsignalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DccsignalmastSpecified
        {
            get
            {
                return (this.Dccsignalmast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastType> _olcbsignalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("olcbsignalmast")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastType> Olcbsignalmast
        {
            get
            {
                return this._olcbsignalmast;
            }
            private set
            {
                this._olcbsignalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Olcbsignalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Olcbsignalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OlcbsignalmastSpecified
        {
            get
            {
                return (this.Olcbsignalmast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastType> _matrixsignalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("matrixsignalmast")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastType> Matrixsignalmast
        {
            get
            {
                return this._matrixsignalmast;
            }
            private set
            {
                this._matrixsignalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Matrixsignalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Matrixsignalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MatrixsignalmastSpecified
        {
            get
            {
                return (this.Matrixsignalmast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastType> _signalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmast")]
        public System.Collections.ObjectModel.Collection<SignalMastType> Signalmast
        {
            get
            {
                return this._signalmast;
            }
            private set
            {
                this._signalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmastSpecified
        {
            get
            {
                return (this.Signalmast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastType> _virtualsignalmast;
        
        [System.Xml.Serialization.XmlElementAttribute("virtualsignalmast")]
        public System.Collections.ObjectModel.Collection<SignalMastType> Virtualsignalmast
        {
            get
            {
                return this._virtualsignalmast;
            }
            private set
            {
                this._virtualsignalmast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Virtualsignalmast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Virtualsignalmast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VirtualsignalmastSpecified
        {
            get
            {
                return (this.Virtualsignalmast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastRepeaterType> _signalmastrepeater;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmastrepeater")]
        public System.Collections.ObjectModel.Collection<SignalMastRepeaterType> Signalmastrepeater
        {
            get
            {
                return this._signalmastrepeater;
            }
            private set
            {
                this._signalmastrepeater = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmastrepeater-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmastrepeater collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmastrepeaterSpecified
        {
            get
            {
                return (this.Signalmastrepeater.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one Turnout Based Signal Mast implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one Turnout Based Signal Mas" +
        "t implementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutSignalMastType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutSignalMastType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TurnoutSignalMastType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TurnoutSignalMastType" /> class.</para>
        /// </summary>
        public TurnoutSignalMastType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeProperties>();
            this._unlit = new System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeUnlit>();
            this._aspect = new System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeAspect>();
            this._disabledAspects = new System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeDisabledAspects>();
            this._resetPreviousStates = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeUnlit> _unlit;
        
        [System.Xml.Serialization.XmlElementAttribute("unlit")]
        public System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeUnlit> Unlit
        {
            get
            {
                return this._unlit;
            }
            private set
            {
                this._unlit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unlit-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unlit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnlitSpecified
        {
            get
            {
                return (this.Unlit.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeAspect> _aspect;
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeAspect> Aspect
        {
            get
            {
                return this._aspect;
            }
            private set
            {
                this._aspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectSpecified
        {
            get
            {
                return (this.Aspect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeDisabledAspects> _disabledAspects;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspects")]
        public System.Collections.ObjectModel.Collection<TurnoutSignalMastTypeDisabledAspects> DisabledAspects
        {
            get
            {
                return this._disabledAspects;
            }
            private set
            {
                this._disabledAspects = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspects-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspects collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectsSpecified
        {
            get
            {
                return (this.DisabledAspects.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _resetPreviousStates;
        
        /// <summary>
        /// <para>"yes" means that the dark turnout command should be sent before each new aspects turnout command</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("\"yes\" means that the dark turnout command should be sent before each new aspects " +
            "turnout command")]
        [System.Xml.Serialization.XmlElementAttribute("resetPreviousStates")]
        public System.Collections.ObjectModel.Collection<string> ResetPreviousStates
        {
            get
            {
                return this._resetPreviousStates;
            }
            private set
            {
                this._resetPreviousStates = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResetPreviousStates-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ResetPreviousStates collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResetPreviousStatesSpecified
        {
            get
            {
                return (this.ResetPreviousStates.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutSignalMastTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutSignalMastTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TurnoutSignalMastTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TurnoutSignalMastTypeProperties" /> class.</para>
        /// </summary>
        public TurnoutSignalMastTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutSignalMastTypeUnlit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutSignalMastTypeUnlit
    {
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutstate")]
        public string Turnoutstate { get; set; }
        
        /// <summary>
        /// <para>Specifies if the signal can go unlit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the signal can go unlit")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("allowed")]
        public string Allowed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutSignalMastTypeAspect", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutSignalMastTypeAspect
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutstate")]
        public string Turnoutstate { get; set; }
        
        /// <summary>
        /// <para>Specifies which appearance the turnout drives</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies which appearance the turnout drives")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public string Defines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TurnoutSignalMastTypeDisabledAspects", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnoutSignalMastTypeDisabledAspects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _disabledAspect;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspect")]
        public System.Collections.ObjectModel.Collection<string> DisabledAspect
        {
            get
            {
                return this._disabledAspect;
            }
            private set
            {
                this._disabledAspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectSpecified
        {
            get
            {
                return (this.DisabledAspect.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TurnoutSignalMastTypeDisabledAspects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TurnoutSignalMastTypeDisabledAspects" /> class.</para>
        /// </summary>
        public TurnoutSignalMastTypeDisabledAspects()
        {
            this._disabledAspect = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one DCC Based Signal Mast implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one DCC Based Signal Mast im" +
        "plementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalMastType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalMastType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DccSignalMastType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DccSignalMastType" /> class.</para>
        /// </summary>
        public DccSignalMastType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<DccSignalMastTypeProperties>();
            this._unlit = new System.Collections.ObjectModel.Collection<DccSignalMastTypeUnlit>();
            this._packetsendcount = new System.Collections.ObjectModel.Collection<int>();
            this._aspect = new System.Collections.ObjectModel.Collection<DccSignalMastTypeAspect>();
            this._disabledAspects = new System.Collections.ObjectModel.Collection<DccSignalMastTypeDisabledAspects>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalMastTypeProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<DccSignalMastTypeProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalMastTypeUnlit> _unlit;
        
        [System.Xml.Serialization.XmlElementAttribute("unlit")]
        public System.Collections.ObjectModel.Collection<DccSignalMastTypeUnlit> Unlit
        {
            get
            {
                return this._unlit;
            }
            private set
            {
                this._unlit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unlit-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unlit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnlitSpecified
        {
            get
            {
                return (this.Unlit.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<int> _packetsendcount;
        
        [System.Xml.Serialization.XmlElementAttribute("packetsendcount")]
        public System.Collections.ObjectModel.Collection<int> Packetsendcount
        {
            get
            {
                return this._packetsendcount;
            }
            private set
            {
                this._packetsendcount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Packetsendcount-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Packetsendcount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketsendcountSpecified
        {
            get
            {
                return (this.Packetsendcount.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalMastTypeAspect> _aspect;
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public System.Collections.ObjectModel.Collection<DccSignalMastTypeAspect> Aspect
        {
            get
            {
                return this._aspect;
            }
            private set
            {
                this._aspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectSpecified
        {
            get
            {
                return (this.Aspect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DccSignalMastTypeDisabledAspects> _disabledAspects;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspects")]
        public System.Collections.ObjectModel.Collection<DccSignalMastTypeDisabledAspects> DisabledAspects
        {
            get
            {
                return this._disabledAspects;
            }
            private set
            {
                this._disabledAspects = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspects-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspects collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectsSpecified
        {
            get
            {
                return (this.DisabledAspects.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalMastTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalMastTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DccSignalMastTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DccSignalMastTypeProperties" /> class.</para>
        /// </summary>
        public DccSignalMastTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalMastTypeUnlit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalMastTypeUnlit
    {
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public string Aspect { get; set; }
        
        /// <summary>
        /// <para>Specifies if the signal can go unlit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the signal can go unlit")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("allowed")]
        public string Allowed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalMastTypeAspect", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalMastTypeAspect
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Specifies which appearance the turnout drives</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies which appearance the turnout drives")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public string Defines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DccSignalMastTypeDisabledAspects", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DccSignalMastTypeDisabledAspects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _disabledAspect;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspect")]
        public System.Collections.ObjectModel.Collection<string> DisabledAspect
        {
            get
            {
                return this._disabledAspect;
            }
            private set
            {
                this._disabledAspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectSpecified
        {
            get
            {
                return (this.DisabledAspect.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DccSignalMastTypeDisabledAspects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DccSignalMastTypeDisabledAspects" /> class.</para>
        /// </summary>
        public DccSignalMastTypeDisabledAspects()
        {
            this._disabledAspect = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one OpenLCB Based Signal Mast implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one OpenLCB Based Signal Mas" +
        "t implementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OlcbSignalMastType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OlcbSignalMastType" /> class.</para>
        /// </summary>
        public OlcbSignalMastType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<OlcbSignalMastTypeProperties>();
            this._lit = new System.Collections.ObjectModel.Collection<OlcbSignalMastTypeLit>();
            this._held = new System.Collections.ObjectModel.Collection<OlcbSignalMastTypeHeld>();
            this._aspect = new System.Collections.ObjectModel.Collection<OlcbSignalMastTypeAspect>();
            this._disabledAspects = new System.Collections.ObjectModel.Collection<OlcbSignalMastTypeDisabledAspects>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastTypeProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastTypeProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastTypeLit> _lit;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("lit")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastTypeLit> Lit
        {
            get
            {
                return this._lit;
            }
            private set
            {
                this._lit = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastTypeHeld> _held;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("held")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastTypeHeld> Held
        {
            get
            {
                return this._held;
            }
            private set
            {
                this._held = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastTypeAspect> _aspect;
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastTypeAspect> Aspect
        {
            get
            {
                return this._aspect;
            }
            private set
            {
                this._aspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectSpecified
        {
            get
            {
                return (this.Aspect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OlcbSignalMastTypeDisabledAspects> _disabledAspects;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspects")]
        public System.Collections.ObjectModel.Collection<OlcbSignalMastTypeDisabledAspects> DisabledAspects
        {
            get
            {
                return this._disabledAspects;
            }
            private set
            {
                this._disabledAspects = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspects-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspects collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectsSpecified
        {
            get
            {
                return (this.DisabledAspects.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OlcbSignalMastTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OlcbSignalMastTypeProperties" /> class.</para>
        /// </summary>
        public OlcbSignalMastTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType>();
        }
    }
    
    /// <summary>
    /// <para>Specifies eventsIDs to set lit and not lit</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Specifies eventsIDs to set lit and not lit")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastTypeLit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastTypeLit
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("lit")]
        public string Lit { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("notlit")]
        public string Notlit { get; set; }
    }
    
    /// <summary>
    /// <para>Specifies eventsIDs to set held and not held</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Specifies eventsIDs to set held and not held")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastTypeHeld", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastTypeHeld
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("held")]
        public string Held { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("notheld")]
        public string Notheld { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastTypeAspect", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastTypeAspect
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("event")]
        public string Event { get; set; }
        
        /// <summary>
        /// <para>Specifies which appearance corresponds to this EventID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies which appearance corresponds to this EventID")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defines")]
        public string Defines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OlcbSignalMastTypeDisabledAspects", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OlcbSignalMastTypeDisabledAspects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _disabledAspect;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspect")]
        public System.Collections.ObjectModel.Collection<string> DisabledAspect
        {
            get
            {
                return this._disabledAspect;
            }
            private set
            {
                this._disabledAspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectSpecified
        {
            get
            {
                return (this.DisabledAspect.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OlcbSignalMastTypeDisabledAspects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OlcbSignalMastTypeDisabledAspects" /> class.</para>
        /// </summary>
        public OlcbSignalMastTypeDisabledAspects()
        {
            this._disabledAspect = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one Matrix Output Signal Mast implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one Matrix Output Signal Mas" +
        "t implementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatrixSignalMastType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatrixSignalMastType" /> class.</para>
        /// </summary>
        public MatrixSignalMastType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeProperties>();
            this._unlit = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeUnlit>();
            this._delay = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDelay>();
            this._outputs = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputs>();
            this._bitStrings = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStrings>();
            this._disabledAspects = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDisabledAspects>();
            this._resetPreviousStates = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeUnlit> _unlit;
        
        [System.Xml.Serialization.XmlElementAttribute("unlit")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeUnlit> Unlit
        {
            get
            {
                return this._unlit;
            }
            private set
            {
                this._unlit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unlit-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unlit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnlitSpecified
        {
            get
            {
                return (this.Unlit.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDelay> _delay;
        
        [System.Xml.Serialization.XmlElementAttribute("delay")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDelay> Delay
        {
            get
            {
                return this._delay;
            }
            private set
            {
                this._delay = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Delay-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Delay collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DelaySpecified
        {
            get
            {
                return (this.Delay.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputs> _outputs;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("outputs")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputs> Outputs
        {
            get
            {
                return this._outputs;
            }
            private set
            {
                this._outputs = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStrings> _bitStrings;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bitStrings")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStrings> BitStrings
        {
            get
            {
                return this._bitStrings;
            }
            private set
            {
                this._bitStrings = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDisabledAspects> _disabledAspects;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspects")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeDisabledAspects> DisabledAspects
        {
            get
            {
                return this._disabledAspects;
            }
            private set
            {
                this._disabledAspects = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspects-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspects collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectsSpecified
        {
            get
            {
                return (this.DisabledAspects.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _resetPreviousStates;
        
        /// <summary>
        /// <para>"yes" means that the dark turnout command should be sent before each new aspects turnout command</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("\"yes\" means that the dark turnout command should be sent before each new aspects " +
            "turnout command")]
        [System.Xml.Serialization.XmlElementAttribute("resetPreviousStates")]
        public System.Collections.ObjectModel.Collection<string> ResetPreviousStates
        {
            get
            {
                return this._resetPreviousStates;
            }
            private set
            {
                this._resetPreviousStates = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResetPreviousStates-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ResetPreviousStates collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResetPreviousStatesSpecified
        {
            get
            {
                return (this.ResetPreviousStates.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatrixSignalMastTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatrixSignalMastTypeProperties" /> class.</para>
        /// </summary>
        public MatrixSignalMastTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeUnlit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeUnlit
    {
        
        [System.Xml.Serialization.XmlElementAttribute("bitString")]
        public string BitString { get; set; }
        
        /// <summary>
        /// <para>Specifies if the signal can go unlit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the signal can go unlit")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("allowed")]
        public string Allowed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeDelay", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeDelay
    {
        
        /// <summary>
        /// <para>Specifies mast-specific delay before each separate output command</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies mast-specific delay before each separate output command")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public string Duration { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeOutputs", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeOutputs
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputsOutput> _output;
        
        /// <summary>
        /// <para>Repetition here is unbounded, but there's a limit
        ///                                    on what can be edited (not displayed) in the program</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Repetition here is unbounded, but there\'s a limit on what can be edited (not disp" +
            "layed) in the program")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("output")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputsOutput> Output
        {
            get
            {
                return this._output;
            }
            private set
            {
                this._output = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatrixSignalMastTypeOutputs" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatrixSignalMastTypeOutputs" /> class.</para>
        /// </summary>
        public MatrixSignalMastTypeOutputs()
        {
            this._output = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeOutputsOutput>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeOutputsOutput", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeOutputsOutput
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the configured Turnout outputs for this mast by name</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the configured Turnout outputs for this mast by name")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("matrixCol")]
        public string MatrixCol { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeBitStrings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeBitStrings
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStringsBitString> _bitString;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bitString")]
        public System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStringsBitString> BitString
        {
            get
            {
                return this._bitString;
            }
            private set
            {
                this._bitString = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatrixSignalMastTypeBitStrings" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatrixSignalMastTypeBitStrings" /> class.</para>
        /// </summary>
        public MatrixSignalMastTypeBitStrings()
        {
            this._bitString = new System.Collections.ObjectModel.Collection<MatrixSignalMastTypeBitStringsBitString>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeBitStringsBitString", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeBitStringsBitString
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the state of the outputs (1 = ON) for this Aspect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the state of the outputs (1 = ON) for this Aspect")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("aspect")]
        public string Aspect { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatrixSignalMastTypeDisabledAspects", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatrixSignalMastTypeDisabledAspects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _disabledAspect;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspect")]
        public System.Collections.ObjectModel.Collection<string> DisabledAspect
        {
            get
            {
                return this._disabledAspect;
            }
            private set
            {
                this._disabledAspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectSpecified
        {
            get
            {
                return (this.DisabledAspect.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatrixSignalMastTypeDisabledAspects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatrixSignalMastTypeDisabledAspects" /> class.</para>
        /// </summary>
        public MatrixSignalMastTypeDisabledAspects()
        {
            this._disabledAspect = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one SignalMast implementation.
    ///        Generally dealt with by the manager implementation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one SignalMast implementatio" +
        "n. Generally dealt with by the manager implementation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _systemName;
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public System.Collections.ObjectModel.Collection<string> SystemName
        {
            get
            {
                return this._systemName;
            }
            private set
            {
                this._systemName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastType" /> class.</para>
        /// </summary>
        public SignalMastType()
        {
            this._systemName = new System.Collections.ObjectModel.Collection<string>();
            this._userName = new System.Collections.ObjectModel.Collection<string>();
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._properties = new System.Collections.ObjectModel.Collection<SignalMastTypeProperties>();
            this._unlit = new System.Collections.ObjectModel.Collection<SignalMastTypeUnlit>();
            this._outputs = new System.Collections.ObjectModel.Collection<SignalMastTypeOutputs>();
            this._bitStrings = new System.Collections.ObjectModel.Collection<SignalMastTypeBitStrings>();
            this._disabledAspects = new System.Collections.ObjectModel.Collection<SignalMastTypeDisabledAspects>();
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _userName;
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public System.Collections.ObjectModel.Collection<string> UserName
        {
            get
            {
                return this._userName;
            }
            private set
            {
                this._userName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserNameSpecified
        {
            get
            {
                return (this.UserName.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeProperties> _properties;
        
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeProperties> Properties
        {
            get
            {
                return this._properties;
            }
            private set
            {
                this._properties = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Properties-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Properties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertiesSpecified
        {
            get
            {
                return (this.Properties.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeUnlit> _unlit;
        
        [System.Xml.Serialization.XmlElementAttribute("unlit")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeUnlit> Unlit
        {
            get
            {
                return this._unlit;
            }
            private set
            {
                this._unlit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unlit-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unlit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnlitSpecified
        {
            get
            {
                return (this.Unlit.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeOutputs> _outputs;
        
        [System.Xml.Serialization.XmlElementAttribute("outputs")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeOutputs> Outputs
        {
            get
            {
                return this._outputs;
            }
            private set
            {
                this._outputs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Outputs-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Outputs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputsSpecified
        {
            get
            {
                return (this.Outputs.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeBitStrings> _bitStrings;
        
        [System.Xml.Serialization.XmlElementAttribute("bitStrings")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeBitStrings> BitStrings
        {
            get
            {
                return this._bitStrings;
            }
            private set
            {
                this._bitStrings = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BitStrings-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BitStrings collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitStringsSpecified
        {
            get
            {
                return (this.BitStrings.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeDisabledAspects> _disabledAspects;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspects")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeDisabledAspects> DisabledAspects
        {
            get
            {
                return this._disabledAspects;
            }
            private set
            {
                this._disabledAspects = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspects-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspects collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectsSpecified
        {
            get
            {
                return (this.DisabledAspects.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeProperties", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType> Property
        {
            get
            {
                return this._property;
            }
            private set
            {
                this._property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Property-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastTypeProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastTypeProperties" /> class.</para>
        /// </summary>
        public SignalMastTypeProperties()
        {
            this._property = new System.Collections.ObjectModel.Collection<JMRI.SignalMastPropertyType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeUnlit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeUnlit
    {
        
        /// <summary>
        /// <para>Deprecated 4.7.2 in favor of a separate class for the matrixsignalmast</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 4.7.2 in favor of a separate class for the matrixsignalmast")]
        [System.Xml.Serialization.XmlElementAttribute("bitString")]
        public string BitString { get; set; }
        
        /// <summary>
        /// <para>Specifies if the signal can go unlit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the signal can go unlit")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("allowed")]
        public string Allowed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeOutputs", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeOutputs
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeOutputsOutput> _output;
        
        /// <summary>
        /// <para>Repetition here is unbounded, but there's a limit
        ///                                    on what can be edited (not displayed) in the program</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Repetition here is unbounded, but there\'s a limit on what can be edited (not disp" +
            "layed) in the program")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("output")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeOutputsOutput> Output
        {
            get
            {
                return this._output;
            }
            private set
            {
                this._output = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastTypeOutputs" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastTypeOutputs" /> class.</para>
        /// </summary>
        public SignalMastTypeOutputs()
        {
            this._output = new System.Collections.ObjectModel.Collection<SignalMastTypeOutputsOutput>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeOutputsOutput", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeOutputsOutput
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the configured Turnout outputs for this mast by name.
        ///                          Deprecated 4.7.2 in favor of a separate class for the matrixsignalmast</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the configured Turnout outputs for this mast by name. Deprecated 4.7.2 " +
            "in favor of a separate class for the matrixsignalmast")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("matrixCol")]
        public string MatrixCol { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeBitStrings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeBitStrings
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastTypeBitStringsBitString> _bitString;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("bitString")]
        public System.Collections.ObjectModel.Collection<SignalMastTypeBitStringsBitString> BitString
        {
            get
            {
                return this._bitString;
            }
            private set
            {
                this._bitString = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastTypeBitStrings" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastTypeBitStrings" /> class.</para>
        /// </summary>
        public SignalMastTypeBitStrings()
        {
            this._bitString = new System.Collections.ObjectModel.Collection<SignalMastTypeBitStringsBitString>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeBitStringsBitString", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeBitStringsBitString
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        /// <summary>
        /// <para>Specifies the state of the outputs (1 = ON) for this Aspect.
        ///                          Deprecated 4.7.2 in favor of a separate class for the matrixsignalmast</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the state of the outputs (1 = ON) for this Aspect. Deprecated 4.7.2 in " +
            "favor of a separate class for the matrixsignalmast")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("aspect")]
        public string Aspect { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastTypeDisabledAspects", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastTypeDisabledAspects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _disabledAspect;
        
        [System.Xml.Serialization.XmlElementAttribute("disabledAspect")]
        public System.Collections.ObjectModel.Collection<string> DisabledAspect
        {
            get
            {
                return this._disabledAspect;
            }
            private set
            {
                this._disabledAspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisabledAspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DisabledAspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledAspectSpecified
        {
            get
            {
                return (this.DisabledAspect.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastTypeDisabledAspects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastTypeDisabledAspects" /> class.</para>
        /// </summary>
        public SignalMastTypeDisabledAspects()
        {
            this._disabledAspect = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of one Signal Mast Repeater implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of one Signal Mast Repeater imp" +
        "lementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastRepeaterType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastRepeaterType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _masterMast;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("masterMast")]
        public System.Collections.ObjectModel.Collection<string> MasterMast
        {
            get
            {
                return this._masterMast;
            }
            private set
            {
                this._masterMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastRepeaterType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastRepeaterType" /> class.</para>
        /// </summary>
        public SignalMastRepeaterType()
        {
            this._masterMast = new System.Collections.ObjectModel.Collection<string>();
            this._slaveMast = new System.Collections.ObjectModel.Collection<string>();
            this._enabled = new System.Collections.ObjectModel.Collection<string>();
            this._update = new System.Collections.ObjectModel.Collection<SignalMastRepeaterTypeUpdate>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _slaveMast;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("slaveMast")]
        public System.Collections.ObjectModel.Collection<string> SlaveMast
        {
            get
            {
                return this._slaveMast;
            }
            private set
            {
                this._slaveMast = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _enabled;
        
        [System.Xml.Serialization.XmlElementAttribute("enabled")]
        public System.Collections.ObjectModel.Collection<string> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enabled-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastRepeaterTypeUpdate> _update;
        
        [System.Xml.Serialization.XmlElementAttribute("update")]
        public System.Collections.ObjectModel.Collection<SignalMastRepeaterTypeUpdate> Update
        {
            get
            {
                return this._update;
            }
            private set
            {
                this._update = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Update-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Update collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdateSpecified
        {
            get
            {
                return (this.Update.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastRepeaterTypeUpdate", Namespace="", AnonymousType=true)]
    public enum SignalMastRepeaterTypeUpdate
    {
        
        BothWay,
        
        MasterToSlave,
        
        SlaveToMaster,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a SignalGroupManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a SignalGroupManager implemen" +
        "tation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupType> _signalgroup;
        
        [System.Xml.Serialization.XmlElementAttribute("signalgroup")]
        public System.Collections.ObjectModel.Collection<SignalGroupType> Signalgroup
        {
            get
            {
                return this._signalgroup;
            }
            private set
            {
                this._signalgroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalgroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalgroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalgroupSpecified
        {
            get
            {
                return (this.Signalgroup.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalGroupManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalGroupManagerType" /> class.</para>
        /// </summary>
        public SignalGroupManagerType()
        {
            this._signalgroup = new System.Collections.ObjectModel.Collection<SignalGroupType>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalGroup implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalGroup implementatio" +
        "n. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupType
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupTypeAppearance> _appearance;
        
        [System.Xml.Serialization.XmlElementAttribute("appearance")]
        public System.Collections.ObjectModel.Collection<SignalGroupTypeAppearance> Appearance
        {
            get
            {
                return this._appearance;
            }
            private set
            {
                this._appearance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Appearance-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Appearance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppearanceSpecified
        {
            get
            {
                return (this.Appearance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalGroupType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalGroupType" /> class.</para>
        /// </summary>
        public SignalGroupType()
        {
            this._appearance = new System.Collections.ObjectModel.Collection<SignalGroupTypeAppearance>();
            this._aspect = new System.Collections.ObjectModel.Collection<SignalGroupTypeAspect>();
            this._signalHead = new System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHead>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupTypeAspect> _aspect;
        
        [System.Xml.Serialization.XmlElementAttribute("aspect")]
        public System.Collections.ObjectModel.Collection<SignalGroupTypeAspect> Aspect
        {
            get
            {
                return this._aspect;
            }
            private set
            {
                this._aspect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aspect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aspect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectSpecified
        {
            get
            {
                return (this.Aspect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHead> _signalHead;
        
        [System.Xml.Serialization.XmlElementAttribute("signalHead")]
        public System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHead> SignalHead
        {
            get
            {
                return this._signalHead;
            }
            private set
            {
                this._signalHead = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalHead-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalHead collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalHeadSpecified
        {
            get
            {
                return (this.SignalHead.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("signalMast")]
        public string SignalMast { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupTypeAppearance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupTypeAppearance
    {
        
        /// <summary>
        /// <para>Deprecated 4.7.2 in favor of aspect (properly named) element</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 4.7.2 in favor of aspect (properly named) element")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("valid")]
        public string Valid { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupTypeAspect", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupTypeAspect
    {
        
        /// <summary>
        /// <para>aspect for which heads are defined. set minOccurs to 1 in 4.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("aspect for which heads are defined. set minOccurs to 1 in 4.8")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("valid")]
        public string Valid { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupTypeSignalHead", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupTypeSignalHead
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadTurnout> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadTurnout> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalGroupTypeSignalHead" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalGroupTypeSignalHead" /> class.</para>
        /// </summary>
        public SignalGroupTypeSignalHead()
        {
            this._turnout = new System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadTurnout>();
            this._sensor = new System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadSensor>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<SignalGroupTypeSignalHeadSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("onAppearance")]
        public string OnAppearance { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("offAppearance")]
        public string OffAppearance { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sensorTurnoutLogic")]
        public string SensorTurnoutLogic { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupTypeSignalHeadTurnout", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupTypeSignalHeadTurnout
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Specifies Turnout used as conditional with state for Closed/True</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies Turnout used as conditional with state for Closed/True")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalGroupTypeSignalHeadSensor", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalGroupTypeSignalHeadSensor
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Specifies Sensor used as conditional with state for Active/True</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies Sensor used as conditional with state for Active/True")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a SignalMastLogicManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a SignalMastLogicManager impl" +
        "ementation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicManagerType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("logicDelay")]
        public string LogicDelay { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicType> _signalmastlogic;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmastlogic")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicType> Signalmastlogic
        {
            get
            {
                return this._signalmastlogic;
            }
            private set
            {
                this._signalmastlogic = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmastlogic-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmastlogic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmastlogicSpecified
        {
            get
            {
                return (this.Signalmastlogic.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicManagerType" /> class.</para>
        /// </summary>
        public SignalMastLogicManagerType()
        {
            this._signalmastlogic = new System.Collections.ObjectModel.Collection<SignalMastLogicType>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalMast Logic implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalMast Logic implemen" +
        "tation. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("sourceSignalMast")]
        public object SourceSignalMast { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationType> _destinationMast;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("destinationMast")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationType> DestinationMast
        {
            get
            {
                return this._destinationMast;
            }
            private set
            {
                this._destinationMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicType" /> class.</para>
        /// </summary>
        public SignalMastLogicType()
        {
            this._destinationMast = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("source")]
        public string Source { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalMast Logic implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalMast Logic implemen" +
        "tation. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("destinationSignalMast")]
        public object DestinationSignalMast { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicDestinationType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicDestinationType" /> class.</para>
        /// </summary>
        public SignalMastLogicDestinationType()
        {
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._enabled = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._allowAutoMaticSignalMastGeneration = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._useLayoutEditor = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._useLayoutEditorTurnouts = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._useLayoutEditorBlocks = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._lockTurnouts = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._blocks = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock>();
            this._turnouts = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout>();
            this._sensors = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor>();
            this._masts = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _enabled;
        
        [System.Xml.Serialization.XmlElementAttribute("enabled")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enabled-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _allowAutoMaticSignalMastGeneration;
        
        [System.Xml.Serialization.XmlElementAttribute("allowAutoMaticSignalMastGeneration")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> AllowAutoMaticSignalMastGeneration
        {
            get
            {
                return this._allowAutoMaticSignalMastGeneration;
            }
            private set
            {
                this._allowAutoMaticSignalMastGeneration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllowAutoMaticSignalMastGeneration-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AllowAutoMaticSignalMastGeneration collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowAutoMaticSignalMastGenerationSpecified
        {
            get
            {
                return (this.AllowAutoMaticSignalMastGeneration.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _useLayoutEditor;
        
        [System.Xml.Serialization.XmlElementAttribute("useLayoutEditor")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> UseLayoutEditor
        {
            get
            {
                return this._useLayoutEditor;
            }
            private set
            {
                this._useLayoutEditor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseLayoutEditor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UseLayoutEditor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseLayoutEditorSpecified
        {
            get
            {
                return (this.UseLayoutEditor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _useLayoutEditorTurnouts;
        
        [System.Xml.Serialization.XmlElementAttribute("useLayoutEditorTurnouts")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> UseLayoutEditorTurnouts
        {
            get
            {
                return this._useLayoutEditorTurnouts;
            }
            private set
            {
                this._useLayoutEditorTurnouts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseLayoutEditorTurnouts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UseLayoutEditorTurnouts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseLayoutEditorTurnoutsSpecified
        {
            get
            {
                return (this.UseLayoutEditorTurnouts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _useLayoutEditorBlocks;
        
        [System.Xml.Serialization.XmlElementAttribute("useLayoutEditorBlocks")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> UseLayoutEditorBlocks
        {
            get
            {
                return this._useLayoutEditorBlocks;
            }
            private set
            {
                this._useLayoutEditorBlocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseLayoutEditorBlocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UseLayoutEditorBlocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseLayoutEditorBlocksSpecified
        {
            get
            {
                return (this.UseLayoutEditorBlocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("associatedSection")]
        public string AssociatedSection { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _lockTurnouts;
        
        [System.Xml.Serialization.XmlElementAttribute("lockTurnouts")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> LockTurnouts
        {
            get
            {
                return this._lockTurnouts;
            }
            private set
            {
                this._lockTurnouts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LockTurnouts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LockTurnouts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockTurnoutsSpecified
        {
            get
            {
                return (this.LockTurnouts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock> _blocks;
        
        [System.Xml.Serialization.XmlArrayAttribute("blocks")]
        [System.Xml.Serialization.XmlArrayItemAttribute("block")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock> Blocks
        {
            get
            {
                return this._blocks;
            }
            private set
            {
                this._blocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Blocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlocksSpecified
        {
            get
            {
                return (this.Blocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout> _turnouts;
        
        [System.Xml.Serialization.XmlArrayAttribute("turnouts")]
        [System.Xml.Serialization.XmlArrayItemAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout> Turnouts
        {
            get
            {
                return this._turnouts;
            }
            private set
            {
                this._turnouts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnouts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnouts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutsSpecified
        {
            get
            {
                return (this.Turnouts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor> _sensors;
        
        [System.Xml.Serialization.XmlArrayAttribute("sensors")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor> Sensors
        {
            get
            {
                return this._sensors;
            }
            private set
            {
                this._sensors = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensors-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorsSpecified
        {
            get
            {
                return (this.Sensors.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast> _masts;
        
        [System.Xml.Serialization.XmlArrayAttribute("masts")]
        [System.Xml.Serialization.XmlArrayItemAttribute("mast")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast> Masts
        {
            get
            {
                return this._masts;
            }
            private set
            {
                this._masts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Masts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Masts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MastsSpecified
        {
            get
            {
                return (this.Masts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("destination")]
        public string Destination { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeBlocks", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeBlocks
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock> _block;
        
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock> Block
        {
            get
            {
                return this._block;
            }
            private set
            {
                this._block = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Block-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Block collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockSpecified
        {
            get
            {
                return (this.Block.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicDestinationTypeBlocks" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicDestinationTypeBlocks" /> class.</para>
        /// </summary>
        public SignalMastLogicDestinationTypeBlocks()
        {
            this._block = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeBlocksBlock>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeBlocksBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeBlocksBlock
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("blockName")]
        public string BlockName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("blockState")]
        public SignalMastLogicDestinationTypeBlocksBlockBlockState BlockState { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeBlocksBlockBlockState", Namespace="", AnonymousType=true)]
    public enum SignalMastLogicDestinationTypeBlocksBlockBlockState
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("unoccupied")]
        Unoccupied,
        
        [System.Xml.Serialization.XmlEnumAttribute("occupied")]
        Occupied,
        
        [System.Xml.Serialization.XmlEnumAttribute("anyState")]
        AnyState,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeTurnouts", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeTurnouts
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicDestinationTypeTurnouts" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicDestinationTypeTurnouts" /> class.</para>
        /// </summary>
        public SignalMastLogicDestinationTypeTurnouts()
        {
            this._turnout = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeTurnoutsTurnout>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeTurnoutsTurnout", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeTurnoutsTurnout
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutName")]
        public string TurnoutName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutState")]
        public SignalMastLogicDestinationTypeTurnoutsTurnoutTurnoutState TurnoutState { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeTurnoutsTurnoutTurnoutState", Namespace="", AnonymousType=true)]
    public enum SignalMastLogicDestinationTypeTurnoutsTurnoutTurnoutState
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("thrown")]
        Thrown,
        
        [System.Xml.Serialization.XmlEnumAttribute("closed")]
        Closed,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeSensors", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeSensors
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicDestinationTypeSensors" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicDestinationTypeSensors" /> class.</para>
        /// </summary>
        public SignalMastLogicDestinationTypeSensors()
        {
            this._sensor = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeSensorsSensor>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeSensorsSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeSensorsSensor
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("sensorName")]
        public string SensorName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("sensorState")]
        public SignalMastLogicDestinationTypeSensorsSensorSensorState SensorState { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeSensorsSensorSensorState", Namespace="", AnonymousType=true)]
    public enum SignalMastLogicDestinationTypeSensorsSensorSensorState
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("inActive")]
        InActive,
        
        [System.Xml.Serialization.XmlEnumAttribute("active")]
        Active,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeMasts", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeMasts
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast> _mast;
        
        [System.Xml.Serialization.XmlElementAttribute("mast")]
        public System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast> Mast
        {
            get
            {
                return this._mast;
            }
            private set
            {
                this._mast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Mast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Mast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MastSpecified
        {
            get
            {
                return (this.Mast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalMastLogicDestinationTypeMasts" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalMastLogicDestinationTypeMasts" /> class.</para>
        /// </summary>
        public SignalMastLogicDestinationTypeMasts()
        {
            this._mast = new System.Collections.ObjectModel.Collection<SignalMastLogicDestinationTypeMastsMast>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalMastLogicDestinationTypeMastsMast", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalMastLogicDestinationTypeMastsMast
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("mastName")]
        public string MastName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("mastState")]
        public string MastState { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a LayoutBlockManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a LayoutBlockManager implemen" +
        "tation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LayoutBlockManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutBlockManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LayoutBlockManagerTypeLayoutblock> _layoutblock;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutblock")]
        public System.Collections.ObjectModel.Collection<LayoutBlockManagerTypeLayoutblock> Layoutblock
        {
            get
            {
                return this._layoutblock;
            }
            private set
            {
                this._layoutblock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutblock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutblock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutblockSpecified
        {
            get
            {
                return (this.Layoutblock.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LayoutBlockManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LayoutBlockManagerType" /> class.</para>
        /// </summary>
        public LayoutBlockManagerType()
        {
            this._layoutblock = new System.Collections.ObjectModel.Collection<LayoutBlockManagerTypeLayoutblock>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blockrouting")]
        public JMRI.YesNoType Blockrouting { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blockrouting-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blockrouting property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockroutingSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("routingStablisedSensor")]
        public string RoutingStablisedSensor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LayoutBlockManagerTypeLayoutblock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutBlockManagerTypeLayoutblock
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("metric")]
        public string Metric { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("occupancysensor")]
        public string Occupancysensor { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("occupiedsense")]
        public string Occupiedsense { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("trackcolor")]
        public string Trackcolor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("extracolor")]
        public string Extracolor { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("occupiedcolor")]
        public string Occupiedcolor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("memory")]
        public string Memory { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a BlockBossLogic implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a BlockBossLogic implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalElementManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalElementManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelement> _signalelement;
        
        [System.Xml.Serialization.XmlElementAttribute("signalelement")]
        public System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelement> Signalelement
        {
            get
            {
                return this._signalelement;
            }
            private set
            {
                this._signalelement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalelement-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalelement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalelementSpecified
        {
            get
            {
                return (this.Signalelement.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalElementManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalElementManagerType" /> class.</para>
        /// </summary>
        public SignalElementManagerType()
        {
            this._signalelement = new System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelement>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalElementManagerTypeSignalelement", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalElementManagerTypeSignalelement
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensorname> _sensorname;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorname")]
        public System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensorname> Sensorname
        {
            get
            {
                return this._sensorname;
            }
            private set
            {
                this._sensorname = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensorname-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensorname collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensornameSpecified
        {
            get
            {
                return (this.Sensorname.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SignalElementManagerTypeSignalelement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignalElementManagerTypeSignalelement" /> class.</para>
        /// </summary>
        public SignalElementManagerTypeSignalelement()
        {
            this._sensorname = new System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensorname>();
            this._sensor = new System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensor>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensor> _sensor;
        
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        public System.Collections.ObjectModel.Collection<SignalElementManagerTypeSignalelementSensor> Sensor
        {
            get
            {
                return this._sensor;
            }
            private set
            {
                this._sensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorSpecified
        {
            get
            {
                return (this.Sensor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public string Comment { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signal")]
        public string Signal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("mode")]
        public string Mode { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedturnout")]
        public string Watchedturnout { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsignal1")]
        public string Watchedsignal1 { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsignal1alt")]
        public string Watchedsignal1Alt { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsignal2")]
        public string Watchedsignal2 { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsignal2alt")]
        public string Watchedsignal2Alt { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsensor1")]
        public string Watchedsensor1 { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsensor1alt")]
        public string Watchedsensor1Alt { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsensor2")]
        public string Watchedsensor2 { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("watchedsensor2alt")]
        public string Watchedsensor2Alt { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("approachsensor1")]
        public string Approachsensor1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("limitspeed1")]
        public bool Limitspeed1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Limitspeed1-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Limitspeed1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Limitspeed1Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("limitspeed2")]
        public bool Limitspeed2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Limitspeed2-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Limitspeed2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Limitspeed2Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("restrictingspeed1")]
        public bool Restrictingspeed1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Restrictingspeed1-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Restrictingspeed1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Restrictingspeed1Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("restrictingspeed2")]
        public bool Restrictingspeed2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Restrictingspeed2-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Restrictingspeed2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Restrictingspeed2Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("useflashyellow")]
        public bool Useflashyellow { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Useflashyellow-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Useflashyellow property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseflashyellowSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("distantsignal")]
        public bool Distantsignal { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Distantsignal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Distantsignal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistantsignalSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalElementManagerTypeSignalelementSensorname", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalElementManagerTypeSignalelementSensorname
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SignalElementManagerTypeSignalelementSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalElementManagerTypeSignalelementSensor
    {
        
        /// <summary>
        /// <para>This was obsoleted, name now lives in element content</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This was obsoleted, name now lives in element content")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a AudioManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a AudioManager implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AudioManagerTypeAudiobuffer> _audiobuffer;
        
        [System.Xml.Serialization.XmlElementAttribute("audiobuffer")]
        public System.Collections.ObjectModel.Collection<AudioManagerTypeAudiobuffer> Audiobuffer
        {
            get
            {
                return this._audiobuffer;
            }
            private set
            {
                this._audiobuffer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audiobuffer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Audiobuffer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AudiobufferSpecified
        {
            get
            {
                return (this.Audiobuffer.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="AudioManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AudioManagerType" /> class.</para>
        /// </summary>
        public AudioManagerType()
        {
            this._audiobuffer = new System.Collections.ObjectModel.Collection<AudioManagerTypeAudiobuffer>();
            this._audiolistener = new System.Collections.ObjectModel.Collection<AudioManagerTypeAudiolistener>();
            this._audiosource = new System.Collections.ObjectModel.Collection<AudioManagerTypeAudiosource>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AudioManagerTypeAudiolistener> _audiolistener;
        
        [System.Xml.Serialization.XmlElementAttribute("audiolistener")]
        public System.Collections.ObjectModel.Collection<AudioManagerTypeAudiolistener> Audiolistener
        {
            get
            {
                return this._audiolistener;
            }
            private set
            {
                this._audiolistener = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audiolistener-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Audiolistener collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AudiolistenerSpecified
        {
            get
            {
                return (this.Audiolistener.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AudioManagerTypeAudiosource> _audiosource;
        
        [System.Xml.Serialization.XmlElementAttribute("audiosource")]
        public System.Collections.ObjectModel.Collection<AudioManagerTypeAudiosource> Audiosource
        {
            get
            {
                return this._audiosource;
            }
            private set
            {
                this._audiosource = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audiosource-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Audiosource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AudiosourceSpecified
        {
            get
            {
                return (this.Audiosource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("distanceattenuated")]
        public JMRI.YesNoType Distanceattenuated { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Distanceattenuated-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Distanceattenuated property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceattenuatedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiobuffer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiobuffer
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public object Comment { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public object Url { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("looppoint")]
        public AudioManagerTypeAudiobufferLooppoint Looppoint { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("streamed")]
        public JMRI.YesNoType Streamed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Streamed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Streamed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreamedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiobufferLooppoint", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiobufferLooppoint
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("start")]
        public string Start { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiolistener", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiolistener
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("position")]
        public AudioVectorType Position { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("velocity")]
        public AudioVectorType Velocity { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("orientation")]
        public AudioManagerTypeAudiolistenerOrientation Orientation { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("gain")]
        public float Gain { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("metersperunit")]
        public float Metersperunit { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public object Comment { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioVectorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioVectorType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public float X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public float Y { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("z")]
        public float Z { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiolistenerOrientation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiolistenerOrientation
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("atX")]
        public float AtX { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("atY")]
        public float AtY { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("atZ")]
        public float AtZ { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("upX")]
        public float UpX { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("upY")]
        public float UpY { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("upZ")]
        public float UpZ { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiosource", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiosource
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("position")]
        public AudioVectorType Position { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("velocity")]
        public AudioVectorType Velocity { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("assignedbuffer")]
        public string Assignedbuffer { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("gain")]
        public float Gain { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("pitch")]
        public float Pitch { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("distances")]
        public AudioManagerTypeAudiosourceDistances Distances { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("loops")]
        public AudioManagerTypeAudiosourceLoops Loops { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fadetimes")]
        public AudioManagerTypeAudiosourceFadetimes Fadetimes { get; set; }
        
        /// <summary>
        /// <para>No longer written as of JMRI 4.11.4</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No longer written as of JMRI 4.11.4")]
        [System.Xml.Serialization.XmlElementAttribute("dopplerfactor")]
        public float Dopplerfactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dopplerfactor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dopplerfactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DopplerfactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("positionrelative")]
        public JMRI.YesNoType Positionrelative { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionrelative-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionrelative property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionrelativeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiosourceDistances", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiosourceDistances
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("ref")]
        public float Ref { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ref-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ref property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("max")]
        public float Max { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Max-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Max property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiosourceLoops", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiosourceLoops
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("min")]
        public string Min { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("max")]
        public string Max { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("mindelay")]
        public string Mindelay { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("maxelay")]
        public string Maxelay { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AudioManagerTypeAudiosourceFadetimes", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioManagerTypeAudiosourceFadetimes
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("in")]
        public string In { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("out")]
        public string Out { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a RouteManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a RouteManager implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRoute> _route;
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRoute> Route
        {
            get
            {
                return this._route;
            }
            private set
            {
                this._route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Route-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Route collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSpecified
        {
            get
            {
                return (this.Route.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RouteManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RouteManagerType" /> class.</para>
        /// </summary>
        public RouteManagerType()
        {
            this._route = new System.Collections.ObjectModel.Collection<RouteManagerTypeRoute>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRoute", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRoute : JMRI.NamedBeanType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteTurnout> _routeTurnout;
        
        [System.Xml.Serialization.XmlElementAttribute("routeTurnout")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteTurnout> RouteTurnout
        {
            get
            {
                return this._routeTurnout;
            }
            private set
            {
                this._routeTurnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteTurnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteTurnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteTurnoutSpecified
        {
            get
            {
                return (this.RouteTurnout.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RouteManagerTypeRoute" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RouteManagerTypeRoute" /> class.</para>
        /// </summary>
        public RouteManagerTypeRoute()
        {
            this._routeTurnout = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteTurnout>();
            this._routeOutputTurnout = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputTurnout>();
            this._routeOutputSensor = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputSensor>();
            this._routeSensor = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSensor>();
            this._routeSoundFile = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSoundFile>();
            this._routeScriptFile = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteScriptFile>();
            this._turnoutsAlignedSensor = new System.Collections.ObjectModel.Collection<RouteManagerTypeRouteTurnoutsAlignedSensor>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputTurnout> _routeOutputTurnout;
        
        [System.Xml.Serialization.XmlElementAttribute("routeOutputTurnout")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputTurnout> RouteOutputTurnout
        {
            get
            {
                return this._routeOutputTurnout;
            }
            private set
            {
                this._routeOutputTurnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteOutputTurnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteOutputTurnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteOutputTurnoutSpecified
        {
            get
            {
                return (this.RouteOutputTurnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputSensor> _routeOutputSensor;
        
        [System.Xml.Serialization.XmlElementAttribute("routeOutputSensor")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteOutputSensor> RouteOutputSensor
        {
            get
            {
                return this._routeOutputSensor;
            }
            private set
            {
                this._routeOutputSensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteOutputSensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteOutputSensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteOutputSensorSpecified
        {
            get
            {
                return (this.RouteOutputSensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSensor> _routeSensor;
        
        [System.Xml.Serialization.XmlElementAttribute("routeSensor")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSensor> RouteSensor
        {
            get
            {
                return this._routeSensor;
            }
            private set
            {
                this._routeSensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteSensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteSensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSensorSpecified
        {
            get
            {
                return (this.RouteSensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSoundFile> _routeSoundFile;
        
        [System.Xml.Serialization.XmlElementAttribute("routeSoundFile")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteSoundFile> RouteSoundFile
        {
            get
            {
                return this._routeSoundFile;
            }
            private set
            {
                this._routeSoundFile = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteSoundFile-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteSoundFile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSoundFileSpecified
        {
            get
            {
                return (this.RouteSoundFile.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteScriptFile> _routeScriptFile;
        
        [System.Xml.Serialization.XmlElementAttribute("routeScriptFile")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteRouteScriptFile> RouteScriptFile
        {
            get
            {
                return this._routeScriptFile;
            }
            private set
            {
                this._routeScriptFile = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RouteScriptFile-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RouteScriptFile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteScriptFileSpecified
        {
            get
            {
                return (this.RouteScriptFile.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteManagerTypeRouteTurnoutsAlignedSensor> _turnoutsAlignedSensor;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutsAlignedSensor")]
        public System.Collections.ObjectModel.Collection<RouteManagerTypeRouteTurnoutsAlignedSensor> TurnoutsAlignedSensor
        {
            get
            {
                return this._turnoutsAlignedSensor;
            }
            private set
            {
                this._turnoutsAlignedSensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutsAlignedSensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutsAlignedSensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutsAlignedSensorSpecified
        {
            get
            {
                return (this.TurnoutsAlignedSensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlTurnout")]
        public string ControlTurnout { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlTurnoutState")]
        public string ControlTurnoutState { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlLockTurnout")]
        public string ControlLockTurnout { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlLockTurnoutState")]
        public string ControlLockTurnoutState { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("routeLocked")]
        public string RouteLocked { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("addedDelay")]
        public int AddedDelay { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddedDelay-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddedDelay property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddedDelaySpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Only present for backward compatibility</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Only present for backward compatibility")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteTurnout", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteTurnout
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteOutputTurnout", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteOutputTurnout
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteOutputSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteOutputSensor
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteSensor
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private RouteManagerTypeRouteRouteSensorMode _mode = JMRI.RouteManagerTypeRouteRouteSensorMode.OnActive;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.RouteManagerTypeRouteRouteSensorMode.OnActive)]
        [System.Xml.Serialization.XmlAttributeAttribute("mode")]
        public RouteManagerTypeRouteRouteSensorMode Mode
        {
            get
            {
                return this._mode;
            }
            set
            {
                this._mode = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteSensorMode", Namespace="", AnonymousType=true)]
    public enum RouteManagerTypeRouteRouteSensorMode
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("onActive")]
        OnActive,
        
        [System.Xml.Serialization.XmlEnumAttribute("onInactive")]
        OnInactive,
        
        [System.Xml.Serialization.XmlEnumAttribute("vetoActive")]
        VetoActive,
        
        [System.Xml.Serialization.XmlEnumAttribute("vetoInactive")]
        VetoInactive,
        
        [System.Xml.Serialization.XmlEnumAttribute("onChange")]
        OnChange,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteSoundFile", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteSoundFile
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteRouteScriptFile", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteRouteScriptFile
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RouteManagerTypeRouteTurnoutsAlignedSensor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteManagerTypeRouteTurnoutsAlignedSensor
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a WarrantManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a WarrantManager implementati" +
        "on.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("nxparams")]
        public WarrantManagerTypeNxparams Nxparams { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrant> _warrant;
        
        [System.Xml.Serialization.XmlElementAttribute("warrant")]
        public System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrant> Warrant
        {
            get
            {
                return this._warrant;
            }
            private set
            {
                this._warrant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Warrant-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Warrant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WarrantSpecified
        {
            get
            {
                return (this.Warrant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="WarrantManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WarrantManagerType" /> class.</para>
        /// </summary>
        public WarrantManagerType()
        {
            this._warrant = new System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrant>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeNxparams", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeNxparams
    {
        
        [System.Xml.Serialization.XmlElementAttribute("scale")]
        public decimal Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("maxspeed")]
        public decimal Maxspeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maxspeed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maxspeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxspeedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("minspeed")]
        public decimal Minspeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minspeed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minspeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinspeedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("timeinterval")]
        public decimal Timeinterval { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Timeinterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Timeinterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeintervalSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("numsteps")]
        public string Numsteps { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("haltstart")]
        public JMRI.YesNoType Haltstart { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Haltstart-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Haltstart property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HaltstartSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrant
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantBlockOrder> _blockOrder;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("blockOrder")]
        public System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantBlockOrder> BlockOrder
        {
            get
            {
                return this._blockOrder;
            }
            private set
            {
                this._blockOrder = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="WarrantManagerTypeWarrant" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WarrantManagerTypeWarrant" /> class.</para>
        /// </summary>
        public WarrantManagerTypeWarrant()
        {
            this._blockOrder = new System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantBlockOrder>();
            this._throttleCommand = new System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantThrottleCommand>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("viaOrder")]
        public WarrantManagerTypeWarrantViaOrder ViaOrder { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("avoidOrder")]
        public WarrantManagerTypeWarrantAvoidOrder AvoidOrder { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantThrottleCommand> _throttleCommand;
        
        [System.Xml.Serialization.XmlElementAttribute("throttleCommand")]
        public System.Collections.ObjectModel.Collection<WarrantManagerTypeWarrantThrottleCommand> ThrottleCommand
        {
            get
            {
                return this._throttleCommand;
            }
            private set
            {
                this._throttleCommand = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThrottleCommand-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ThrottleCommand collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThrottleCommandSpecified
        {
            get
            {
                return (this.ThrottleCommand.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("train")]
        public WarrantManagerTypeWarrantTrain Train { get; set; }
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("wtype")]
        public string Wtype { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public string SpeedFactor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("timeToPlatform")]
        public string TimeToPlatform { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("forward")]
        public JMRI.TrueFalseType Forward { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Forward-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Forward property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForwardSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantBlockOrder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantBlockOrder
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public WarrantManagerTypeWarrantBlockOrderBlock Block { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pathName")]
        public string PathName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("entryName")]
        public string EntryName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitName")]
        public string ExitName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantBlockOrderBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantBlockOrderBlock
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pathname")]
        public string Pathname { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantViaOrder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantViaOrder
    {
        
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public WarrantManagerTypeWarrantViaOrderBlock Block { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("pathName")]
        public string PathName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("entryName")]
        public string EntryName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitName")]
        public string ExitName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantViaOrderBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantViaOrderBlock
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantAvoidOrder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantAvoidOrder
    {
        
        [System.Xml.Serialization.XmlElementAttribute("block")]
        public WarrantManagerTypeWarrantAvoidOrderBlock Block { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("pathName")]
        public string PathName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("entryName")]
        public string EntryName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitName")]
        public string ExitName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantAvoidOrderBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantAvoidOrderBlock
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantThrottleCommand", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantThrottleCommand
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("time")]
        public string Time { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("command")]
        public string Command { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("block")]
        public string Block { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarrantManagerTypeWarrantTrain", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantManagerTypeWarrantTrain
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainName")]
        public string TrainName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainId")]
        public string TrainId { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dccAddress")]
        public string DccAddress { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dccType")]
        public string DccType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("runBlind")]
        public string RunBlind { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("shareRoute")]
        public JMRI.TrueFalseType ShareRoute { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShareRoute-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareRoute property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShareRouteSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("noRamp")]
        public JMRI.TrueFalseType NoRamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NoRamp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoRamp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRampSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a LogixManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a LogixManager implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogixManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogixManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LogixManagerTypeLogix> _logix;
        
        [System.Xml.Serialization.XmlElementAttribute("logix")]
        public System.Collections.ObjectModel.Collection<LogixManagerTypeLogix> Logix
        {
            get
            {
                return this._logix;
            }
            private set
            {
                this._logix = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Logix-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Logix collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogixSpecified
        {
            get
            {
                return (this.Logix.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LogixManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LogixManagerType" /> class.</para>
        /// </summary>
        public LogixManagerType()
        {
            this._logix = new System.Collections.ObjectModel.Collection<LogixManagerTypeLogix>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogixManagerTypeLogix", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogixManagerTypeLogix
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type
        ///          that can contain zero-length content.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _comment;
        
        /// <summary>
        /// <para>General definition of "comment" element found in many others.
        ///          This a comment that's loaded to and from the program, not
        ///          documentation of the instance file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        public System.Collections.ObjectModel.Collection<string> Comment
        {
            get
            {
                return this._comment;
            }
            private set
            {
                this._comment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Comment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Comment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentSpecified
        {
            get
            {
                return (this.Comment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LogixManagerTypeLogix" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LogixManagerTypeLogix" /> class.</para>
        /// </summary>
        public LogixManagerTypeLogix()
        {
            this._comment = new System.Collections.ObjectModel.Collection<string>();
            this._logixConditional = new System.Collections.ObjectModel.Collection<LogixManagerTypeLogixLogixConditional>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LogixManagerTypeLogixLogixConditional> _logixConditional;
        
        [System.Xml.Serialization.XmlElementAttribute("logixConditional")]
        public System.Collections.ObjectModel.Collection<LogixManagerTypeLogixLogixConditional> LogixConditional
        {
            get
            {
                return this._logixConditional;
            }
            private set
            {
                this._logixConditional = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogixConditional-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LogixConditional collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogixConditionalSpecified
        {
            get
            {
                return (this.LogixConditional.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("enabled")]
        public JMRI.YesNoType Enabled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Enabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogixManagerTypeLogixLogixConditional", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogixManagerTypeLogixLogixConditional
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("order")]
        public string Order { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a ConditionalManager implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a ConditionalManager implemen" +
        "tation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionalManagerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionalManagerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditional> _conditional;
        
        [System.Xml.Serialization.XmlElementAttribute("conditional")]
        public System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditional> Conditional
        {
            get
            {
                return this._conditional;
            }
            private set
            {
                this._conditional = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Conditional-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Conditional collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionalSpecified
        {
            get
            {
                return (this.Conditional.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConditionalManagerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConditionalManagerType" /> class.</para>
        /// </summary>
        public ConditionalManagerType()
        {
            this._conditional = new System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditional>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionalManagerTypeConditional", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionalManagerTypeConditional
    {
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlElementAttribute("systemName")]
        public string SystemName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName_1 { get; set; }
        
        /// <summary>
        /// <para>General definition of "userName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.
        ///          Zero length content not allowed, see also nullUserNameType</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.Xml.Serialization.XmlElementAttribute("userName")]
        public string UserName { get; set; }
        
        /// <summary>
        /// <para>Deprecated 2.9.6 in favor of separate element</para>
        /// <para>General definition of "userName" attribute type
        ///          that can contain zero-length content.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated 2.9.6 in favor of separate element")]
        [System.Xml.Serialization.XmlAttributeAttribute("userName")]
        public string UserName_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalStateVariable> _conditionalStateVariable;
        
        [System.Xml.Serialization.XmlElementAttribute("conditionalStateVariable")]
        public System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalStateVariable> ConditionalStateVariable
        {
            get
            {
                return this._conditionalStateVariable;
            }
            private set
            {
                this._conditionalStateVariable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConditionalStateVariable-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConditionalStateVariable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionalStateVariableSpecified
        {
            get
            {
                return (this.ConditionalStateVariable.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConditionalManagerTypeConditional" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConditionalManagerTypeConditional" /> class.</para>
        /// </summary>
        public ConditionalManagerTypeConditional()
        {
            this._conditionalStateVariable = new System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalStateVariable>();
            this._conditionalAction = new System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalAction>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalAction> _conditionalAction;
        
        [System.Xml.Serialization.XmlElementAttribute("conditionalAction")]
        public System.Collections.ObjectModel.Collection<ConditionalManagerTypeConditionalConditionalAction> ConditionalAction
        {
            get
            {
                return this._conditionalAction;
            }
            private set
            {
                this._conditionalAction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConditionalAction-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConditionalAction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionalActionSpecified
        {
            get
            {
                return (this.ConditionalAction.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("antecedent")]
        public string Antecedent { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("logicType")]
        public string LogicType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("triggerOnChange")]
        public string TriggerOnChange { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionalManagerTypeConditionalConditionalStateVariable", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionalManagerTypeConditionalConditionalStateVariable
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("operator")]
        public string Operator { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _negated = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("negated")]
        public JMRI.YesNoType Negated
        {
            get
            {
                return this._negated;
            }
            set
            {
                this._negated = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para>Allow user names, empty string and single space, emitted by old code</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("dataString")]
        public string DataString { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("num1")]
        public string Num1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("num2")]
        public string Num2 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _triggersCalc = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("triggersCalc")]
        public JMRI.YesNoType TriggersCalc
        {
            get
            {
                return this._triggersCalc;
            }
            set
            {
                this._triggersCalc = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionalManagerTypeConditionalConditionalAction", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionalManagerTypeConditionalConditionalAction
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("option")]
        public string Option { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para>Allow user names, single or empty space, emitted by old code</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("data")]
        public string Data { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("delay")]
        public string Delay { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("string")]
        public string String { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing an icon reference</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing an icon reference")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EditorIconTextType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EditorMultiSensorIconTypeActive))]
    public partial class EditorIconType
    {
        
        /// <summary>
        /// <para>Rotation in 90-degree steps, including scaled icons;
        ///            added in JMRI 2.9.4 as replacement for &amp;rotate&amp; attribute</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rotation in 90-degree steps, including scaled icons; added in JMRI 2.9.4 as repla" +
            "cement for &amp;rotate&amp; attribute")]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        /// <summary>
        /// <para>Deprecated in JMRI 2.9.4 in favor of &amp;rotation&amp; element;
        ///          was rotation in 90-degree steps, but skipped rotating scaled icons.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated in JMRI 2.9.4 in favor of &amp;rotation&amp; element; was rotation in " +
            "90-degree steps, but skipped rotating scaled icons.")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public float Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public float Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing an icon reference with extended "text" information</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing an icon reference with extended \"text\" inform" +
        "ation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconTextType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconTextType : EditorIconType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("text")]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing sensor text information</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing sensor text information")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSensorTextType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSensorTextType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public int Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public int Size { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Size-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Size property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing icon information in a paneleditor element</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing icon information in a paneleditor element")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("visible")]
        public EditorIconsTypeVisible Visible { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("path_edit")]
        public EditorIconsTypePath_Edit Path_Edit { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("hidden")]
        public EditorIconsTypeHidden Hidden { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("to_arrow")]
        public EditorIconsTypeTo_Arrow To_Arrow { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("from_arrow")]
        public EditorIconsTypeFrom_Arrow From_Arrow { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsTypeVisible", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsTypeVisible
    {
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsTypePath_Edit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsTypePath_Edit
    {
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsTypeHidden", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsTypeHidden
    {
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsTypeTo_Arrow", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsTypeTo_Arrow
    {
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIconsTypeFrom_Arrow", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIconsTypeFrom_Arrow
    {
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing and loading LayoutTrackDrawingOptions</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing and loading LayoutTrackDrawingOptions")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutTrackDrawingOptionsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutTrackDrawingOptionsType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("mainBallastColor")]
        public string MainBallastColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainBallastWidth")]
        public int MainBallastWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainBallastWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainBallastWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainBallastWidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainBlockLineDashPercentageX10")]
        public int MainBlockLineDashPercentageX10 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainBlockLineDashPercentageX10-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainBlockLineDashPercentageX10 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainBlockLineDashPercentageX10Specified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainBlockLineWidth")]
        public int MainBlockLineWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainBlockLineWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainBlockLineWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainBlockLineWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("mainRailColor")]
        public string MainRailColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainRailCount")]
        public int MainRailCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainRailCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainRailCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainRailCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainRailGap")]
        public int MainRailGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainRailGap-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainRailGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainRailGapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainRailWidth")]
        public int MainRailWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainRailWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainRailWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainRailWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("mainTieColor")]
        public string MainTieColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainTieGap")]
        public int MainTieGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainTieGap-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainTieGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainTieGapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainTieLength")]
        public int MainTieLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainTieLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainTieLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainTieLengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mainTieWidth")]
        public int MainTieWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MainTieWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainTieWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainTieWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("sideBallastColor")]
        public string SideBallastColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideBallastWidth")]
        public int SideBallastWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideBallastWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideBallastWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideBallastWidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideBlockLineDashPercentageX10")]
        public int SideBlockLineDashPercentageX10 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideBlockLineDashPercentageX10-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideBlockLineDashPercentageX10 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideBlockLineDashPercentageX10Specified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideBlockLineWidth")]
        public int SideBlockLineWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideBlockLineWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideBlockLineWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideBlockLineWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("sideRailColor")]
        public string SideRailColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideRailCount")]
        public int SideRailCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideRailCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideRailCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideRailCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideRailGap")]
        public int SideRailGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideRailGap-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideRailGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideRailGapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideRailWidth")]
        public int SideRailWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideRailWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideRailWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideRailWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlElementAttribute("sideTieColor")]
        public string SideTieColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideTieGap")]
        public int SideTieGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideTieGap-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideTieGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideTieGapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideTieLength")]
        public int SideTieLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideTieLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideTieLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideTieLengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("sideTieWidth")]
        public int SideTieWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SideTieWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SideTieWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideTieWidthSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionableLabel</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionableLabel")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableLabelType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableLabelType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public string Tooltip { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _icon;
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Icon
        {
            get
            {
                return this._icon;
            }
            private set
            {
                this._icon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified
        {
            get
            {
                return (this.Icon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPositionableLabelType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPositionableLabelType" /> class.</para>
        /// </summary>
        public EditorPositionableLabelType()
        {
            this._icon = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing common PositionableLabel child attributes</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing common PositionableLabel child attributes")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    public partial interface IEditorCommonAttributesGroup
    {
        
        int X
        {
            get;
            set;
        }
        
        int Y
        {
            get;
            set;
        }
        
        int Level
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        JMRI.TrueFalseType Forcecontroloff
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        JMRI.YesNoType Hidden
        {
            get;
            set;
        }
        
        JMRI.TrueFalseType Positionable
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        JMRI.TrueFalseType Showtooltip
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        JMRI.TrueFalseType Editable
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing text information of PositionableLabel children</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing text information of PositionableLabel childr" +
        "en")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    public partial interface IEditorCommonTextInfoGroup
    {
        
        string Fontname
        {
            get;
            set;
        }
        
        string Size
        {
            get;
            set;
        }
        
        string Style
        {
            get;
            set;
        }
        
        byte Red
        {
            get;
            set;
        }
        
        byte Green
        {
            get;
            set;
        }
        
        byte Blue
        {
            get;
            set;
        }
        
        JMRI.YesNoType HasBackground
        {
            get;
            set;
        }
        
        int Margin
        {
            get;
            set;
        }
        
        int RedBack
        {
            get;
            set;
        }
        
        int GreenBack
        {
            get;
            set;
        }
        
        int BlueBack
        {
            get;
            set;
        }
        
        string FixedWidth
        {
            get;
            set;
        }
        
        string FixedHeight
        {
            get;
            set;
        }
        
        int BorderSize
        {
            get;
            set;
        }
        
        int RedBorder
        {
            get;
            set;
        }
        
        int GreenBorder
        {
            get;
            set;
        }
        
        int BlueBorder
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        JustificationType Justification
        {
            get;
            set;
        }
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        IEditorCommonTextInfoGroupOrientation Orientation
        {
            get;
            set;
        }
        
        string Degrees
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        string Rotate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        JMRI.TrueFalseType Fixed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        string Height
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        string Width
        {
            get;
            set;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("JustificationType", Namespace="")]
    public enum JustificationType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("left")]
        Left,
        
        [System.Xml.Serialization.XmlEnumAttribute("center")]
        Center,
        
        [System.Xml.Serialization.XmlEnumAttribute("centre")]
        Centre,
        
        [System.Xml.Serialization.XmlEnumAttribute("right")]
        Right,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IEditorCommonTextInfoGroupOrientation", Namespace="", AnonymousType=true)]
    public enum IEditorCommonTextInfoGroupOrientation
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("horizontal")]
        Horizontal,
        
        [System.Xml.Serialization.XmlEnumAttribute("vertical_up")]
        Vertical_Up,
        
        [System.Xml.Serialization.XmlEnumAttribute("vertical_down")]
        Vertical_Down,
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionablePoint</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionablePoint")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePointType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePointType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration> _decorations;
        
        [System.Xml.Serialization.XmlArrayAttribute("decorations")]
        [System.Xml.Serialization.XmlArrayItemAttribute("decoration")]
        public System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration> Decorations
        {
            get
            {
                return this._decorations;
            }
            private set
            {
                this._decorations = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Decorations-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Decorations collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecorationsSpecified
        {
            get
            {
                return (this.Decorations.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPositionablePointType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPositionablePointType" /> class.</para>
        /// </summary>
        public EditorPositionablePointType()
        {
            this._decorations = new System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>Represents values of PositionablePoint.??? enum,
        ///          both as 0-3 and as String names.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 3.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(object), "0", "3")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public float X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public float Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("connect1name")]
        public string Connect1Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("connect2name")]
        public string Connect2Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linkedpanel")]
        public string Linkedpanel { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linkpointid")]
        public string Linkpointid { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("eastboundsignal")]
        public string Eastboundsignal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("westboundsignal")]
        public string Westboundsignal { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("eastboundsignalmast")]
        public string Eastboundsignalmast { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("westboundsignalmast")]
        public string Westboundsignalmast { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("eastboundsensor")]
        public string Eastboundsensor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("westboundsensor")]
        public string Westboundsensor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePointTypeDecorations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePointTypeDecorations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration> _decoration;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("decoration")]
        public System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration> Decoration
        {
            get
            {
                return this._decoration;
            }
            private set
            {
                this._decoration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPositionablePointTypeDecorations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPositionablePointTypeDecorations" /> class.</para>
        /// </summary>
        public EditorPositionablePointTypeDecorations()
        {
            this._decoration = new System.Collections.ObjectModel.Collection<EditorPositionablePointTypeDecorationsDecoration>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePointTypeDecorationsDecoration", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePointTypeDecorationsDecoration
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a Shape's color</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a Shape\'s color")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShapeColorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShapeColorType
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public byte Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionableRectangle</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionableRectangle")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableRectangleType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableRectangleType : IShapeCommonAttributesGroup, IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public EditorPositionableRectangleTypeSize Size { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableRectangleTypeSize", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableRectangleTypeSize
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public int Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public int Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Height-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a Shape's attributes</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a Shape\'s attributes")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    public partial interface IShapeCommonAttributesGroup
    {
        
        int Degrees
        {
            get;
            set;
        }
        
        int ChangeLevelOnSensor
        {
            get;
            set;
        }
        
        JMRI.TrueFalseType HideOnSensor
        {
            get;
            set;
        }
        
        string ControlSensor
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        int Alpha
        {
            get;
            set;
        }
        
        int LineWidth
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionableRoundRectangle</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionableRoundRectangle")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableRoundRectType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableRoundRectType : IShapeCommonAttributesGroup, IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public EditorPositionableRoundRectTypeSize Size { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableRoundRectTypeSize", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableRoundRectTypeSize
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public int Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public int Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Height-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("cornerRadius")]
        public int CornerRadius { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CornerRadius-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CornerRadius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CornerRadiusSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a Positionablecircle</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a Positionablecircle")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableCircleType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableCircleType : IShapeCommonAttributesGroup, IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public EditorPositionableCircleTypeSize Size { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableCircleTypeSize", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableCircleTypeSize
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("radius")]
        public int Radius { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Radius-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Radius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadiusSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionableEllipse</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionableEllipse")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableEllipseType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableEllipseType : IShapeCommonAttributesGroup, IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public EditorPositionableEllipseTypeSize Size { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionableEllipseTypeSize", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionableEllipseTypeSize
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public int Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public int Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Height-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PositionablePolygon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PositionablePolygon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePolygonType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePolygonType : IShapeCommonAttributesGroup, IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex> _path;
        
        [System.Xml.Serialization.XmlArrayAttribute("path")]
        [System.Xml.Serialization.XmlArrayItemAttribute("vertex")]
        public System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPositionablePolygonType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPositionablePolygonType" /> class.</para>
        /// </summary>
        public EditorPositionablePolygonType()
        {
            this._path = new System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePolygonTypePath", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePolygonTypePath
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex> _vertex;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("vertex")]
        public System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex> Vertex
        {
            get
            {
                return this._vertex;
            }
            private set
            {
                this._vertex = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPositionablePolygonTypePath" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPositionablePolygonTypePath" /> class.</para>
        /// </summary>
        public EditorPositionablePolygonTypePath()
        {
            this._vertex = new System.Collections.ObjectModel.Collection<EditorPositionablePolygonTypePathVertex>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPositionablePolygonTypePathVertex", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPositionablePolygonTypePathVertex
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public int Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx0")]
        public float Idx0 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx0-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx0 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx0Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx1")]
        public float Idx1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx1-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx1Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx2")]
        public float Idx2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx2-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx2 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx2Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx3")]
        public float Idx3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx3-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx3 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx3Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx4")]
        public float Idx4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx4-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx4 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx4Specified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idx5")]
        public float Idx5 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Idx5-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Idx5 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Idx5Specified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a SensorIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a SensorIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSensorIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSensorIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorSensorIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorSensorIconType" /> class.</para>
        /// </summary>
        public EditorSensorIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._icon = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._active = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._inactive = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._inconsistent = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._unknown = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._error = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._iconmaps = new System.Collections.ObjectModel.Collection<EditorSensorIconTypeIconmaps>();
            this._activeText = new System.Collections.ObjectModel.Collection<EditorSensorTextType>();
            this._inactiveText = new System.Collections.ObjectModel.Collection<EditorSensorTextType>();
            this._unknownText = new System.Collections.ObjectModel.Collection<EditorSensorTextType>();
            this._inconsistentText = new System.Collections.ObjectModel.Collection<EditorSensorTextType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _icon;
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Icon
        {
            get
            {
                return this._icon;
            }
            private set
            {
                this._icon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified
        {
            get
            {
                return (this.Icon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _active;
        
        [System.Xml.Serialization.XmlElementAttribute("active")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Active
        {
            get
            {
                return this._active;
            }
            private set
            {
                this._active = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Active-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Active collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified
        {
            get
            {
                return (this.Active.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("active")]
        public string Active_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inactive;
        
        [System.Xml.Serialization.XmlElementAttribute("inactive")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inactive
        {
            get
            {
                return this._inactive;
            }
            private set
            {
                this._inactive = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inactive-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inactive collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InactiveSpecified
        {
            get
            {
                return (this.Inactive.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inactive")]
        public string Inactive_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inconsistent;
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inconsistent
        {
            get
            {
                return this._inconsistent;
            }
            private set
            {
                this._inconsistent = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inconsistent-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inconsistent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InconsistentSpecified
        {
            get
            {
                return (this.Inconsistent.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inconsistent")]
        public string Inconsistent_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _unknown;
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Unknown
        {
            get
            {
                return this._unknown;
            }
            private set
            {
                this._unknown = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unknown-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unknown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownSpecified
        {
            get
            {
                return (this.Unknown.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("unknown")]
        public string Unknown_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _error;
        
        [System.Xml.Serialization.XmlElementAttribute("error")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Error
        {
            get
            {
                return this._error;
            }
            private set
            {
                this._error = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Error-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Error collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorSpecified
        {
            get
            {
                return (this.Error.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("error")]
        public string Error_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSensorIconTypeIconmaps> _iconmaps;
        
        [System.Xml.Serialization.XmlElementAttribute("iconmaps")]
        public System.Collections.ObjectModel.Collection<EditorSensorIconTypeIconmaps> Iconmaps
        {
            get
            {
                return this._iconmaps;
            }
            private set
            {
                this._iconmaps = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Iconmaps-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Iconmaps collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconmapsSpecified
        {
            get
            {
                return (this.Iconmaps.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSensorTextType> _activeText;
        
        [System.Xml.Serialization.XmlElementAttribute("activeText")]
        public System.Collections.ObjectModel.Collection<EditorSensorTextType> ActiveText
        {
            get
            {
                return this._activeText;
            }
            private set
            {
                this._activeText = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveText-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ActiveText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveTextSpecified
        {
            get
            {
                return (this.ActiveText.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("activeText")]
        public string ActiveText_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSensorTextType> _inactiveText;
        
        [System.Xml.Serialization.XmlElementAttribute("inactiveText")]
        public System.Collections.ObjectModel.Collection<EditorSensorTextType> InactiveText
        {
            get
            {
                return this._inactiveText;
            }
            private set
            {
                this._inactiveText = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InactiveText-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InactiveText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InactiveTextSpecified
        {
            get
            {
                return (this.InactiveText.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inactiveText")]
        public string InactiveText_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSensorTextType> _unknownText;
        
        [System.Xml.Serialization.XmlElementAttribute("unknownText")]
        public System.Collections.ObjectModel.Collection<EditorSensorTextType> UnknownText
        {
            get
            {
                return this._unknownText;
            }
            private set
            {
                this._unknownText = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UnknownText-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UnknownText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownTextSpecified
        {
            get
            {
                return (this.UnknownText.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("unknownText")]
        public string UnknownText_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSensorTextType> _inconsistentText;
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistentText")]
        public System.Collections.ObjectModel.Collection<EditorSensorTextType> InconsistentText
        {
            get
            {
                return this._inconsistentText;
            }
            private set
            {
                this._inconsistentText = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InconsistentText-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InconsistentText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InconsistentTextSpecified
        {
            get
            {
                return (this.InconsistentText.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inconsistentText")]
        public string InconsistentText_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("sensor")]
        public string Sensor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("momentary")]
        public JMRI.TrueFalseType Momentary { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Momentary-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Momentary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MomentarySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sxscale")]
        public string Sxscale { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("sxorigin")]
        public string Sxorigin { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("syscale")]
        public string Syscale { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("syorigin")]
        public string Syorigin { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("filter")]
        public string Filter { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("showid")]
        public JMRI.TrueFalseType Showid { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Showid-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Showid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowidSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("selectable")]
        public string Selectable { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaulticon")]
        public string Defaulticon { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redActiveBack")]
        public string RedActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenActiveBack")]
        public string GreenActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueActiveBack")]
        public string BlueActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redInActiveBack")]
        public string RedInActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenInActiveBack")]
        public string GreenInActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueInActiveBack")]
        public string BlueInActiveBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redUnknownBack")]
        public string RedUnknownBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenUnknownBack")]
        public string GreenUnknownBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueUnknownBack")]
        public string BlueUnknownBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redInconsistentBack")]
        public string RedInconsistentBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenInconsistentBack")]
        public string GreenInconsistentBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueInconsistentBack")]
        public string BlueInconsistentBack { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redActive")]
        public string RedActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenActive")]
        public string GreenActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueActive")]
        public string BlueActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redInActive")]
        public string RedInActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenInActive")]
        public string GreenInActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueInActive")]
        public string BlueInActive { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redUnknown")]
        public string RedUnknown { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenUnknown")]
        public string GreenUnknown { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueUnknown")]
        public string BlueUnknown { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("redInconsistent")]
        public string RedInconsistent { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("greenInconsistent")]
        public string GreenInconsistent { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("blueInconsistent")]
        public string BlueInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSensorIconTypeIconmaps", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSensorIconTypeIconmaps
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("family")]
        public string Family { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a ReporterIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a ReporterIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorReporterIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorReporterIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorReporterIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorReporterIconType" /> class.</para>
        /// </summary>
        public EditorReporterIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("reporter")]
        public string Reporter { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a MemoryIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a MemoryIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorMemoryIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorMemoryIconType" /> class.</para>
        /// </summary>
        public EditorMemoryIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._memorystate = new System.Collections.ObjectModel.Collection<EditorMemoryIconTypeMemorystate>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorMemoryIconTypeMemorystate> _memorystate;
        
        [System.Xml.Serialization.XmlElementAttribute("memorystate")]
        public System.Collections.ObjectModel.Collection<EditorMemoryIconTypeMemorystate> Memorystate
        {
            get
            {
                return this._memorystate;
            }
            private set
            {
                this._memorystate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memorystate-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memorystate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemorystateSpecified
        {
            get
            {
                return (this.Memorystate.Count != 0);
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("memory")]
        public string Memory { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaulticon")]
        public string Defaulticon { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("selectable")]
        public JMRI.YesNoType Selectable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Selectable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Selectable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("colWidth")]
        public int ColWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ColWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColWidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _updateBlockValue = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("updateBlockValue")]
        public JMRI.YesNoType UpdateBlockValue
        {
            get
            {
                return this._updateBlockValue;
            }
            set
            {
                this._updateBlockValue = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryIconTypeMemorystate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryIconTypeMemorystate
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a MemoryInputIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a MemoryInputIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryInputIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryInputIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorMemoryInputIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorMemoryInputIconType" /> class.</para>
        /// </summary>
        public EditorMemoryInputIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("memory")]
        public string Memory { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("colWidth")]
        public string ColWidth { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a MemoryComboIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a MemoryComboIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryComboIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryComboIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public string Tooltip { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem> _itemList;
        
        [System.Xml.Serialization.XmlArrayAttribute("itemList")]
        [System.Xml.Serialization.XmlArrayItemAttribute("item")]
        public System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem> ItemList
        {
            get
            {
                return this._itemList;
            }
            private set
            {
                this._itemList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ItemList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ItemList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemListSpecified
        {
            get
            {
                return (this.ItemList.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorMemoryComboIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorMemoryComboIconType" /> class.</para>
        /// </summary>
        public EditorMemoryComboIconType()
        {
            this._itemList = new System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("memory")]
        public string Memory { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryComboIconTypeItemList", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryComboIconTypeItemList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem> _item;
        
        [System.Xml.Serialization.XmlElementAttribute("item")]
        public System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem> Item
        {
            get
            {
                return this._item;
            }
            private set
            {
                this._item = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Item-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Item collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemSpecified
        {
            get
            {
                return (this.Item.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorMemoryComboIconTypeItemList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorMemoryComboIconTypeItemList" /> class.</para>
        /// </summary>
        public EditorMemoryComboIconTypeItemList()
        {
            this._item = new System.Collections.ObjectModel.Collection<EditorMemoryComboIconTypeItemListItem>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMemoryComboIconTypeItemListItem", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMemoryComboIconTypeItemListItem
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Index-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Index property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a FastClock</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a FastClock")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorFastClockIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorFastClockIconType
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public float Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("link")]
        public string Link { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a MultiSensorIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a MultiSensorIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMultiSensorIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMultiSensorIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorMultiSensorIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorMultiSensorIconType" /> class.</para>
        /// </summary>
        public EditorMultiSensorIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._multisensoriconentry = new System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeMultisensoriconentry>();
            this._active = new System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeActive>();
            this._inactive = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._inconsistent = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._unknown = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeMultisensoriconentry> _multisensoriconentry;
        
        [System.Xml.Serialization.XmlElementAttribute("multisensoriconentry")]
        public System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeMultisensoriconentry> Multisensoriconentry
        {
            get
            {
                return this._multisensoriconentry;
            }
            private set
            {
                this._multisensoriconentry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Multisensoriconentry-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Multisensoriconentry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultisensoriconentrySpecified
        {
            get
            {
                return (this.Multisensoriconentry.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeActive> _active;
        
        [System.Xml.Serialization.XmlElementAttribute("active")]
        public System.Collections.ObjectModel.Collection<EditorMultiSensorIconTypeActive> Active
        {
            get
            {
                return this._active;
            }
            private set
            {
                this._active = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Active-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Active collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified
        {
            get
            {
                return (this.Active.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("active")]
        public string Active_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inactive;
        
        [System.Xml.Serialization.XmlElementAttribute("inactive")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inactive
        {
            get
            {
                return this._inactive;
            }
            private set
            {
                this._inactive = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inactive-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inactive collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InactiveSpecified
        {
            get
            {
                return (this.Inactive.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inactive")]
        public string Inactive_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inconsistent;
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inconsistent
        {
            get
            {
                return this._inconsistent;
            }
            private set
            {
                this._inconsistent = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inconsistent-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inconsistent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InconsistentSpecified
        {
            get
            {
                return (this.Inconsistent.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inconsistent")]
        public string Inconsistent_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _unknown;
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Unknown
        {
            get
            {
                return this._unknown;
            }
            private set
            {
                this._unknown = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unknown-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unknown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownSpecified
        {
            get
            {
                return (this.Unknown.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("unknown")]
        public string Unknown_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("updown")]
        public string Updown { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated, no longer written</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated, no longer written")]
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public float Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMultiSensorIconTypeMultisensoriconentry", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMultiSensorIconTypeMultisensoriconentry
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("sensor")]
        public string Sensor { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorMultiSensorIconTypeActive", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorMultiSensorIconTypeActive : EditorIconType
    {
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("sensor")]
        public string Sensor { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a SignalHeadIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a SignalHeadIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSignalHeadIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSignalHeadIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorSignalHeadIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorSignalHeadIconType" /> class.</para>
        /// </summary>
        public EditorSignalHeadIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._icons = new System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIcons>();
            this._iconmaps = new System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIconmaps>();
            this._held = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._dark = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._red = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._yellow = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._green = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._lunar = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._flashred = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._flashyellow = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._flashgreen = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._flashlunar = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIcons> _icons;
        
        [System.Xml.Serialization.XmlElementAttribute("icons")]
        public System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIcons> Icons
        {
            get
            {
                return this._icons;
            }
            private set
            {
                this._icons = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icons-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconsSpecified
        {
            get
            {
                return (this.Icons.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIconmaps> _iconmaps;
        
        [System.Xml.Serialization.XmlElementAttribute("iconmaps")]
        public System.Collections.ObjectModel.Collection<EditorSignalHeadIconTypeIconmaps> Iconmaps
        {
            get
            {
                return this._iconmaps;
            }
            private set
            {
                this._iconmaps = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Iconmaps-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Iconmaps collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconmapsSpecified
        {
            get
            {
                return (this.Iconmaps.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _held;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("held")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Held
        {
            get
            {
                return this._held;
            }
            private set
            {
                this._held = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Held-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Held collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeldSpecified
        {
            get
            {
                return (this.Held.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("held")]
        public string Held_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _dark;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("dark")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Dark
        {
            get
            {
                return this._dark;
            }
            private set
            {
                this._dark = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dark-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DarkSpecified
        {
            get
            {
                return (this.Dark.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("dark")]
        public string Dark_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _red;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("red")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Red
        {
            get
            {
                return this._red;
            }
            private set
            {
                this._red = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Red collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified
        {
            get
            {
                return (this.Red.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public string Red_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _yellow;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("yellow")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Yellow
        {
            get
            {
                return this._yellow;
            }
            private set
            {
                this._yellow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Yellow-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Yellow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YellowSpecified
        {
            get
            {
                return (this.Yellow.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("yellow")]
        public string Yellow_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _green;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("green")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Green
        {
            get
            {
                return this._green;
            }
            private set
            {
                this._green = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Green collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified
        {
            get
            {
                return (this.Green.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public string Green_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _lunar;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("lunar")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Lunar
        {
            get
            {
                return this._lunar;
            }
            private set
            {
                this._lunar = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lunar-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Lunar collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LunarSpecified
        {
            get
            {
                return (this.Lunar.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("lunar")]
        public string Lunar_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _flashred;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("flashred")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Flashred
        {
            get
            {
                return this._flashred;
            }
            private set
            {
                this._flashred = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flashred-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Flashred collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlashredSpecified
        {
            get
            {
                return (this.Flashred.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("flashred")]
        public string Flashred_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _flashyellow;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("flashyellow")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Flashyellow
        {
            get
            {
                return this._flashyellow;
            }
            private set
            {
                this._flashyellow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flashyellow-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Flashyellow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlashyellowSpecified
        {
            get
            {
                return (this.Flashyellow.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("flashyellow")]
        public string Flashyellow_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _flashgreen;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("flashgreen")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Flashgreen
        {
            get
            {
                return this._flashgreen;
            }
            private set
            {
                this._flashgreen = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flashgreen-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Flashgreen collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlashgreenSpecified
        {
            get
            {
                return (this.Flashgreen.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("flashgreen")]
        public string Flashgreen_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _flashlunar;
        
        /// <summary>
        /// <para>Deprecated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated")]
        [System.Xml.Serialization.XmlElementAttribute("flashlunar")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Flashlunar
        {
            get
            {
                return this._flashlunar;
            }
            private set
            {
                this._flashlunar = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flashlunar-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Flashlunar collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlashlunarSpecified
        {
            get
            {
                return (this.Flashlunar.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("flashlunar")]
        public string Flashlunar_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalhead")]
        public string Signalhead { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("clickmode")]
        public string Clickmode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("litmode")]
        public string Litmode { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("heldicon")]
        public string Heldicon { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSignalHeadIconTypeIcons", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSignalHeadIconTypeIcons
    {
        
        [System.Xml.Serialization.XmlElementAttribute("held")]
        public EditorIconType Held { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("dark")]
        public EditorIconType Dark { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("red")]
        public EditorIconType Red { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("yellow")]
        public EditorIconType Yellow { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("green")]
        public EditorIconType Green { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lunar")]
        public EditorIconType Lunar { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flashred")]
        public EditorIconType Flashred { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flashyellow")]
        public EditorIconType Flashyellow { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flashgreen")]
        public EditorIconType Flashgreen { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flashlunar")]
        public EditorIconType Flashlunar { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSignalHeadIconTypeIconmaps", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSignalHeadIconTypeIconmaps
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("family")]
        public string Family { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a SignalMastIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a SignalMastIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSignalMastIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSignalMastIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorSignalMastIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorSignalMastIconType" /> class.</para>
        /// </summary>
        public EditorSignalMastIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("signalmast")]
        public string Signalmast { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotation")]
        public string Rotation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("clickmode")]
        public string Clickmode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("litmode")]
        public string Litmode { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("imageset")]
        public string Imageset { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a TurnoutIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a TurnoutIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorTurnoutIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorTurnoutIconType" /> class.</para>
        /// </summary>
        public EditorTurnoutIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._icons = new System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIcons>();
            this._iconmaps = new System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIconmaps>();
            this._closed = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._thrown = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._unknown = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._inconsistent = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIcons> _icons;
        
        [System.Xml.Serialization.XmlElementAttribute("icons")]
        public System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIcons> Icons
        {
            get
            {
                return this._icons;
            }
            private set
            {
                this._icons = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icons-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconsSpecified
        {
            get
            {
                return (this.Icons.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIconmaps> _iconmaps;
        
        [System.Xml.Serialization.XmlElementAttribute("iconmaps")]
        public System.Collections.ObjectModel.Collection<EditorTurnoutIconTypeIconmaps> Iconmaps
        {
            get
            {
                return this._iconmaps;
            }
            private set
            {
                this._iconmaps = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Iconmaps-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Iconmaps collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconmapsSpecified
        {
            get
            {
                return (this.Iconmaps.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _closed;
        
        [System.Xml.Serialization.XmlElementAttribute("closed")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Closed
        {
            get
            {
                return this._closed;
            }
            private set
            {
                this._closed = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Closed-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Closed collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosedSpecified
        {
            get
            {
                return (this.Closed.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("closed")]
        public string Closed_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _thrown;
        
        [System.Xml.Serialization.XmlElementAttribute("thrown")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Thrown
        {
            get
            {
                return this._thrown;
            }
            private set
            {
                this._thrown = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Thrown-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Thrown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThrownSpecified
        {
            get
            {
                return (this.Thrown.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("thrown")]
        public string Thrown_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _unknown;
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Unknown
        {
            get
            {
                return this._unknown;
            }
            private set
            {
                this._unknown = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unknown-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unknown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownSpecified
        {
            get
            {
                return (this.Unknown.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("unknown")]
        public string Unknown_1 { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inconsistent;
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inconsistent
        {
            get
            {
                return this._inconsistent;
            }
            private set
            {
                this._inconsistent = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inconsistent-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inconsistent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InconsistentSpecified
        {
            get
            {
                return (this.Inconsistent.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("inconsistent")]
        public string Inconsistent_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("momentary")]
        public JMRI.TrueFalseType Momentary { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Momentary-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Momentary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MomentarySpecified { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tristate")]
        public JMRI.TrueFalseType Tristate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tristate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tristate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TristateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("directControl")]
        public JMRI.TrueFalseType DirectControl { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DirectControl-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DirectControl property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectControlSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.8</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.8")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIcons", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIcons
    {
        
        [System.Xml.Serialization.XmlElementAttribute("closed")]
        public EditorTurnoutIconTypeIconsClosed Closed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("thrown")]
        public EditorTurnoutIconTypeIconsThrown Thrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public EditorTurnoutIconTypeIconsUnknown Unknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public EditorTurnoutIconTypeIconsInconsistent Inconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIconsClosed", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIconsClosed
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIconsThrown", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIconsThrown
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIconsUnknown", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIconsUnknown
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIconsInconsistent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIconsInconsistent
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTurnoutIconTypeIconmaps", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTurnoutIconTypeIconmaps
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("family")]
        public string Family { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LayoutTurnout</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LayoutTurnout")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutTurnoutType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutTurnoutType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalAMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalAMast")]
        public System.Collections.ObjectModel.Collection<string> SignalAMast
        {
            get
            {
                return this._signalAMast;
            }
            private set
            {
                this._signalAMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalAMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalAMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalAMastSpecified
        {
            get
            {
                return (this.SignalAMast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLayoutTurnoutType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLayoutTurnoutType" /> class.</para>
        /// </summary>
        public EditorLayoutTurnoutType()
        {
            this._signalAMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalBMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalCMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalDMast = new System.Collections.ObjectModel.Collection<string>();
            this._sensorA = new System.Collections.ObjectModel.Collection<string>();
            this._sensorB = new System.Collections.ObjectModel.Collection<string>();
            this._sensorC = new System.Collections.ObjectModel.Collection<string>();
            this._sensorD = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalBMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalBMast")]
        public System.Collections.ObjectModel.Collection<string> SignalBMast
        {
            get
            {
                return this._signalBMast;
            }
            private set
            {
                this._signalBMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalBMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalBMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalBMastSpecified
        {
            get
            {
                return (this.SignalBMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalCMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalCMast")]
        public System.Collections.ObjectModel.Collection<string> SignalCMast
        {
            get
            {
                return this._signalCMast;
            }
            private set
            {
                this._signalCMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalCMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalCMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalCMastSpecified
        {
            get
            {
                return (this.SignalCMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalDMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalDMast")]
        public System.Collections.ObjectModel.Collection<string> SignalDMast
        {
            get
            {
                return this._signalDMast;
            }
            private set
            {
                this._signalDMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalDMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalDMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalDMastSpecified
        {
            get
            {
                return (this.SignalDMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorA;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorA")]
        public System.Collections.ObjectModel.Collection<string> SensorA
        {
            get
            {
                return this._sensorA;
            }
            private set
            {
                this._sensorA = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorA-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorA collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorASpecified
        {
            get
            {
                return (this.SensorA.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorB;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorB")]
        public System.Collections.ObjectModel.Collection<string> SensorB
        {
            get
            {
                return this._sensorB;
            }
            private set
            {
                this._sensorB = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorB-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorB collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorBSpecified
        {
            get
            {
                return (this.SensorB.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorC;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorC")]
        public System.Collections.ObjectModel.Collection<string> SensorC
        {
            get
            {
                return this._sensorC;
            }
            private set
            {
                this._sensorC = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorC-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorC collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorCSpecified
        {
            get
            {
                return (this.SensorC.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorD;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorD")]
        public System.Collections.ObjectModel.Collection<string> SensorD
        {
            get
            {
                return this._sensorD;
            }
            private set
            {
                this._sensorD = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorD-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorD collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorDSpecified
        {
            get
            {
                return (this.SensorD.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>Represents values of LayoutTurnout.TurnoutType enum,
        ///          both as 0-63 and as String names.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(object), "0", "8")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("continuing")]
        public string Continuing { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xa")]
        public float Xa { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xa-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xa property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xb")]
        public float Xb { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xc")]
        public float Xc { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xd")]
        public float Xd { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xd-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xd property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XdSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xcen")]
        public float Xcen { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ya")]
        public float Ya { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ya-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ya property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("yb")]
        public float Yb { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("yc")]
        public float Yc { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("yd")]
        public float Yd { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Yd-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Yd property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YdSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ycen")]
        public float Ycen { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ver")]
        public string Ver { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Hidden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Hidden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disabled")]
        public JMRI.YesNoType Disabled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Disabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Disabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disableWhenOccupied")]
        public JMRI.YesNoType DisableWhenOccupied { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisableWhenOccupied-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableWhenOccupied property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableWhenOccupiedSpecified { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutname")]
        public string Turnoutname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockname")]
        public string Blockname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockbname")]
        public string Blockbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockcname")]
        public string Blockcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockdname")]
        public string Blockdname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectaname")]
        public string Connectaname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectbname")]
        public string Connectbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectcname")]
        public string Connectcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectdname")]
        public string Connectdname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signala1name")]
        public string Signala1Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signala2name")]
        public string Signala2Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signala3name")]
        public string Signala3Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalb1name")]
        public string Signalb1Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalb2name")]
        public string Signalb2Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalc1name")]
        public string Signalc1Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalc2name")]
        public string Signalc2Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signald1name")]
        public string Signald1Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signald2name")]
        public string Signald2Name { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("linkedturnoutname")]
        public string Linkedturnoutname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("secondturnoutname")]
        public string Secondturnoutname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("secondturnoutinverted")]
        public JMRI.TrueFalseType Secondturnoutinverted { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Secondturnoutinverted-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Secondturnoutinverted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecondturnoutinvertedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linktype")]
        public string Linktype { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LayoutSlip</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LayoutSlip")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalAMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalAMast")]
        public System.Collections.ObjectModel.Collection<string> SignalAMast
        {
            get
            {
                return this._signalAMast;
            }
            private set
            {
                this._signalAMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalAMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalAMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalAMastSpecified
        {
            get
            {
                return (this.SignalAMast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLayoutSlipType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLayoutSlipType" /> class.</para>
        /// </summary>
        public EditorLayoutSlipType()
        {
            this._signalAMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalBMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalCMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalDMast = new System.Collections.ObjectModel.Collection<string>();
            this._sensorA = new System.Collections.ObjectModel.Collection<string>();
            this._sensorB = new System.Collections.ObjectModel.Collection<string>();
            this._sensorC = new System.Collections.ObjectModel.Collection<string>();
            this._sensorD = new System.Collections.ObjectModel.Collection<string>();
            this._signala1Name = new System.Collections.ObjectModel.Collection<string>();
            this._signalb1Name = new System.Collections.ObjectModel.Collection<string>();
            this._signalc1Name = new System.Collections.ObjectModel.Collection<string>();
            this._signald1Name = new System.Collections.ObjectModel.Collection<string>();
            this._signala2Name = new System.Collections.ObjectModel.Collection<string>();
            this._signalb2Name = new System.Collections.ObjectModel.Collection<string>();
            this._signalc2Name = new System.Collections.ObjectModel.Collection<string>();
            this._signald2Name = new System.Collections.ObjectModel.Collection<string>();
            this._turnout = new System.Collections.ObjectModel.Collection<string>();
            this._turnoutB = new System.Collections.ObjectModel.Collection<string>();
            this._states = new System.Collections.ObjectModel.Collection<EditorLayoutSlipTypeStates>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalBMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalBMast")]
        public System.Collections.ObjectModel.Collection<string> SignalBMast
        {
            get
            {
                return this._signalBMast;
            }
            private set
            {
                this._signalBMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalBMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalBMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalBMastSpecified
        {
            get
            {
                return (this.SignalBMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalCMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalCMast")]
        public System.Collections.ObjectModel.Collection<string> SignalCMast
        {
            get
            {
                return this._signalCMast;
            }
            private set
            {
                this._signalCMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalCMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalCMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalCMastSpecified
        {
            get
            {
                return (this.SignalCMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalDMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalDMast")]
        public System.Collections.ObjectModel.Collection<string> SignalDMast
        {
            get
            {
                return this._signalDMast;
            }
            private set
            {
                this._signalDMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalDMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalDMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalDMastSpecified
        {
            get
            {
                return (this.SignalDMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorA;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorA")]
        public System.Collections.ObjectModel.Collection<string> SensorA
        {
            get
            {
                return this._sensorA;
            }
            private set
            {
                this._sensorA = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorA-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorA collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorASpecified
        {
            get
            {
                return (this.SensorA.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorB;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorB")]
        public System.Collections.ObjectModel.Collection<string> SensorB
        {
            get
            {
                return this._sensorB;
            }
            private set
            {
                this._sensorB = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorB-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorB collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorBSpecified
        {
            get
            {
                return (this.SensorB.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorC;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorC")]
        public System.Collections.ObjectModel.Collection<string> SensorC
        {
            get
            {
                return this._sensorC;
            }
            private set
            {
                this._sensorC = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorC-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorC collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorCSpecified
        {
            get
            {
                return (this.SensorC.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorD;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorD")]
        public System.Collections.ObjectModel.Collection<string> SensorD
        {
            get
            {
                return this._sensorD;
            }
            private set
            {
                this._sensorD = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorD-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorD collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorDSpecified
        {
            get
            {
                return (this.SensorD.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signala1Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signala1name")]
        public System.Collections.ObjectModel.Collection<string> Signala1Name
        {
            get
            {
                return this._signala1Name;
            }
            private set
            {
                this._signala1Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signala1Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signala1Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signala1NameSpecified
        {
            get
            {
                return (this.Signala1Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalb1Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signalb1name")]
        public System.Collections.ObjectModel.Collection<string> Signalb1Name
        {
            get
            {
                return this._signalb1Name;
            }
            private set
            {
                this._signalb1Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalb1Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalb1Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signalb1NameSpecified
        {
            get
            {
                return (this.Signalb1Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalc1Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signalc1name")]
        public System.Collections.ObjectModel.Collection<string> Signalc1Name
        {
            get
            {
                return this._signalc1Name;
            }
            private set
            {
                this._signalc1Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalc1Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalc1Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signalc1NameSpecified
        {
            get
            {
                return (this.Signalc1Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signald1Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signald1name")]
        public System.Collections.ObjectModel.Collection<string> Signald1Name
        {
            get
            {
                return this._signald1Name;
            }
            private set
            {
                this._signald1Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signald1Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signald1Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signald1NameSpecified
        {
            get
            {
                return (this.Signald1Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signala2Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signala2name")]
        public System.Collections.ObjectModel.Collection<string> Signala2Name
        {
            get
            {
                return this._signala2Name;
            }
            private set
            {
                this._signala2Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signala2Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signala2Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signala2NameSpecified
        {
            get
            {
                return (this.Signala2Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalb2Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signalb2name")]
        public System.Collections.ObjectModel.Collection<string> Signalb2Name
        {
            get
            {
                return this._signalb2Name;
            }
            private set
            {
                this._signalb2Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalb2Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalb2Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signalb2NameSpecified
        {
            get
            {
                return (this.Signalb2Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalc2Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signalc2name")]
        public System.Collections.ObjectModel.Collection<string> Signalc2Name
        {
            get
            {
                return this._signalc2Name;
            }
            private set
            {
                this._signalc2Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalc2Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalc2Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signalc2NameSpecified
        {
            get
            {
                return (this.Signalc2Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signald2Name;
        
        [System.Xml.Serialization.XmlElementAttribute("signald2name")]
        public System.Collections.ObjectModel.Collection<string> Signald2Name
        {
            get
            {
                return this._signald2Name;
            }
            private set
            {
                this._signald2Name = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signald2Name-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signald2Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Signald2NameSpecified
        {
            get
            {
                return (this.Signald2Name.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<string> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnoutB;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutB")]
        public System.Collections.ObjectModel.Collection<string> TurnoutB
        {
            get
            {
                return this._turnoutB;
            }
            private set
            {
                this._turnoutB = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutB-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutB collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutBSpecified
        {
            get
            {
                return (this.TurnoutB.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorLayoutSlipTypeStates> _states;
        
        [System.Xml.Serialization.XmlElementAttribute("states")]
        public System.Collections.ObjectModel.Collection<EditorLayoutSlipTypeStates> States
        {
            get
            {
                return this._states;
            }
            private set
            {
                this._states = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die States-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the States collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatesSpecified
        {
            get
            {
                return (this.States.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>Represents values of LayoutTurnout.TurnoutType enum,
        ///          both as 0-63 and as String names.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(object), "0", "8")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("slipType")]
        public string SlipType { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xa")]
        public float Xa { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ya")]
        public float Ya { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xcen")]
        public float Xcen { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("yb")]
        public float Yb { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xb")]
        public float Xb { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ycen")]
        public float Ycen { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Hidden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Hidden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disabled")]
        public JMRI.YesNoType Disabled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Disabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Disabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disableWhenOccupied")]
        public JMRI.YesNoType DisableWhenOccupied { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisableWhenOccupied-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableWhenOccupied property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableWhenOccupiedSpecified { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockname")]
        public string Blockname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockbname")]
        public string Blockbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockcname")]
        public string Blockcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockdname")]
        public string Blockdname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectaname")]
        public string Connectaname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectbname")]
        public string Connectbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectcname")]
        public string Connectcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectdname")]
        public string Connectdname { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipTypeStates", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipTypeStates
    {
        
        [System.Xml.Serialization.XmlElementAttribute("A-C")]
        public EditorLayoutSlipTypeStatesA_C A_C { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("A-D")]
        public EditorLayoutSlipTypeStatesA_D A_D { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("B-D")]
        public EditorLayoutSlipTypeStatesB_D B_D { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("B-C")]
        public EditorLayoutSlipTypeStatesB_C B_C { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipTypeStatesA_C", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipTypeStatesA_C
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutB")]
        public string TurnoutB { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipTypeStatesA_D", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipTypeStatesA_D
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutB")]
        public string TurnoutB { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipTypeStatesB_D", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipTypeStatesB_D
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutB")]
        public string TurnoutB { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutSlipTypeStatesB_C", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutSlipTypeStatesB_C
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("turnoutB")]
        public string TurnoutB { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LocoIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LocoIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLocoIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLocoIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _icon;
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Icon
        {
            get
            {
                return this._icon;
            }
            private set
            {
                this._icon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified
        {
            get
            {
                return (this.Icon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLocoIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLocoIconType" /> class.</para>
        /// </summary>
        public EditorLocoIconType()
        {
            this._icon = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dockX")]
        public string DockX { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dockY")]
        public string DockY { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rosterentry")]
        public string Rosterentry { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a TrainIcon.
    ///          Persistence class inherits from jmri.jmrit.display.configurexml.LocoIconXml</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a TrainIcon. Persistence class inherits from" +
        " jmri.jmrit.display.configurexml.LocoIconXml")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrainIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrainIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _icon;
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Icon
        {
            get
            {
                return this._icon;
            }
            private set
            {
                this._icon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified
        {
            get
            {
                return (this.Icon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorTrainIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorTrainIconType" /> class.</para>
        /// </summary>
        public EditorTrainIconType()
        {
            this._icon = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public JMRI.YesNoType Icon_1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon_1-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Icon_1 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Icon_1Specified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("train")]
        public string Train { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainName")]
        public string TrainName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dockX")]
        public string DockX { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dockY")]
        public string DockY { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rosterentry")]
        public string Rosterentry { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LocoLabel shape</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LocoLabel shape")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLocoLabelType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLocoLabelType : IEditorCommonAttributesGroup, IShapeCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("OBlock")]
        public EditorLocoLabelTypeOBlock OBlock { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public EditorLocoLabelTypeSize Size { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("lineColor")]
        public ShapeColorType LineColor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fillColor")]
        public ShapeColorType FillColor { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public int Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLevelOnSensor")]
        public int ChangeLevelOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChangeLevelOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeLevelOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeLevelOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideOnSensor")]
        public JMRI.TrueFalseType HideOnSensor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideOnSensor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideOnSensor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideOnSensorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("controlSensor")]
        public string ControlSensor { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 4.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 4.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("alpha")]
        public int Alpha { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Alpha-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Alpha property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public int LineWidth { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLocoLabelTypeOBlock", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLocoLabelTypeOBlock
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("systemName")]
        public string SystemName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainName")]
        public string TrainName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLocoLabelTypeSize", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLocoLabelTypeSize
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public int Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Width-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public int Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Height-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a BlockContentsIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a BlockContentsIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorBlockContentsIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorBlockContentsIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _icon;
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Icon
        {
            get
            {
                return this._icon;
            }
            private set
            {
                this._icon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified
        {
            get
            {
                return (this.Icon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorBlockContentsIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorBlockContentsIconType" /> class.</para>
        /// </summary>
        public EditorBlockContentsIconType()
        {
            this._icon = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public string Tooltip { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blockcontents")]
        public string Blockcontents { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("selectable")]
        public string Selectable { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rosterentry")]
        public string Rosterentry { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaulticon")]
        public string Defaulticon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("decoration_border_ends", Namespace="")]
    public enum Decoration_Border_Ends
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("entry")]
        Entry,
        
        [System.Xml.Serialization.XmlEnumAttribute("exit")]
        Exit,
        
        [System.Xml.Serialization.XmlEnumAttribute("both")]
        Both,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("decoration_ends", Namespace="")]
    public enum Decoration_Ends
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("start")]
        Start,
        
        [System.Xml.Serialization.XmlEnumAttribute("stop")]
        Stop,
        
        [System.Xml.Serialization.XmlEnumAttribute("both")]
        Both,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("decoration_sides", Namespace="")]
    public enum Decoration_Sides
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("left")]
        Left,
        
        [System.Xml.Serialization.XmlEnumAttribute("right")]
        Right,
        
        [System.Xml.Serialization.XmlEnumAttribute("both")]
        Both,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("decoration_arrow_styles", Namespace="")]
    public enum Decoration_Arrow_Styles
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("decoration_arrow_directions", Namespace="")]
    public enum Decoration_Arrow_Directions
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("in")]
        In,
        
        [System.Xml.Serialization.XmlEnumAttribute("out")]
        Out,
        
        [System.Xml.Serialization.XmlEnumAttribute("both")]
        Both,
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a TrackSegment</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a TrackSegment")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint> _controlpoints;
        
        [System.Xml.Serialization.XmlArrayAttribute("controlpoints")]
        [System.Xml.Serialization.XmlArrayItemAttribute("controlpoint")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint> Controlpoints
        {
            get
            {
                return this._controlpoints;
            }
            private set
            {
                this._controlpoints = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Controlpoints-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Controlpoints collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ControlpointsSpecified
        {
            get
            {
                return (this.Controlpoints.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorTrackSegmentType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorTrackSegmentType" /> class.</para>
        /// </summary>
        public EditorTrackSegmentType()
        {
            this._controlpoints = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("decorations")]
        public EditorTrackSegmentTypeDecorations Decorations { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockname")]
        public string Blockname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("connect1name")]
        public string Connect1Name { get; set; }
        
        /// <summary>
        /// <para>Represents values of LayoutEditor.HitPointType enum,
        ///          both as 0-63 and as String names.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 113.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(object), "0", "113")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type1")]
        public string Type1 { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("connect2name")]
        public string Connect2Name { get; set; }
        
        /// <summary>
        /// <para>Represents values of LayoutEditor.HitPointType enum,
        ///          both as 0-63 and as String names.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 113.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(object), "0", "113")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type2")]
        public string Type2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("dashed")]
        public JMRI.YesNoType Dashed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dashed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dashed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DashedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("mainline")]
        public JMRI.YesNoType Mainline { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Mainline-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mainline property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainlineSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Hidden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Hidden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arc")]
        public JMRI.YesNoType Arc { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Arc-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Arc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArcSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("flip")]
        public JMRI.YesNoType Flip { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flip-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Flip property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlipSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("circle")]
        public JMRI.YesNoType Circle { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Circle-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Circle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CircleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("bezier")]
        public JMRI.YesNoType Bezier { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Bezier-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bezier property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BezierSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public float Angle { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Angle-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Angle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hideConLines")]
        public JMRI.YesNoType HideConLines { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HideConLines-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HideConLines property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideConLinesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeControlpoints", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeControlpoints
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint> _controlpoint;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("controlpoint")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint> Controlpoint
        {
            get
            {
                return this._controlpoint;
            }
            private set
            {
                this._controlpoint = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorTrackSegmentTypeControlpoints" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorTrackSegmentTypeControlpoints" /> class.</para>
        /// </summary>
        public EditorTrackSegmentTypeControlpoints()
        {
            this._controlpoint = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeControlpointsControlpoint>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeControlpointsControlpoint", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeControlpointsControlpoint
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public string Index { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public float X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public float Y { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsDecoration> _decoration;
        
        [System.Xml.Serialization.XmlElementAttribute("decoration")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsDecoration> Decoration
        {
            get
            {
                return this._decoration;
            }
            private set
            {
                this._decoration = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Decoration-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Decoration collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecorationSpecified
        {
            get
            {
                return (this.Decoration.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorTrackSegmentTypeDecorations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorTrackSegmentTypeDecorations" /> class.</para>
        /// </summary>
        public EditorTrackSegmentTypeDecorations()
        {
            this._decoration = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsDecoration>();
            this._arrow = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsArrow>();
            this._bridge = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBridge>();
            this._bumper = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBumper>();
            this._tunnel = new System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsTunnel>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsArrow> _arrow;
        
        [System.Xml.Serialization.XmlElementAttribute("arrow")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsArrow> Arrow
        {
            get
            {
                return this._arrow;
            }
            private set
            {
                this._arrow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Arrow-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Arrow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArrowSpecified
        {
            get
            {
                return (this.Arrow.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBridge> _bridge;
        
        [System.Xml.Serialization.XmlElementAttribute("bridge")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBridge> Bridge
        {
            get
            {
                return this._bridge;
            }
            private set
            {
                this._bridge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Bridge-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Bridge collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BridgeSpecified
        {
            get
            {
                return (this.Bridge.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBumper> _bumper;
        
        [System.Xml.Serialization.XmlElementAttribute("bumper")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsBumper> Bumper
        {
            get
            {
                return this._bumper;
            }
            private set
            {
                this._bumper = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Bumper-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Bumper collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BumperSpecified
        {
            get
            {
                return (this.Bumper.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsTunnel> _tunnel;
        
        [System.Xml.Serialization.XmlElementAttribute("tunnel")]
        public System.Collections.ObjectModel.Collection<EditorTrackSegmentTypeDecorationsTunnel> Tunnel
        {
            get
            {
                return this._tunnel;
            }
            private set
            {
                this._tunnel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tunnel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tunnel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TunnelSpecified
        {
            get
            {
                return (this.Tunnel.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorationsDecoration", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorationsDecoration
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorationsArrow", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorationsArrow
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public Decoration_Arrow_Styles Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public Decoration_Ends End { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die End-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("direction")]
        public Decoration_Arrow_Directions Direction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linewidth")]
        public int Linewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Linewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinewidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public int Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("gap")]
        public int Gap { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gap-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GapSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorationsBridge", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorationsBridge
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("side")]
        public Decoration_Sides Side { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Side-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Side property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public Decoration_Border_Ends End { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die End-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linewidth")]
        public int Linewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Linewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinewidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("approachwidth")]
        public int Approachwidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Approachwidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Approachwidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApproachwidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("deckwidth")]
        public int Deckwidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Deckwidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Deckwidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeckwidthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorationsBumper", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorationsBumper
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public Decoration_Ends End { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die End-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linewidth")]
        public int Linewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Linewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinewidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public int Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("flip")]
        public bool Flip { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flip-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Flip property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlipSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorTrackSegmentTypeDecorationsTunnel", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorTrackSegmentTypeDecorationsTunnel
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("side")]
        public Decoration_Sides Side { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Side-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Side property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public Decoration_Border_Ends End { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die End-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linewidth")]
        public int Linewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Linewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinewidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("entrancewidth")]
        public int Entrancewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Entrancewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Entrancewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntrancewidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("floorwidth")]
        public int Floorwidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floorwidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floorwidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorwidthSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LevelXing</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LevelXing")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLevelXingType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLevelXingType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalAMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalAMast")]
        public System.Collections.ObjectModel.Collection<string> SignalAMast
        {
            get
            {
                return this._signalAMast;
            }
            private set
            {
                this._signalAMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalAMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalAMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalAMastSpecified
        {
            get
            {
                return (this.SignalAMast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLevelXingType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLevelXingType" /> class.</para>
        /// </summary>
        public EditorLevelXingType()
        {
            this._signalAMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalBMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalCMast = new System.Collections.ObjectModel.Collection<string>();
            this._signalDMast = new System.Collections.ObjectModel.Collection<string>();
            this._sensorA = new System.Collections.ObjectModel.Collection<string>();
            this._sensorB = new System.Collections.ObjectModel.Collection<string>();
            this._sensorC = new System.Collections.ObjectModel.Collection<string>();
            this._sensorD = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalBMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalBMast")]
        public System.Collections.ObjectModel.Collection<string> SignalBMast
        {
            get
            {
                return this._signalBMast;
            }
            private set
            {
                this._signalBMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalBMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalBMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalBMastSpecified
        {
            get
            {
                return (this.SignalBMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalCMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalCMast")]
        public System.Collections.ObjectModel.Collection<string> SignalCMast
        {
            get
            {
                return this._signalCMast;
            }
            private set
            {
                this._signalCMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalCMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalCMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalCMastSpecified
        {
            get
            {
                return (this.SignalCMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signalDMast;
        
        [System.Xml.Serialization.XmlElementAttribute("signalDMast")]
        public System.Collections.ObjectModel.Collection<string> SignalDMast
        {
            get
            {
                return this._signalDMast;
            }
            private set
            {
                this._signalDMast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SignalDMast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SignalDMast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalDMastSpecified
        {
            get
            {
                return (this.SignalDMast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorA;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorA")]
        public System.Collections.ObjectModel.Collection<string> SensorA
        {
            get
            {
                return this._sensorA;
            }
            private set
            {
                this._sensorA = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorA-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorA collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorASpecified
        {
            get
            {
                return (this.SensorA.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorB;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorB")]
        public System.Collections.ObjectModel.Collection<string> SensorB
        {
            get
            {
                return this._sensorB;
            }
            private set
            {
                this._sensorB = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorB-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorB collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorBSpecified
        {
            get
            {
                return (this.SensorB.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorC;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorC")]
        public System.Collections.ObjectModel.Collection<string> SensorC
        {
            get
            {
                return this._sensorC;
            }
            private set
            {
                this._sensorC = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorC-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorC collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorCSpecified
        {
            get
            {
                return (this.SensorC.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sensorD;
        
        [System.Xml.Serialization.XmlElementAttribute("sensorD")]
        public System.Collections.ObjectModel.Collection<string> SensorD
        {
            get
            {
                return this._sensorD;
            }
            private set
            {
                this._sensorD = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SensorD-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SensorD collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorDSpecified
        {
            get
            {
                return (this.SensorD.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blocknameac")]
        public string Blocknameac { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blocknamebd")]
        public string Blocknamebd { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signal1aname")]
        public string Signal1Aname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signal1bname")]
        public string Signal1Bname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signal1cname")]
        public string Signal1Cname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signal1dname")]
        public string Signal1Dname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectaname")]
        public string Connectaname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectbname")]
        public string Connectbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectcname")]
        public string Connectcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("connectdname")]
        public string Connectdname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Hidden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Hidden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xb")]
        public float Xb { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xc")]
        public float Xc { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xc-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XcSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xcen")]
        public float Xcen { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("yb")]
        public float Yb { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("yc")]
        public float Yc { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Yc-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Yc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YcSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ycen")]
        public float Ycen { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalaname")]
        public string Signalaname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalbname")]
        public string Signalbname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signalcname")]
        public string Signalcname { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("signaldname")]
        public string Signaldname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xa")]
        public float Xa { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xa-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xa property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XaSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ya")]
        public float Ya { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ya-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ya property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YaSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LayoutTurntable.
    ///          (Not present in 2.9.3 DTD, done by observation)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LayoutTurntable. (Not present in 2.9.3 DTD" +
        ", done by observation)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutTurntableType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutTurntableType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorLayoutTurntableTypeRaytrack> _raytrack;
        
        [System.Xml.Serialization.XmlElementAttribute("raytrack")]
        public System.Collections.ObjectModel.Collection<EditorLayoutTurntableTypeRaytrack> Raytrack
        {
            get
            {
                return this._raytrack;
            }
            private set
            {
                this._raytrack = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Raytrack-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Raytrack collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RaytrackSpecified
        {
            get
            {
                return (this.Raytrack.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLayoutTurntableType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLayoutTurntableType" /> class.</para>
        /// </summary>
        public EditorLayoutTurntableType()
        {
            this._raytrack = new System.Collections.ObjectModel.Collection<EditorLayoutTurntableTypeRaytrack>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        /// <summary>
        /// <para>Identify this element, for reference in connect* attributes elsewhere</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identify this element, for reference in connect* attributes elsewhere")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        /// <summary>
        /// <para>Added 4.19.6 to identify block to which turntable belongs</para>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Added 4.19.6 to identify block to which turntable belongs")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("blockname")]
        public string Blockname { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("radius")]
        public float Radius { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("xcen")]
        public float Xcen { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ycen")]
        public float Ycen { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutControlled")]
        public JMRI.YesNoType TurnoutControlled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutControlled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TurnoutControlled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutControlledSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutTurntableTypeRaytrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutTurntableTypeRaytrack
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("connectname")]
        public string Connectname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public string Angle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public string Index { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnout")]
        public string Turnout { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutstate")]
        public string Turnoutstate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disabled")]
        public JMRI.YesNoType Disabled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Disabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Disabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disableWhenOccupied")]
        public JMRI.YesNoType DisableWhenOccupied { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisableWhenOccupied-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableWhenOccupied property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableWhenOccupiedSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a LinkingLabel</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a LinkingLabel")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLinkingLabelType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLinkingLabelType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public string Tooltip { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("icon")]
        public EditorIconType Icon { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon_1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("url")]
        public string Url { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("text")]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a IndicatorTrackIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a IndicatorTrackIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTrackIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTrackIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorIndicatorTrackIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorIndicatorTrackIconType" /> class.</para>
        /// </summary>
        public EditorIndicatorTrackIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._occupancyblock = new System.Collections.ObjectModel.Collection<string>();
            this._occupancysensor = new System.Collections.ObjectModel.Collection<string>();
            this._showTrainName = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._iconmap = new System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypeIconmap>();
            this._paths = new System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypePaths>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _occupancyblock;
        
        [System.Xml.Serialization.XmlElementAttribute("occupancyblock")]
        public System.Collections.ObjectModel.Collection<string> Occupancyblock
        {
            get
            {
                return this._occupancyblock;
            }
            private set
            {
                this._occupancyblock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Occupancyblock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Occupancyblock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancyblockSpecified
        {
            get
            {
                return (this.Occupancyblock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _occupancysensor;
        
        [System.Xml.Serialization.XmlElementAttribute("occupancysensor")]
        public System.Collections.ObjectModel.Collection<string> Occupancysensor
        {
            get
            {
                return this._occupancysensor;
            }
            private set
            {
                this._occupancysensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Occupancysensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Occupancysensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancysensorSpecified
        {
            get
            {
                return (this.Occupancysensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _showTrainName;
        
        [System.Xml.Serialization.XmlElementAttribute("showTrainName")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> ShowTrainName
        {
            get
            {
                return this._showTrainName;
            }
            private set
            {
                this._showTrainName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShowTrainName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ShowTrainName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowTrainNameSpecified
        {
            get
            {
                return (this.ShowTrainName.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypeIconmap> _iconmap;
        
        [System.Xml.Serialization.XmlElementAttribute("iconmap")]
        public System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypeIconmap> Iconmap
        {
            get
            {
                return this._iconmap;
            }
            private set
            {
                this._iconmap = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Iconmap-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Iconmap collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconmapSpecified
        {
            get
            {
                return (this.Iconmap.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypePaths> _paths;
        
        [System.Xml.Serialization.XmlElementAttribute("paths")]
        public System.Collections.ObjectModel.Collection<EditorIndicatorTrackIconTypePaths> Paths
        {
            get
            {
                return this._paths;
            }
            private set
            {
                this._paths = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Paths-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Paths collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathsSpecified
        {
            get
            {
                return (this.Paths.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTrackIconTypeIconmap", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTrackIconTypeIconmap
    {
        
        [System.Xml.Serialization.XmlElementAttribute("AllocatedTrack")]
        public EditorIconType AllocatedTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PositionTrack")]
        public EditorIconType PositionTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ClearTrack")]
        public EditorIconType ClearTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DontUseTrack")]
        public EditorIconType DontUseTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ErrorTrack")]
        public EditorIconType ErrorTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OccupiedTrack")]
        public EditorIconType OccupiedTrack { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("family")]
        public string Family { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTrackIconTypePaths", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTrackIconTypePaths
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<string> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorIndicatorTrackIconTypePaths" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorIndicatorTrackIconTypePaths" /> class.</para>
        /// </summary>
        public EditorIndicatorTrackIconTypePaths()
        {
            this._path = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing an SlipTurnoutTcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing an SlipTurnoutTcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSlipTurnoutTconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorSlipTurnoutTconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnoutEast;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutEast")]
        public System.Collections.ObjectModel.Collection<string> TurnoutEast
        {
            get
            {
                return this._turnoutEast;
            }
            private set
            {
                this._turnoutEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutEastSpecified
        {
            get
            {
                return (this.TurnoutEast.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorSlipTurnoutTconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorSlipTurnoutTconType" /> class.</para>
        /// </summary>
        public EditorSlipTurnoutTconType()
        {
            this._turnoutEast = new System.Collections.ObjectModel.Collection<string>();
            this._turnoutWest = new System.Collections.ObjectModel.Collection<string>();
            this._turnoutLowerEast = new System.Collections.ObjectModel.Collection<string>();
            this._turnoutLowerWest = new System.Collections.ObjectModel.Collection<string>();
            this._lowerWestToLowerEast = new System.Collections.ObjectModel.Collection<EditorIconTextType>();
            this._upperWestToUpperEast = new System.Collections.ObjectModel.Collection<EditorIconTextType>();
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._lowerWestToUpperEast = new System.Collections.ObjectModel.Collection<EditorIconTextType>();
            this._upperWestToLowerEast = new System.Collections.ObjectModel.Collection<EditorIconTextType>();
            this._unknown = new System.Collections.ObjectModel.Collection<EditorIconType>();
            this._inconsistent = new System.Collections.ObjectModel.Collection<EditorIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnoutWest;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutWest")]
        public System.Collections.ObjectModel.Collection<string> TurnoutWest
        {
            get
            {
                return this._turnoutWest;
            }
            private set
            {
                this._turnoutWest = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutWest-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutWest collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutWestSpecified
        {
            get
            {
                return (this.TurnoutWest.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnoutLowerEast;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutLowerEast")]
        public System.Collections.ObjectModel.Collection<string> TurnoutLowerEast
        {
            get
            {
                return this._turnoutLowerEast;
            }
            private set
            {
                this._turnoutLowerEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutLowerEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutLowerEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutLowerEastSpecified
        {
            get
            {
                return (this.TurnoutLowerEast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnoutLowerWest;
        
        [System.Xml.Serialization.XmlElementAttribute("turnoutLowerWest")]
        public System.Collections.ObjectModel.Collection<string> TurnoutLowerWest
        {
            get
            {
                return this._turnoutLowerWest;
            }
            private set
            {
                this._turnoutLowerWest = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutLowerWest-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TurnoutLowerWest collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutLowerWestSpecified
        {
            get
            {
                return (this.TurnoutLowerWest.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconTextType> _lowerWestToLowerEast;
        
        [System.Xml.Serialization.XmlElementAttribute("lowerWestToLowerEast")]
        public System.Collections.ObjectModel.Collection<EditorIconTextType> LowerWestToLowerEast
        {
            get
            {
                return this._lowerWestToLowerEast;
            }
            private set
            {
                this._lowerWestToLowerEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LowerWestToLowerEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LowerWestToLowerEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowerWestToLowerEastSpecified
        {
            get
            {
                return (this.LowerWestToLowerEast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconTextType> _upperWestToUpperEast;
        
        [System.Xml.Serialization.XmlElementAttribute("upperWestToUpperEast")]
        public System.Collections.ObjectModel.Collection<EditorIconTextType> UpperWestToUpperEast
        {
            get
            {
                return this._upperWestToUpperEast;
            }
            private set
            {
                this._upperWestToUpperEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UpperWestToUpperEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UpperWestToUpperEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpperWestToUpperEastSpecified
        {
            get
            {
                return (this.UpperWestToUpperEast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconTextType> _lowerWestToUpperEast;
        
        [System.Xml.Serialization.XmlElementAttribute("lowerWestToUpperEast")]
        public System.Collections.ObjectModel.Collection<EditorIconTextType> LowerWestToUpperEast
        {
            get
            {
                return this._lowerWestToUpperEast;
            }
            private set
            {
                this._lowerWestToUpperEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LowerWestToUpperEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LowerWestToUpperEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowerWestToUpperEastSpecified
        {
            get
            {
                return (this.LowerWestToUpperEast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconTextType> _upperWestToLowerEast;
        
        [System.Xml.Serialization.XmlElementAttribute("upperWestToLowerEast")]
        public System.Collections.ObjectModel.Collection<EditorIconTextType> UpperWestToLowerEast
        {
            get
            {
                return this._upperWestToLowerEast;
            }
            private set
            {
                this._upperWestToLowerEast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UpperWestToLowerEast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UpperWestToLowerEast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpperWestToLowerEastSpecified
        {
            get
            {
                return (this.UpperWestToLowerEast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _unknown;
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Unknown
        {
            get
            {
                return this._unknown;
            }
            private set
            {
                this._unknown = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Unknown-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Unknown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownSpecified
        {
            get
            {
                return (this.Unknown.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIconType> _inconsistent;
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public System.Collections.ObjectModel.Collection<EditorIconType> Inconsistent
        {
            get
            {
                return this._inconsistent;
            }
            private set
            {
                this._inconsistent = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Inconsistent-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Inconsistent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InconsistentSpecified
        {
            get
            {
                return (this.Inconsistent.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutType")]
        public EditorSlipTurnoutTconTypeTurnoutType TurnoutType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TurnoutType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TurnoutType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tristate")]
        public JMRI.TrueFalseType Tristate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tristate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tristate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TristateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("singleSlipRoute")]
        public EditorSlipTurnoutTconTypeSingleSlipRoute SingleSlipRoute { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SingleSlipRoute-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SingleSlipRoute property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SingleSlipRouteSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("firstTurnoutExit")]
        public EditorSlipTurnoutTconTypeFirstTurnoutExit FirstTurnoutExit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirstTurnoutExit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstTurnoutExit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstTurnoutExitSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public float Degrees { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Degrees-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Degrees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreesSpecified { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSlipTurnoutTconTypeTurnoutType", Namespace="", AnonymousType=true)]
    public enum EditorSlipTurnoutTconTypeTurnoutType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("doubleSlip")]
        DoubleSlip,
        
        [System.Xml.Serialization.XmlEnumAttribute("singleSlip")]
        SingleSlip,
        
        [System.Xml.Serialization.XmlEnumAttribute("threeWay")]
        ThreeWay,
        
        [System.Xml.Serialization.XmlEnumAttribute("scissor")]
        Scissor,
        
        [System.Xml.Serialization.XmlEnumAttribute("double")]
        Double,
        
        [System.Xml.Serialization.XmlEnumAttribute("single")]
        Single,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSlipTurnoutTconTypeSingleSlipRoute", Namespace="", AnonymousType=true)]
    public enum EditorSlipTurnoutTconTypeSingleSlipRoute
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("upperWestToUpperEast")]
        UpperWestToUpperEast,
        
        [System.Xml.Serialization.XmlEnumAttribute("lowerWestToLowerEast")]
        LowerWestToLowerEast,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorSlipTurnoutTconTypeFirstTurnoutExit", Namespace="", AnonymousType=true)]
    public enum EditorSlipTurnoutTconTypeFirstTurnoutExit
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("upper")]
        Upper,
        
        [System.Xml.Serialization.XmlEnumAttribute("lower")]
        Lower,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing an IndicatorTurnoutIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing an IndicatorTurnoutIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorIndicatorTurnoutIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorIndicatorTurnoutIconType" /> class.</para>
        /// </summary>
        public EditorIndicatorTurnoutIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
            this._turnout = new System.Collections.ObjectModel.Collection<string>();
            this._occupancyblock = new System.Collections.ObjectModel.Collection<string>();
            this._occupancysensor = new System.Collections.ObjectModel.Collection<string>();
            this._showTrainName = new System.Collections.ObjectModel.Collection<JMRI.YesNoType>();
            this._iconmaps = new System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypeIconmaps>();
            this._paths = new System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypePaths>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _turnout;
        
        [System.Xml.Serialization.XmlElementAttribute("turnout")]
        public System.Collections.ObjectModel.Collection<string> Turnout
        {
            get
            {
                return this._turnout;
            }
            private set
            {
                this._turnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutSpecified
        {
            get
            {
                return (this.Turnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _occupancyblock;
        
        [System.Xml.Serialization.XmlElementAttribute("occupancyblock")]
        public System.Collections.ObjectModel.Collection<string> Occupancyblock
        {
            get
            {
                return this._occupancyblock;
            }
            private set
            {
                this._occupancyblock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Occupancyblock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Occupancyblock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancyblockSpecified
        {
            get
            {
                return (this.Occupancyblock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _occupancysensor;
        
        [System.Xml.Serialization.XmlElementAttribute("occupancysensor")]
        public System.Collections.ObjectModel.Collection<string> Occupancysensor
        {
            get
            {
                return this._occupancysensor;
            }
            private set
            {
                this._occupancysensor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Occupancysensor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Occupancysensor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancysensorSpecified
        {
            get
            {
                return (this.Occupancysensor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.YesNoType> _showTrainName;
        
        [System.Xml.Serialization.XmlElementAttribute("showTrainName")]
        public System.Collections.ObjectModel.Collection<JMRI.YesNoType> ShowTrainName
        {
            get
            {
                return this._showTrainName;
            }
            private set
            {
                this._showTrainName = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShowTrainName-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ShowTrainName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowTrainNameSpecified
        {
            get
            {
                return (this.ShowTrainName.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypeIconmaps> _iconmaps;
        
        [System.Xml.Serialization.XmlElementAttribute("iconmaps")]
        public System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypeIconmaps> Iconmaps
        {
            get
            {
                return this._iconmaps;
            }
            private set
            {
                this._iconmaps = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Iconmaps-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Iconmaps collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconmapsSpecified
        {
            get
            {
                return (this.Iconmaps.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypePaths> _paths;
        
        [System.Xml.Serialization.XmlElementAttribute("paths")]
        public System.Collections.ObjectModel.Collection<EditorIndicatorTurnoutIconTypePaths> Paths
        {
            get
            {
                return this._paths;
            }
            private set
            {
                this._paths = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Paths-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Paths collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathsSpecified
        {
            get
            {
                return (this.Paths.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmaps", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmaps
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("AllocatedTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsAllocatedTrack AllocatedTrack { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("PositionTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsPositionTrack PositionTrack { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ClearTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsClearTrack ClearTrack { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DontUseTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsDontUseTrack DontUseTrack { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ErrorTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsErrorTrack ErrorTrack { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("OccupiedTrack")]
        public EditorIndicatorTurnoutIconTypeIconmapsOccupiedTrack OccupiedTrack { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("family")]
        public string Family { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsAllocatedTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsAllocatedTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsPositionTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsPositionTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsClearTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsClearTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsDontUseTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsDontUseTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsErrorTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsErrorTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypeIconmapsOccupiedTrack", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypeIconmapsOccupiedTrack
    {
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateUnknown")]
        public EditorIconType BeanStateUnknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateClosed")]
        public EditorIconType TurnoutStateClosed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TurnoutStateThrown")]
        public EditorIconType TurnoutStateThrown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BeanStateInconsistent")]
        public EditorIconType BeanStateInconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorIndicatorTurnoutIconTypePaths", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorIndicatorTurnoutIconTypePaths
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _path;
        
        [System.Xml.Serialization.XmlElementAttribute("path")]
        public System.Collections.ObjectModel.Collection<string> Path
        {
            get
            {
                return this._path;
            }
            private set
            {
                this._path = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Path-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Path collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PathSpecified
        {
            get
            {
                return (this.Path.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorIndicatorTurnoutIconTypePaths" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorIndicatorTurnoutIconTypePaths" /> class.</para>
        /// </summary>
        public EditorIndicatorTurnoutIconTypePaths()
        {
            this._path = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a PortalIcon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a PortalIcon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorPortalIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorPortalIconType : IEditorCommonAttributesGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _tooltip;
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public System.Collections.ObjectModel.Collection<string> Tooltip
        {
            get
            {
                return this._tooltip;
            }
            private set
            {
                this._tooltip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tooltip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tooltip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TooltipSpecified
        {
            get
            {
                return (this.Tooltip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorPortalIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorPortalIconType" /> class.</para>
        /// </summary>
        public EditorPortalIconType()
        {
            this._tooltip = new System.Collections.ObjectModel.Collection<string>();
            this._toolTip = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _toolTip;
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public System.Collections.ObjectModel.Collection<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ToolTip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("portalName")]
        public string PortalName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toBlockName")]
        public string ToBlockName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromBlockName")]
        public string FromBlockName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public string Scale { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrowSwitch")]
        public JMRI.YesNoType ArrowSwitch { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ArrowSwitch-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArrowSwitch property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArrowSwitchSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrowHide")]
        public JMRI.YesNoType ArrowHide { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ArrowHide-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArrowHide property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArrowHideSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a Light Icon</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a Light Icon")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLightIconType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLightIconType : IEditorCommonAttributesGroup, IEditorCommonTextInfoGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("tooltip")]
        public string Tooltip { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 3.5.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 3.5.2")]
        [System.Xml.Serialization.XmlElementAttribute("toolTip")]
        public string ToolTip { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorLightIconTypeIcons> _icons;
        
        [System.Xml.Serialization.XmlElementAttribute("icons")]
        public System.Collections.ObjectModel.Collection<EditorLightIconTypeIcons> Icons
        {
            get
            {
                return this._icons;
            }
            private set
            {
                this._icons = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icons-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconsSpecified
        {
            get
            {
                return (this.Icons.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLightIconType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLightIconType" /> class.</para>
        /// </summary>
        public EditorLightIconType()
        {
            this._icons = new System.Collections.ObjectModel.Collection<EditorLightIconTypeIcons>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public int X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public int Y { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public int Level { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _forcecontroloff = JMRI.TrueFalseType.False;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.False)]
        [System.Xml.Serialization.XmlAttributeAttribute("forcecontroloff")]
        public JMRI.TrueFalseType Forcecontroloff
        {
            get
            {
                return this._forcecontroloff;
            }
            set
            {
                this._forcecontroloff = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hidden = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hidden")]
        public JMRI.YesNoType Hidden
        {
            get
            {
                return this._hidden;
            }
            set
            {
                this._hidden = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.TrueFalseType Positionable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Positionable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _showtooltip = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltip")]
        public JMRI.TrueFalseType Showtooltip
        {
            get
            {
                return this._showtooltip;
            }
            set
            {
                this._showtooltip = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.TrueFalseType _editable = JMRI.TrueFalseType.True;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.TrueFalseType.True)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.TrueFalseType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontname")]
        public string Fontname { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("style")]
        public string Style { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public byte Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Red-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("green")]
        public byte Green { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Green-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Green property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blue")]
        public byte Blue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Blue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackground")]
        public JMRI.YesNoType HasBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("margin")]
        public int Margin { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Margin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Margin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBack")]
        public int RedBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBack")]
        public int GreenBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBack")]
        public int BlueBack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedWidth")]
        public string FixedWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fixedHeight")]
        public string FixedHeight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("borderSize")]
        public int BorderSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BorderSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BorderSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBorder")]
        public int RedBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBorder")]
        public int GreenBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBorder")]
        public int BlueBorder { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBorder-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBorder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBorderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JustificationType _justification = JMRI.JustificationType.Left;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.JustificationType.Left)]
        [System.Xml.Serialization.XmlAttributeAttribute("justification")]
        public JustificationType Justification
        {
            get
            {
                return this._justification;
            }
            set
            {
                this._justification = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IEditorCommonTextInfoGroupOrientation _orientation = JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.IEditorCommonTextInfoGroupOrientation.Horizontal)]
        [System.Xml.Serialization.XmlAttributeAttribute("orientation")]
        public IEditorCommonTextInfoGroupOrientation Orientation
        {
            get
            {
                return this._orientation;
            }
            set
            {
                this._orientation = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.9.3</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.9.3")]
        [System.Xml.Serialization.XmlAttributeAttribute("rotate")]
        public string Rotate { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.?</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.?")]
        [System.Xml.Serialization.XmlAttributeAttribute("fixed")]
        public JMRI.TrueFalseType Fixed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para>General definition of "systemName" attribute type.
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("light")]
        public string Light { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLightIconTypeIcons", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLightIconTypeIcons
    {
        
        [System.Xml.Serialization.XmlElementAttribute("on")]
        public LightIconIconsType On { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("off")]
        public LightIconIconsType Off { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("unknown")]
        public LightIconIconsType Unknown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("inconsistent")]
        public LightIconIconsType Inconsistent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LightIconIconsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LightIconIconsType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("rotation")]
        public string Rotation { get; set; }
        
        /// <summary>
        /// <para>Only valid URLs for resource access. 
        ///          Checks for a valid prefix, then a pathname without an invalid filename character.
        ///          A: through Z: accepted for Windows.
        ///          Any HTTP(S) URL should be accepted.</para>
        /// <para xml:lang="en">Pattern: ((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]:|/)(/|\\|[^\\/?*:;{}]+)+|https?://.+/?.*).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((resource:|program:|preference:|settings:|home:|profile:|file:|scripts:|[a-zA-Z]" +
            ":|/)(/|\\\\|[^\\\\/?*:;{}]+)+|https?://.+/?.*)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("url")]
        public string Url { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("degrees")]
        public string Degrees { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public float Scale { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing a Layout Shape</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing a Layout Shape")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutShapeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutShapeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint> _points;
        
        [System.Xml.Serialization.XmlArrayAttribute("points")]
        [System.Xml.Serialization.XmlArrayItemAttribute("point")]
        public System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint> Points
        {
            get
            {
                return this._points;
            }
            private set
            {
                this._points = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Points-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Points collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointsSpecified
        {
            get
            {
                return (this.Points.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLayoutShapeType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLayoutShapeType" /> class.</para>
        /// </summary>
        public EditorLayoutShapeType()
        {
            this._points = new System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ident")]
        public string Ident { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public EditorLayoutShapeTypeType Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("level")]
        public string Level { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linewidth")]
        public int Linewidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linewidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Linewidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinewidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("lineColor")]
        public string LineColor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("fillColor")]
        public string FillColor { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutShapeTypePoints", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutShapeTypePoints
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint> _point;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("point")]
        public System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint> Point
        {
            get
            {
                return this._point;
            }
            private set
            {
                this._point = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EditorLayoutShapeTypePoints" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EditorLayoutShapeTypePoints" /> class.</para>
        /// </summary>
        public EditorLayoutShapeTypePoints()
        {
            this._point = new System.Collections.ObjectModel.Collection<EditorLayoutShapeTypePointsPoint>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutShapeTypePointsPoint", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditorLayoutShapeTypePointsPoint
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public EditorLayoutShapeTypePointsPointType Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public float X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public float Y { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutShapeTypePointsPointType", Namespace="", AnonymousType=true)]
    public enum EditorLayoutShapeTypePointsPointType
    {
        
        Straight,
        
        Curve,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EditorLayoutShapeTypeType", Namespace="", AnonymousType=true)]
    public enum EditorLayoutShapeTypeType
    {
        
        Open,
        
        Filled,
        
        Closed,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a LayoutEditor panel.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a LayoutEditor panel.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LayoutEditorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutEditorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTrackDrawingOptionsType> _layoutTrackDrawingOptions;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutTrackDrawingOptions")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTrackDrawingOptionsType> LayoutTrackDrawingOptions
        {
            get
            {
                return this._layoutTrackDrawingOptions;
            }
            private set
            {
                this._layoutTrackDrawingOptions = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutTrackDrawingOptions-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutTrackDrawingOptions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutTrackDrawingOptionsSpecified
        {
            get
            {
                return (this.LayoutTrackDrawingOptions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LayoutEditorType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LayoutEditorType" /> class.</para>
        /// </summary>
        public LayoutEditorType()
        {
            this._layoutTrackDrawingOptions = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTrackDrawingOptionsType>();
            this._positionablelabel = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType>();
            this._positionablepoint = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType>();
            this._trainicon = new System.Collections.ObjectModel.Collection<JMRI.EditorTrainIconType>();
            this._turnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType>();
            this._sensoricon = new System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType>();
            this._memoryicon = new System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType>();
            this._memoryInputIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType>();
            this._signalheadicon = new System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType>();
            this._signalmasticon = new System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType>();
            this._reportericon = new System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType>();
            this._layoutturnout = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType>();
            this._layoutSlip = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType>();
            this._tracksegment = new System.Collections.ObjectModel.Collection<JMRI.EditorTrackSegmentType>();
            this._fastclock = new System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType>();
            this._multisensoricon = new System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType>();
            this._levelxing = new System.Collections.ObjectModel.Collection<JMRI.EditorLevelXingType>();
            this._layoutturntable = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurntableType>();
            this._linkinglabel = new System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType>();
            this._locoicon = new System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType>();
            this._blockContentsIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType>();
            this._lightIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType>();
            this._layoutShape = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutShapeType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType> _positionablelabel;
        
        [System.Xml.Serialization.XmlElementAttribute("positionablelabel")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType> Positionablelabel
        {
            get
            {
                return this._positionablelabel;
            }
            private set
            {
                this._positionablelabel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionablelabel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Positionablelabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionablelabelSpecified
        {
            get
            {
                return (this.Positionablelabel.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType> _positionablepoint;
        
        [System.Xml.Serialization.XmlElementAttribute("positionablepoint")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType> Positionablepoint
        {
            get
            {
                return this._positionablepoint;
            }
            private set
            {
                this._positionablepoint = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionablepoint-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Positionablepoint collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionablepointSpecified
        {
            get
            {
                return (this.Positionablepoint.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorTrainIconType> _trainicon;
        
        [System.Xml.Serialization.XmlElementAttribute("trainicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorTrainIconType> Trainicon
        {
            get
            {
                return this._trainicon;
            }
            private set
            {
                this._trainicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Trainicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Trainicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainiconSpecified
        {
            get
            {
                return (this.Trainicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> _turnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("turnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> Turnouticon
        {
            get
            {
                return this._turnouticon;
            }
            private set
            {
                this._turnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnouticonSpecified
        {
            get
            {
                return (this.Turnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> _sensoricon;
        
        [System.Xml.Serialization.XmlElementAttribute("sensoricon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> Sensoricon
        {
            get
            {
                return this._sensoricon;
            }
            private set
            {
                this._sensoricon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensoricon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensoricon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensoriconSpecified
        {
            get
            {
                return (this.Sensoricon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType> _memoryicon;
        
        [System.Xml.Serialization.XmlElementAttribute("memoryicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType> Memoryicon
        {
            get
            {
                return this._memoryicon;
            }
            private set
            {
                this._memoryicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memoryicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memoryicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryiconSpecified
        {
            get
            {
                return (this.Memoryicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType> _memoryInputIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("memoryInputIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType> MemoryInputIcon
        {
            get
            {
                return this._memoryInputIcon;
            }
            private set
            {
                this._memoryInputIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryInputIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MemoryInputIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryInputIconSpecified
        {
            get
            {
                return (this.MemoryInputIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType> _signalheadicon;
        
        [System.Xml.Serialization.XmlElementAttribute("signalheadicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType> Signalheadicon
        {
            get
            {
                return this._signalheadicon;
            }
            private set
            {
                this._signalheadicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalheadicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalheadicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalheadiconSpecified
        {
            get
            {
                return (this.Signalheadicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType> _signalmasticon;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmasticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType> Signalmasticon
        {
            get
            {
                return this._signalmasticon;
            }
            private set
            {
                this._signalmasticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmasticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmasticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmasticonSpecified
        {
            get
            {
                return (this.Signalmasticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType> _reportericon;
        
        [System.Xml.Serialization.XmlElementAttribute("reportericon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType> Reportericon
        {
            get
            {
                return this._reportericon;
            }
            private set
            {
                this._reportericon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reportericon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reportericon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportericonSpecified
        {
            get
            {
                return (this.Reportericon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> _layoutturnout;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutturnout")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> Layoutturnout
        {
            get
            {
                return this._layoutturnout;
            }
            private set
            {
                this._layoutturnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutturnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutturnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutturnoutSpecified
        {
            get
            {
                return (this.Layoutturnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> _layoutSlip;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutSlip")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> LayoutSlip
        {
            get
            {
                return this._layoutSlip;
            }
            private set
            {
                this._layoutSlip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutSlip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutSlip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSlipSpecified
        {
            get
            {
                return (this.LayoutSlip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorTrackSegmentType> _tracksegment;
        
        [System.Xml.Serialization.XmlElementAttribute("tracksegment")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorTrackSegmentType> Tracksegment
        {
            get
            {
                return this._tracksegment;
            }
            private set
            {
                this._tracksegment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tracksegment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tracksegment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TracksegmentSpecified
        {
            get
            {
                return (this.Tracksegment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType> _fastclock;
        
        [System.Xml.Serialization.XmlElementAttribute("fastclock")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType> Fastclock
        {
            get
            {
                return this._fastclock;
            }
            private set
            {
                this._fastclock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fastclock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Fastclock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FastclockSpecified
        {
            get
            {
                return (this.Fastclock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType> _multisensoricon;
        
        [System.Xml.Serialization.XmlElementAttribute("multisensoricon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType> Multisensoricon
        {
            get
            {
                return this._multisensoricon;
            }
            private set
            {
                this._multisensoricon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Multisensoricon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Multisensoricon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultisensoriconSpecified
        {
            get
            {
                return (this.Multisensoricon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLevelXingType> _levelxing;
        
        [System.Xml.Serialization.XmlElementAttribute("levelxing")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLevelXingType> Levelxing
        {
            get
            {
                return this._levelxing;
            }
            private set
            {
                this._levelxing = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Levelxing-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Levelxing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelxingSpecified
        {
            get
            {
                return (this.Levelxing.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurntableType> _layoutturntable;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutturntable")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurntableType> Layoutturntable
        {
            get
            {
                return this._layoutturntable;
            }
            private set
            {
                this._layoutturntable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutturntable-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutturntable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutturntableSpecified
        {
            get
            {
                return (this.Layoutturntable.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType> _linkinglabel;
        
        [System.Xml.Serialization.XmlElementAttribute("linkinglabel")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType> Linkinglabel
        {
            get
            {
                return this._linkinglabel;
            }
            private set
            {
                this._linkinglabel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linkinglabel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Linkinglabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkinglabelSpecified
        {
            get
            {
                return (this.Linkinglabel.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType> _locoicon;
        
        [System.Xml.Serialization.XmlElementAttribute("locoicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType> Locoicon
        {
            get
            {
                return this._locoicon;
            }
            private set
            {
                this._locoicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Locoicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Locoicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocoiconSpecified
        {
            get
            {
                return (this.Locoicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType> _blockContentsIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("BlockContentsIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType> BlockContentsIcon
        {
            get
            {
                return this._blockContentsIcon;
            }
            private set
            {
                this._blockContentsIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlockContentsIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BlockContentsIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockContentsIconSpecified
        {
            get
            {
                return (this.BlockContentsIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> _lightIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("LightIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> LightIcon
        {
            get
            {
                return this._lightIcon;
            }
            private set
            {
                this._lightIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LightIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LightIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightIconSpecified
        {
            get
            {
                return (this.LightIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutShapeType> _layoutShape;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutShape")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutShapeType> LayoutShape
        {
            get
            {
                return this._layoutShape;
            }
            private set
            {
                this._layoutShape = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutShape-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutShape collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutShapeSpecified
        {
            get
            {
                return (this.LayoutShape.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("windowheight")]
        public string Windowheight { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("windowwidth")]
        public string Windowwidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("panelheight")]
        public string Panelheight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("panelwidth")]
        public string Panelwidth { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Deprecated since JMRI 2.2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deprecated since JMRI 2.2")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _sliders = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("sliders")]
        public JMRI.YesNoType Sliders
        {
            get
            {
                return this._sliders;
            }
            set
            {
                this._sliders = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.ScrollableType _scrollable = JMRI.ScrollableType.Both;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.ScrollableType.Both)]
        [System.Xml.Serialization.XmlAttributeAttribute("scrollable")]
        public JMRI.ScrollableType Scrollable
        {
            get
            {
                return this._scrollable;
            }
            set
            {
                this._scrollable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _editable = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.YesNoType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _positionable = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.YesNoType Positionable
        {
            get
            {
                return this._positionable;
            }
            set
            {
                this._positionable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _controlling = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("controlling")]
        public JMRI.YesNoType Controlling
        {
            get
            {
                return this._controlling;
            }
            set
            {
                this._controlling = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _animating = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("animating")]
        public JMRI.YesNoType Animating
        {
            get
            {
                return this._animating;
            }
            set
            {
                this._animating = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showhelpbar = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("showhelpbar")]
        public JMRI.YesNoType Showhelpbar
        {
            get
            {
                return this._showhelpbar;
            }
            set
            {
                this._showhelpbar = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _drawgrid = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("drawgrid")]
        public JMRI.YesNoType Drawgrid
        {
            get
            {
                return this._drawgrid;
            }
            set
            {
                this._drawgrid = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _snaponadd = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("snaponadd")]
        public JMRI.YesNoType Snaponadd
        {
            get
            {
                return this._snaponadd;
            }
            set
            {
                this._snaponadd = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _snaponmove = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("snaponmove")]
        public JMRI.YesNoType Snaponmove
        {
            get
            {
                return this._snaponmove;
            }
            set
            {
                this._snaponmove = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _antialiasing = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("antialiasing")]
        public JMRI.YesNoType Antialiasing
        {
            get
            {
                return this._antialiasing;
            }
            set
            {
                this._antialiasing = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _turnoutcircles = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutcircles")]
        public JMRI.YesNoType Turnoutcircles
        {
            get
            {
                return this._turnoutcircles;
            }
            set
            {
                this._turnoutcircles = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _tooltipsnotedit = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("tooltipsnotedit")]
        public JMRI.YesNoType Tooltipsnotedit
        {
            get
            {
                return this._tooltipsnotedit;
            }
            set
            {
                this._tooltipsnotedit = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _tooltipsinedit = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("tooltipsinedit")]
        public JMRI.YesNoType Tooltipsinedit
        {
            get
            {
                return this._tooltipsinedit;
            }
            set
            {
                this._tooltipsinedit = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("mainlinetrackwidth")]
        public string Mainlinetrackwidth { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("sidetrackwidth")]
        public string Sidetrackwidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xscale")]
        public float Xscale { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xscale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xscale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XscaleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("yscale")]
        public float Yscale { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Yscale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Yscale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YscaleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("defaulttrackcolor")]
        public string Defaulttrackcolor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("defaultalternativetrackcolor")]
        public string Defaultalternativetrackcolor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("defaultoccupiedtrackcolor")]
        public string Defaultoccupiedtrackcolor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("defaulttextcolor")]
        public string Defaulttextcolor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutcirclecolor")]
        public string Turnoutcirclecolor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutcirclethrowncolor")]
        public string Turnoutcirclethrowncolor { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _turnoutfillcontrolcircles = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutfillcontrolcircles")]
        public JMRI.YesNoType Turnoutfillcontrolcircles
        {
            get
            {
                return this._turnoutfillcontrolcircles;
            }
            set
            {
                this._turnoutfillcontrolcircles = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutcirclesize")]
        public string Turnoutcirclesize { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _turnoutdrawunselectedleg = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutdrawunselectedleg")]
        public JMRI.YesNoType Turnoutdrawunselectedleg
        {
            get
            {
                return this._turnoutdrawunselectedleg;
            }
            set
            {
                this._turnoutdrawunselectedleg = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutbx")]
        public float Turnoutbx { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnoutbx-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Turnoutbx property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutbxSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutcx")]
        public float Turnoutcx { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnoutcx-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Turnoutcx property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutcxSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("turnoutwid")]
        public float Turnoutwid { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnoutwid-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Turnoutwid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutwidSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xoverlong")]
        public float Xoverlong { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xoverlong-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xoverlong property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XoverlongSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xoverhwid")]
        public float Xoverhwid { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xoverhwid-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xoverhwid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XoverhwidSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("xovershort")]
        public float Xovershort { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Xovershort-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Xovershort property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XovershortSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBackground")]
        public string RedBackground { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBackground")]
        public string GreenBackground { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBackground")]
        public string BlueBackground { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _autoblkgenerate = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("autoblkgenerate")]
        public JMRI.YesNoType Autoblkgenerate
        {
            get
            {
                return this._autoblkgenerate;
            }
            set
            {
                this._autoblkgenerate = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("gridSize")]
        public string GridSize { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("gridSize2nd")]
        public string GridSize2Nd { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _openDispatcher = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("openDispatcher")]
        public JMRI.YesNoType OpenDispatcher
        {
            get
            {
                return this._openDispatcher;
            }
            set
            {
                this._openDispatcher = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _useDirectTurnoutControl = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("useDirectTurnoutControl")]
        public JMRI.YesNoType UseDirectTurnoutControl
        {
            get
            {
                return this._useDirectTurnoutControl;
            }
            set
            {
                this._useDirectTurnoutControl = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private float _zoom = 1F;
        
        [System.ComponentModel.DefaultValueAttribute(1F)]
        [System.Xml.Serialization.XmlAttributeAttribute("zoom")]
        public float Zoom
        {
            get
            {
                return this._zoom;
            }
            set
            {
                this._zoom = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("trackAsColourType", Namespace="")]
    public enum TrackAsColourType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("track")]
        Track,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a Panel Editor or Control Panel Editor panel.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a Panel Editor or Control Pan" +
        "el Editor panel.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PanelEditorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PanelEditorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorIconsType> _icons;
        
        [System.Xml.Serialization.XmlElementAttribute("icons")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorIconsType> Icons
        {
            get
            {
                return this._icons;
            }
            private set
            {
                this._icons = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icons-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconsSpecified
        {
            get
            {
                return (this.Icons.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PanelEditorType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PanelEditorType" /> class.</para>
        /// </summary>
        public PanelEditorType()
        {
            this._icons = new System.Collections.ObjectModel.Collection<JMRI.EditorIconsType>();
            this._positionablelabel = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType>();
            this._linkinglabel = new System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType>();
            this._positionablepoint = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType>();
            this._positionableRectangle = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRectangleType>();
            this._positionableRoundRect = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRoundRectType>();
            this._positionableCircle = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableCircleType>();
            this._positionableEllipse = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionableEllipseType>();
            this._positionablePolygon = new System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePolygonType>();
            this._turnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType>();
            this._sensoricon = new System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType>();
            this._memoryicon = new System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType>();
            this._memoryInputIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType>();
            this._memoryComboIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorMemoryComboIconType>();
            this._signalheadicon = new System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType>();
            this._signalmasticon = new System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType>();
            this._reportericon = new System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType>();
            this._layoutturnout = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType>();
            this._layoutSlip = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType>();
            this._multisensoricon = new System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType>();
            this._fastclock = new System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType>();
            this._locoicon = new System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType>();
            this._locoLabel = new System.Collections.ObjectModel.Collection<JMRI.EditorLocoLabelType>();
            this._indicatortrackicon = new System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTrackIconType>();
            this._slipturnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorSlipTurnoutTconType>();
            this._indicatorturnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType>();
            this._portalIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorPortalIconType>();
            this._lightIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType>();
            this._blockContentsIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType> _positionablelabel;
        
        [System.Xml.Serialization.XmlElementAttribute("positionablelabel")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableLabelType> Positionablelabel
        {
            get
            {
                return this._positionablelabel;
            }
            private set
            {
                this._positionablelabel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionablelabel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Positionablelabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionablelabelSpecified
        {
            get
            {
                return (this.Positionablelabel.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType> _linkinglabel;
        
        [System.Xml.Serialization.XmlElementAttribute("linkinglabel")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLinkingLabelType> Linkinglabel
        {
            get
            {
                return this._linkinglabel;
            }
            private set
            {
                this._linkinglabel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Linkinglabel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Linkinglabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkinglabelSpecified
        {
            get
            {
                return (this.Linkinglabel.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType> _positionablepoint;
        
        [System.Xml.Serialization.XmlElementAttribute("positionablepoint")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePointType> Positionablepoint
        {
            get
            {
                return this._positionablepoint;
            }
            private set
            {
                this._positionablepoint = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Positionablepoint-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Positionablepoint collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionablepointSpecified
        {
            get
            {
                return (this.Positionablepoint.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRectangleType> _positionableRectangle;
        
        [System.Xml.Serialization.XmlElementAttribute("positionableRectangle")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRectangleType> PositionableRectangle
        {
            get
            {
                return this._positionableRectangle;
            }
            private set
            {
                this._positionableRectangle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionableRectangle-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PositionableRectangle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableRectangleSpecified
        {
            get
            {
                return (this.PositionableRectangle.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRoundRectType> _positionableRoundRect;
        
        [System.Xml.Serialization.XmlElementAttribute("positionableRoundRect")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableRoundRectType> PositionableRoundRect
        {
            get
            {
                return this._positionableRoundRect;
            }
            private set
            {
                this._positionableRoundRect = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionableRoundRect-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PositionableRoundRect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableRoundRectSpecified
        {
            get
            {
                return (this.PositionableRoundRect.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableCircleType> _positionableCircle;
        
        [System.Xml.Serialization.XmlElementAttribute("positionableCircle")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableCircleType> PositionableCircle
        {
            get
            {
                return this._positionableCircle;
            }
            private set
            {
                this._positionableCircle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionableCircle-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PositionableCircle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableCircleSpecified
        {
            get
            {
                return (this.PositionableCircle.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionableEllipseType> _positionableEllipse;
        
        [System.Xml.Serialization.XmlElementAttribute("positionableEllipse")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionableEllipseType> PositionableEllipse
        {
            get
            {
                return this._positionableEllipse;
            }
            private set
            {
                this._positionableEllipse = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionableEllipse-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PositionableEllipse collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionableEllipseSpecified
        {
            get
            {
                return (this.PositionableEllipse.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePolygonType> _positionablePolygon;
        
        [System.Xml.Serialization.XmlElementAttribute("positionablePolygon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPositionablePolygonType> PositionablePolygon
        {
            get
            {
                return this._positionablePolygon;
            }
            private set
            {
                this._positionablePolygon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionablePolygon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PositionablePolygon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionablePolygonSpecified
        {
            get
            {
                return (this.PositionablePolygon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> _turnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("turnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> Turnouticon
        {
            get
            {
                return this._turnouticon;
            }
            private set
            {
                this._turnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnouticonSpecified
        {
            get
            {
                return (this.Turnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> _sensoricon;
        
        [System.Xml.Serialization.XmlElementAttribute("sensoricon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> Sensoricon
        {
            get
            {
                return this._sensoricon;
            }
            private set
            {
                this._sensoricon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensoricon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensoricon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensoriconSpecified
        {
            get
            {
                return (this.Sensoricon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType> _memoryicon;
        
        [System.Xml.Serialization.XmlElementAttribute("memoryicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMemoryIconType> Memoryicon
        {
            get
            {
                return this._memoryicon;
            }
            private set
            {
                this._memoryicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memoryicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memoryicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryiconSpecified
        {
            get
            {
                return (this.Memoryicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType> _memoryInputIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("memoryInputIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMemoryInputIconType> MemoryInputIcon
        {
            get
            {
                return this._memoryInputIcon;
            }
            private set
            {
                this._memoryInputIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryInputIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MemoryInputIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryInputIconSpecified
        {
            get
            {
                return (this.MemoryInputIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMemoryComboIconType> _memoryComboIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("memoryComboIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMemoryComboIconType> MemoryComboIcon
        {
            get
            {
                return this._memoryComboIcon;
            }
            private set
            {
                this._memoryComboIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryComboIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MemoryComboIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryComboIconSpecified
        {
            get
            {
                return (this.MemoryComboIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType> _signalheadicon;
        
        [System.Xml.Serialization.XmlElementAttribute("signalheadicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSignalHeadIconType> Signalheadicon
        {
            get
            {
                return this._signalheadicon;
            }
            private set
            {
                this._signalheadicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalheadicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalheadicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalheadiconSpecified
        {
            get
            {
                return (this.Signalheadicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType> _signalmasticon;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmasticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSignalMastIconType> Signalmasticon
        {
            get
            {
                return this._signalmasticon;
            }
            private set
            {
                this._signalmasticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmasticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmasticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmasticonSpecified
        {
            get
            {
                return (this.Signalmasticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType> _reportericon;
        
        [System.Xml.Serialization.XmlElementAttribute("reportericon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorReporterIconType> Reportericon
        {
            get
            {
                return this._reportericon;
            }
            private set
            {
                this._reportericon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reportericon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reportericon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportericonSpecified
        {
            get
            {
                return (this.Reportericon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> _layoutturnout;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutturnout")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> Layoutturnout
        {
            get
            {
                return this._layoutturnout;
            }
            private set
            {
                this._layoutturnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutturnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutturnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutturnoutSpecified
        {
            get
            {
                return (this.Layoutturnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> _layoutSlip;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutSlip")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> LayoutSlip
        {
            get
            {
                return this._layoutSlip;
            }
            private set
            {
                this._layoutSlip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutSlip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutSlip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSlipSpecified
        {
            get
            {
                return (this.LayoutSlip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType> _multisensoricon;
        
        [System.Xml.Serialization.XmlElementAttribute("multisensoricon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorMultiSensorIconType> Multisensoricon
        {
            get
            {
                return this._multisensoricon;
            }
            private set
            {
                this._multisensoricon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Multisensoricon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Multisensoricon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultisensoriconSpecified
        {
            get
            {
                return (this.Multisensoricon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType> _fastclock;
        
        [System.Xml.Serialization.XmlElementAttribute("fastclock")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorFastClockIconType> Fastclock
        {
            get
            {
                return this._fastclock;
            }
            private set
            {
                this._fastclock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fastclock-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Fastclock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FastclockSpecified
        {
            get
            {
                return (this.Fastclock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType> _locoicon;
        
        [System.Xml.Serialization.XmlElementAttribute("locoicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLocoIconType> Locoicon
        {
            get
            {
                return this._locoicon;
            }
            private set
            {
                this._locoicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Locoicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Locoicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocoiconSpecified
        {
            get
            {
                return (this.Locoicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLocoLabelType> _locoLabel;
        
        [System.Xml.Serialization.XmlElementAttribute("LocoLabel")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLocoLabelType> LocoLabel
        {
            get
            {
                return this._locoLabel;
            }
            private set
            {
                this._locoLabel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocoLabel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LocoLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocoLabelSpecified
        {
            get
            {
                return (this.LocoLabel.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTrackIconType> _indicatortrackicon;
        
        [System.Xml.Serialization.XmlElementAttribute("indicatortrackicon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTrackIconType> Indicatortrackicon
        {
            get
            {
                return this._indicatortrackicon;
            }
            private set
            {
                this._indicatortrackicon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Indicatortrackicon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Indicatortrackicon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatortrackiconSpecified
        {
            get
            {
                return (this.Indicatortrackicon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSlipTurnoutTconType> _slipturnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("slipturnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSlipTurnoutTconType> Slipturnouticon
        {
            get
            {
                return this._slipturnouticon;
            }
            private set
            {
                this._slipturnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Slipturnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Slipturnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SlipturnouticonSpecified
        {
            get
            {
                return (this.Slipturnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType> _indicatorturnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("indicatorturnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType> Indicatorturnouticon
        {
            get
            {
                return this._indicatorturnouticon;
            }
            private set
            {
                this._indicatorturnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Indicatorturnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Indicatorturnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorturnouticonSpecified
        {
            get
            {
                return (this.Indicatorturnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorPortalIconType> _portalIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("PortalIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorPortalIconType> PortalIcon
        {
            get
            {
                return this._portalIcon;
            }
            private set
            {
                this._portalIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PortalIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PortalIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortalIconSpecified
        {
            get
            {
                return (this.PortalIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> _lightIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("LightIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> LightIcon
        {
            get
            {
                return this._lightIcon;
            }
            private set
            {
                this._lightIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LightIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LightIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightIconSpecified
        {
            get
            {
                return (this.LightIcon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType> _blockContentsIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("BlockContentsIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorBlockContentsIconType> BlockContentsIcon
        {
            get
            {
                return this._blockContentsIcon;
            }
            private set
            {
                this._blockContentsIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlockContentsIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BlockContentsIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockContentsIconSpecified
        {
            get
            {
                return (this.BlockContentsIcon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _editable = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.YesNoType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _positionable = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("positionable")]
        public JMRI.YesNoType Positionable
        {
            get
            {
                return this._positionable;
            }
            set
            {
                this._positionable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _controlling = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("controlling")]
        public JMRI.YesNoType Controlling
        {
            get
            {
                return this._controlling;
            }
            set
            {
                this._controlling = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hide = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hide")]
        public JMRI.YesNoType Hide
        {
            get
            {
                return this._hide;
            }
            set
            {
                this._hide = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showcoordinates = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("showcoordinates")]
        public JMRI.YesNoType Showcoordinates
        {
            get
            {
                return this._showcoordinates;
            }
            set
            {
                this._showcoordinates = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showtooltips = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltips")]
        public JMRI.YesNoType Showtooltips
        {
            get
            {
                return this._showtooltips;
            }
            set
            {
                this._showtooltips = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _panelmenu = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("panelmenu")]
        public JMRI.YesNoType Panelmenu
        {
            get
            {
                return this._panelmenu;
            }
            set
            {
                this._panelmenu = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scrollable")]
        public JMRI.ScrollableType Scrollable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scrollable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scrollable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScrollableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBackground")]
        public int RedBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBackground")]
        public int GreenBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBackground")]
        public int BlueBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public int State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die State-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _shapeSelect = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("shapeSelect")]
        public JMRI.YesNoType ShapeSelect
        {
            get
            {
                return this._shapeSelect;
            }
            set
            {
                this._shapeSelect = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Define the XML structure for storing the contents of a Switchboard Editor panel.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML structure for storing the contents of a Switchboard Editor panel.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SwitchboardEditorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchboardEditorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorIconsType> _icons;
        
        [System.Xml.Serialization.XmlElementAttribute("icons")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorIconsType> Icons
        {
            get
            {
                return this._icons;
            }
            private set
            {
                this._icons = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Icons-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Icons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconsSpecified
        {
            get
            {
                return (this.Icons.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SwitchboardEditorType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SwitchboardEditorType" /> class.</para>
        /// </summary>
        public SwitchboardEditorType()
        {
            this._icons = new System.Collections.ObjectModel.Collection<JMRI.EditorIconsType>();
            this._turnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType>();
            this._sensoricon = new System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType>();
            this._layoutturnout = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType>();
            this._layoutSlip = new System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType>();
            this._indicatorturnouticon = new System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType>();
            this._lightIcon = new System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> _turnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("turnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorTurnoutIconType> Turnouticon
        {
            get
            {
                return this._turnouticon;
            }
            private set
            {
                this._turnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnouticonSpecified
        {
            get
            {
                return (this.Turnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> _sensoricon;
        
        [System.Xml.Serialization.XmlElementAttribute("sensoricon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorSensorIconType> Sensoricon
        {
            get
            {
                return this._sensoricon;
            }
            private set
            {
                this._sensoricon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensoricon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensoricon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensoriconSpecified
        {
            get
            {
                return (this.Sensoricon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> _layoutturnout;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutturnout")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutTurnoutType> Layoutturnout
        {
            get
            {
                return this._layoutturnout;
            }
            private set
            {
                this._layoutturnout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutturnout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutturnout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutturnoutSpecified
        {
            get
            {
                return (this.Layoutturnout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> _layoutSlip;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutSlip")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLayoutSlipType> LayoutSlip
        {
            get
            {
                return this._layoutSlip;
            }
            private set
            {
                this._layoutSlip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutSlip-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutSlip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSlipSpecified
        {
            get
            {
                return (this.LayoutSlip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType> _indicatorturnouticon;
        
        [System.Xml.Serialization.XmlElementAttribute("indicatorturnouticon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorIndicatorTurnoutIconType> Indicatorturnouticon
        {
            get
            {
                return this._indicatorturnouticon;
            }
            private set
            {
                this._indicatorturnouticon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Indicatorturnouticon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Indicatorturnouticon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorturnouticonSpecified
        {
            get
            {
                return (this.Indicatorturnouticon.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> _lightIcon;
        
        [System.Xml.Serialization.XmlElementAttribute("LightIcon")]
        public System.Collections.ObjectModel.Collection<JMRI.EditorLightIconType> LightIcon
        {
            get
            {
                return this._lightIcon;
            }
            private set
            {
                this._lightIcon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LightIcon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LightIcon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightIconSpecified
        {
            get
            {
                return (this.LightIcon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        /// <summary>
        /// <para>Optional as of JMRI 4.15.6</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optional as of JMRI 4.15.6")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _editable = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("editable")]
        public JMRI.YesNoType Editable
        {
            get
            {
                return this._editable;
            }
            set
            {
                this._editable = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _controlling = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("controlling")]
        public JMRI.YesNoType Controlling
        {
            get
            {
                return this._controlling;
            }
            set
            {
                this._controlling = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hide = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hide")]
        public JMRI.YesNoType Hide
        {
            get
            {
                return this._hide;
            }
            set
            {
                this._hide = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showcoordinates = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("showcoordinates")]
        public JMRI.YesNoType Showcoordinates
        {
            get
            {
                return this._showcoordinates;
            }
            set
            {
                this._showcoordinates = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showtooltips = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("showtooltips")]
        public JMRI.YesNoType Showtooltips
        {
            get
            {
                return this._showtooltips;
            }
            set
            {
                this._showtooltips = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _panelmenu = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("panelmenu")]
        public JMRI.YesNoType Panelmenu
        {
            get
            {
                return this._panelmenu;
            }
            set
            {
                this._panelmenu = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scrollable")]
        public JMRI.ScrollableType Scrollable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scrollable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scrollable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScrollableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _hideunconnected = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("hideunconnected")]
        public JMRI.YesNoType Hideunconnected
        {
            get
            {
                return this._hideunconnected;
            }
            set
            {
                this._hideunconnected = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _autoitemrange = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("autoitemrange")]
        public JMRI.YesNoType Autoitemrange
        {
            get
            {
                return this._autoitemrange;
            }
            set
            {
                this._autoitemrange = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _rangemin = 1;
        
        [System.ComponentModel.DefaultValueAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("rangemin")]
        public int Rangemin
        {
            get
            {
                return this._rangemin;
            }
            set
            {
                this._rangemin = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _rangemax = 32;
        
        [System.ComponentModel.DefaultValueAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("rangemax")]
        public int Rangemax
        {
            get
            {
                return this._rangemax;
            }
            set
            {
                this._rangemax = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("connection")]
        public string Connection { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("columns")]
        public int Columns { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Columns-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Columns property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: #[0-9A-Fa-f]{6}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#[0-9A-Fa-f]{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("defaulttextcolor")]
        public string Defaulttextcolor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("redBackground")]
        public int RedBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RedBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RedBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("greenBackground")]
        public int GreenBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GreenBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreenBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreenBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("blueBackground")]
        public int BlueBackground { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BlueBackground-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BlueBackground property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlueBackgroundSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public int State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die State-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the State property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of the Entry Exit implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of the Entry Exit implementation" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitPairType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EntryExitPairType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("cleardown")]
        public string Cleardown { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("overlap")]
        public string Overlap { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("memorycleardelay")]
        public string Memorycleardelay { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("memoryname")]
        public string Memoryname { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("dispatcherintegration")]
        public string Dispatcherintegration { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("colourwhilesetting")]
        public string Colourwhilesetting { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("settingTimer")]
        public string SettingTimer { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("logicDelay")]
        public string LogicDelay { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EntryExitPanelType> _layoutPanel;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutPanel")]
        public System.Collections.ObjectModel.Collection<EntryExitPanelType> LayoutPanel
        {
            get
            {
                return this._layoutPanel;
            }
            private set
            {
                this._layoutPanel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutPanel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutPanel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutPanelSpecified
        {
            get
            {
                return (this.LayoutPanel.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EntryExitPairType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EntryExitPairType" /> class.</para>
        /// </summary>
        public EntryExitPairType()
        {
            this._layoutPanel = new System.Collections.ObjectModel.Collection<EntryExitPanelType>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalMast Logic implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalMast Logic implemen" +
        "tation. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitPanelType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EntryExitPanelType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EntryExitSourceType> _source;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public System.Collections.ObjectModel.Collection<EntryExitSourceType> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EntryExitPanelType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EntryExitPanelType" /> class.</para>
        /// </summary>
        public EntryExitPanelType()
        {
            this._source = new System.Collections.ObjectModel.Collection<EntryExitSourceType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalMast Logic implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalMast Logic implemen" +
        "tation. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitSourceType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EntryExitSourceType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EntryExitDestinationType> _destination;
        
        [System.Xml.Serialization.XmlElementAttribute("destination")]
        public System.Collections.ObjectModel.Collection<EntryExitDestinationType> Destination
        {
            get
            {
                return this._destination;
            }
            private set
            {
                this._destination = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Destination-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Destination collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DestinationSpecified
        {
            get
            {
                return (this.Destination.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EntryExitSourceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EntryExitSourceType" /> class.</para>
        /// </summary>
        public EntryExitSourceType()
        {
            this._destination = new System.Collections.ObjectModel.Collection<EntryExitDestinationType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("item")]
        public string Item { get; set; }
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of one SignalMast Logic implementation.
    ///          Generally dealt with by the manager implemenation</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of one SignalMast Logic implemen" +
        "tation. Generally dealt with by the manager implemenation")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitDestinationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EntryExitDestinationType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public EntryExitDestinationTypeType Type { get; set; }
        
        /// <summary>
        /// <para>General definition of a name, either a 
        ///          system or user name (non-null).
        ///          Centralized so we can later enforce naming, linking, etc.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Pattern: ..*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("..*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("item")]
        public string Item { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("uniDirection")]
        public JMRI.YesNoType UniDirection { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UniDirection-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UniDirection property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UniDirectionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("enabled")]
        public JMRI.YesNoType Enabled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Enabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nxType")]
        public EntryExitDestinationTypeNxType NxType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NxType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NxType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NxTypeSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("uniqueid")]
        public string Uniqueid { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitDestinationTypeType", Namespace="", AnonymousType=true)]
    public enum EntryExitDestinationTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("signalMast")]
        SignalMast,
        
        [System.Xml.Serialization.XmlEnumAttribute("sensor")]
        Sensor,
        
        [System.Xml.Serialization.XmlEnumAttribute("signalHead")]
        SignalHead,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EntryExitDestinationTypeNxType", Namespace="", AnonymousType=true)]
    public enum EntryExitDestinationTypeNxType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("turnoutsetting")]
        Turnoutsetting,
        
        [System.Xml.Serialization.XmlEnumAttribute("signalmastlogic")]
        Signalmastlogic,
        
        [System.Xml.Serialization.XmlEnumAttribute("fullinterlocking")]
        Fullinterlocking,
    }
    
    /// <summary>
    /// <para>Define the XML stucture for storing the contents of a FileHistory implementation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Define the XML stucture for storing the contents of a FileHistory implementation." +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FileHistoryType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileHistoryType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FileHistoryTypeOperation> _operation;
        
        [System.Xml.Serialization.XmlElementAttribute("operation")]
        public System.Collections.ObjectModel.Collection<FileHistoryTypeOperation> Operation
        {
            get
            {
                return this._operation;
            }
            private set
            {
                this._operation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationSpecified
        {
            get
            {
                return (this.Operation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="FileHistoryType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FileHistoryType" /> class.</para>
        /// </summary>
        public FileHistoryType()
        {
            this._operation = new System.Collections.ObjectModel.Collection<FileHistoryTypeOperation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FileHistoryTypeOperation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileHistoryTypeOperation
    {
        
        [System.Xml.Serialization.XmlElementAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("date")]
        public string Date { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("filename")]
        public string Filename { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FileHistoryTypeOperation> _filehistory;
        
        [System.Xml.Serialization.XmlArrayAttribute("filehistory")]
        [System.Xml.Serialization.XmlArrayItemAttribute("operation")]
        public System.Collections.ObjectModel.Collection<FileHistoryTypeOperation> Filehistory
        {
            get
            {
                return this._filehistory;
            }
            private set
            {
                this._filehistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filehistory-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filehistory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilehistorySpecified
        {
            get
            {
                return (this.Filehistory.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="FileHistoryTypeOperation" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FileHistoryTypeOperation" /> class.</para>
        /// </summary>
        public FileHistoryTypeOperation()
        {
            this._filehistory = new System.Collections.ObjectModel.Collection<FileHistoryTypeOperation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("layout-config", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("layout-config", Namespace="")]
    public partial class Layout_Config
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigJmriversion> _jmriversion;
        
        /// <summary>
        /// <para>Automatically added to contain JMRI version writing the file</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automatically added to contain JMRI version writing the file")]
        [System.Xml.Serialization.XmlElementAttribute("jmriversion")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigJmriversion> Jmriversion
        {
            get
            {
                return this._jmriversion;
            }
            private set
            {
                this._jmriversion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Jmriversion-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Jmriversion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmriversionSpecified
        {
            get
            {
                return (this.Jmriversion.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Layout_Config" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Layout_Config" /> class.</para>
        /// </summary>
        public Layout_Config()
        {
            this._jmriversion = new System.Collections.ObjectModel.Collection<Layout_ConfigJmriversion>();
            this._gui = new System.Collections.ObjectModel.Collection<Layout_ConfigGui>();
            this._console = new System.Collections.ObjectModel.Collection<Layout_ConfigConsole>();
            this._fileLocations = new System.Collections.ObjectModel.Collection<Layout_ConfigFileLocations>();
            this._managerdefaults = new System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaults>();
            this._programmer = new System.Collections.ObjectModel.Collection<Layout_ConfigProgrammer>();
            this._roster = new System.Collections.ObjectModel.Collection<Layout_ConfigRoster>();
            this._perform = new System.Collections.ObjectModel.Collection<Layout_ConfigPerform>();
            this._connection = new System.Collections.ObjectModel.Collection<JMRI.ConnectionType>();
            this._userMessagePreferences = new System.Collections.ObjectModel.Collection<JMRI.UserPrefsType>();
            this._turnouts = new System.Collections.ObjectModel.Collection<JMRI.TurnoutManagerType>();
            this._sensors = new System.Collections.ObjectModel.Collection<JMRI.SensorManagerType>();
            this._lights = new System.Collections.ObjectModel.Collection<JMRI.LightManagerType>();
            this._reporters = new System.Collections.ObjectModel.Collection<JMRI.ReporterManagerType>();
            this._memories = new System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType>();
            this._memorys = new System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType>();
            this._blocks = new System.Collections.ObjectModel.Collection<JMRI.BlockManagerType>();
            this._oblocks = new System.Collections.ObjectModel.Collection<JMRI.OBlockManagerType>();
            this._sections = new System.Collections.ObjectModel.Collection<JMRI.SectionManagerType>();
            this._transits = new System.Collections.ObjectModel.Collection<JMRI.TransitManagerType>();
            this._timebase = new System.Collections.ObjectModel.Collection<JMRI.TimebaseType>();
            this._signalheads = new System.Collections.ObjectModel.Collection<JMRI.SignalHeadManagerType>();
            this._signalmasts = new System.Collections.ObjectModel.Collection<JMRI.SignalMastManagerType>();
            this._signalgroups = new System.Collections.ObjectModel.Collection<JMRI.SignalGroupManagerType>();
            this._signalmastlogics = new System.Collections.ObjectModel.Collection<JMRI.SignalMastLogicManagerType>();
            this._layoutblocks = new System.Collections.ObjectModel.Collection<JMRI.LayoutBlockManagerType>();
            this._signalelements = new System.Collections.ObjectModel.Collection<JMRI.SignalElementManagerType>();
            this._audio = new System.Collections.ObjectModel.Collection<JMRI.AudioManagerType>();
            this._routes = new System.Collections.ObjectModel.Collection<JMRI.RouteManagerType>();
            this._logixs = new System.Collections.ObjectModel.Collection<JMRI.LogixManagerType>();
            this._conditionals = new System.Collections.ObjectModel.Collection<JMRI.ConditionalManagerType>();
            this._warrants = new System.Collections.ObjectModel.Collection<JMRI.WarrantManagerType>();
            this._paneleditor = new System.Collections.ObjectModel.Collection<JMRI.PanelEditorType>();
            this._switchboardeditor = new System.Collections.ObjectModel.Collection<JMRI.SwitchboardEditorType>();
            this._layoutEditor = new System.Collections.ObjectModel.Collection<JMRI.LayoutEditorType>();
            this._entryexitpairs = new System.Collections.ObjectModel.Collection<JMRI.EntryExitPairType>();
            this._filehistory = new System.Collections.ObjectModel.Collection<JMRI.FileHistoryType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigGui> _gui;
        
        /// <summary>
        /// <para>Defines options for the GUI configuration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines options for the GUI configuration")]
        [System.Xml.Serialization.XmlElementAttribute("gui")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigGui> Gui
        {
            get
            {
                return this._gui;
            }
            private set
            {
                this._gui = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gui-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Gui collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuiSpecified
        {
            get
            {
                return (this.Gui.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigConsole> _console;
        
        /// <summary>
        /// <para>Defines options for the JMRI System Console</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines options for the JMRI System Console")]
        [System.Xml.Serialization.XmlElementAttribute("console")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigConsole> Console
        {
            get
            {
                return this._console;
            }
            private set
            {
                this._console = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Console-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Console collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConsoleSpecified
        {
            get
            {
                return (this.Console.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigFileLocations> _fileLocations;
        
        /// <summary>
        /// <para>Defines the default locations for user file locations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines the default locations for user file locations.")]
        [System.Xml.Serialization.XmlElementAttribute("fileLocations")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigFileLocations> FileLocations
        {
            get
            {
                return this._fileLocations;
            }
            private set
            {
                this._fileLocations = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FileLocations-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FileLocations collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileLocationsSpecified
        {
            get
            {
                return (this.FileLocations.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaults> _managerdefaults;
        
        /// <summary>
        /// <para>Defines which manager is to be used for various operations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines which manager is to be used for various operations.")]
        [System.Xml.Serialization.XmlElementAttribute("managerdefaults")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaults> Managerdefaults
        {
            get
            {
                return this._managerdefaults;
            }
            private set
            {
                this._managerdefaults = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Managerdefaults-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Managerdefaults collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManagerdefaultsSpecified
        {
            get
            {
                return (this.Managerdefaults.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigProgrammer> _programmer;
        
        /// <summary>
        /// <para>Defines DecoderPro configuration options</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines DecoderPro configuration options")]
        [System.Xml.Serialization.XmlElementAttribute("programmer")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigProgrammer> Programmer
        {
            get
            {
                return this._programmer;
            }
            private set
            {
                this._programmer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Programmer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Programmer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProgrammerSpecified
        {
            get
            {
                return (this.Programmer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigRoster> _roster;
        
        /// <summary>
        /// <para>Defines DecoderPro roster applications re location, default owner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines DecoderPro roster applications re location, default owner")]
        [System.Xml.Serialization.XmlElementAttribute("roster")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigRoster> Roster
        {
            get
            {
                return this._roster;
            }
            private set
            {
                this._roster = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Roster-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Roster collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RosterSpecified
        {
            get
            {
                return (this.Roster.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigPerform> _perform;
        
        /// <summary>
        /// <para>Defines things to do when the file is loaded (usually when the app starts up, as this is in config file)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines things to do when the file is loaded (usually when the app starts up, as " +
            "this is in config file)")]
        [System.Xml.Serialization.XmlElementAttribute("perform")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigPerform> Perform
        {
            get
            {
                return this._perform;
            }
            private set
            {
                this._perform = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Perform-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Perform collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerformSpecified
        {
            get
            {
                return (this.Perform.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.ConnectionType> _connection;
        
        [System.Xml.Serialization.XmlElementAttribute("connection")]
        public System.Collections.ObjectModel.Collection<JMRI.ConnectionType> Connection
        {
            get
            {
                return this._connection;
            }
            private set
            {
                this._connection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Connection-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Connection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectionSpecified
        {
            get
            {
                return (this.Connection.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.UserPrefsType> _userMessagePreferences;
        
        [System.Xml.Serialization.XmlElementAttribute("UserMessagePreferences")]
        public System.Collections.ObjectModel.Collection<JMRI.UserPrefsType> UserMessagePreferences
        {
            get
            {
                return this._userMessagePreferences;
            }
            private set
            {
                this._userMessagePreferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UserMessagePreferences-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UserMessagePreferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserMessagePreferencesSpecified
        {
            get
            {
                return (this.UserMessagePreferences.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.TurnoutManagerType> _turnouts;
        
        [System.Xml.Serialization.XmlElementAttribute("turnouts")]
        public System.Collections.ObjectModel.Collection<JMRI.TurnoutManagerType> Turnouts
        {
            get
            {
                return this._turnouts;
            }
            private set
            {
                this._turnouts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnouts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Turnouts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurnoutsSpecified
        {
            get
            {
                return (this.Turnouts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SensorManagerType> _sensors;
        
        [System.Xml.Serialization.XmlElementAttribute("sensors")]
        public System.Collections.ObjectModel.Collection<JMRI.SensorManagerType> Sensors
        {
            get
            {
                return this._sensors;
            }
            private set
            {
                this._sensors = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sensors-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sensors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorsSpecified
        {
            get
            {
                return (this.Sensors.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.LightManagerType> _lights;
        
        [System.Xml.Serialization.XmlElementAttribute("lights")]
        public System.Collections.ObjectModel.Collection<JMRI.LightManagerType> Lights
        {
            get
            {
                return this._lights;
            }
            private set
            {
                this._lights = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lights-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Lights collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LightsSpecified
        {
            get
            {
                return (this.Lights.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.ReporterManagerType> _reporters;
        
        [System.Xml.Serialization.XmlElementAttribute("reporters")]
        public System.Collections.ObjectModel.Collection<JMRI.ReporterManagerType> Reporters
        {
            get
            {
                return this._reporters;
            }
            private set
            {
                this._reporters = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reporters-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reporters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportersSpecified
        {
            get
            {
                return (this.Reporters.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType> _memories;
        
        [System.Xml.Serialization.XmlElementAttribute("memories")]
        public System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType> Memories
        {
            get
            {
                return this._memories;
            }
            private set
            {
                this._memories = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memories-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memories collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoriesSpecified
        {
            get
            {
                return (this.Memories.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType> _memorys;
        
        [System.Xml.Serialization.XmlElementAttribute("memorys")]
        public System.Collections.ObjectModel.Collection<JMRI.MemoryManagerType> Memorys
        {
            get
            {
                return this._memorys;
            }
            private set
            {
                this._memorys = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memorys-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Memorys collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemorysSpecified
        {
            get
            {
                return (this.Memorys.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.BlockManagerType> _blocks;
        
        [System.Xml.Serialization.XmlElementAttribute("blocks")]
        public System.Collections.ObjectModel.Collection<JMRI.BlockManagerType> Blocks
        {
            get
            {
                return this._blocks;
            }
            private set
            {
                this._blocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Blocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Blocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlocksSpecified
        {
            get
            {
                return (this.Blocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.OBlockManagerType> _oblocks;
        
        [System.Xml.Serialization.XmlElementAttribute("oblocks")]
        public System.Collections.ObjectModel.Collection<JMRI.OBlockManagerType> Oblocks
        {
            get
            {
                return this._oblocks;
            }
            private set
            {
                this._oblocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Oblocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Oblocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OblocksSpecified
        {
            get
            {
                return (this.Oblocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SectionManagerType> _sections;
        
        [System.Xml.Serialization.XmlElementAttribute("sections")]
        public System.Collections.ObjectModel.Collection<JMRI.SectionManagerType> Sections
        {
            get
            {
                return this._sections;
            }
            private set
            {
                this._sections = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sections-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sections collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SectionsSpecified
        {
            get
            {
                return (this.Sections.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.TransitManagerType> _transits;
        
        [System.Xml.Serialization.XmlElementAttribute("transits")]
        public System.Collections.ObjectModel.Collection<JMRI.TransitManagerType> Transits
        {
            get
            {
                return this._transits;
            }
            private set
            {
                this._transits = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Transits-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Transits collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransitsSpecified
        {
            get
            {
                return (this.Transits.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.TimebaseType> _timebase;
        
        [System.Xml.Serialization.XmlElementAttribute("timebase")]
        public System.Collections.ObjectModel.Collection<JMRI.TimebaseType> Timebase
        {
            get
            {
                return this._timebase;
            }
            private set
            {
                this._timebase = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Timebase-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Timebase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimebaseSpecified
        {
            get
            {
                return (this.Timebase.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalHeadManagerType> _signalheads;
        
        [System.Xml.Serialization.XmlElementAttribute("signalheads")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalHeadManagerType> Signalheads
        {
            get
            {
                return this._signalheads;
            }
            private set
            {
                this._signalheads = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalheads-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalheads collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalheadsSpecified
        {
            get
            {
                return (this.Signalheads.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastManagerType> _signalmasts;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmasts")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastManagerType> Signalmasts
        {
            get
            {
                return this._signalmasts;
            }
            private set
            {
                this._signalmasts = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmasts-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmasts collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmastsSpecified
        {
            get
            {
                return (this.Signalmasts.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalGroupManagerType> _signalgroups;
        
        [System.Xml.Serialization.XmlElementAttribute("signalgroups")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalGroupManagerType> Signalgroups
        {
            get
            {
                return this._signalgroups;
            }
            private set
            {
                this._signalgroups = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalgroups-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalgroups collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalgroupsSpecified
        {
            get
            {
                return (this.Signalgroups.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalMastLogicManagerType> _signalmastlogics;
        
        [System.Xml.Serialization.XmlElementAttribute("signalmastlogics")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalMastLogicManagerType> Signalmastlogics
        {
            get
            {
                return this._signalmastlogics;
            }
            private set
            {
                this._signalmastlogics = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalmastlogics-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalmastlogics collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalmastlogicsSpecified
        {
            get
            {
                return (this.Signalmastlogics.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.LayoutBlockManagerType> _layoutblocks;
        
        [System.Xml.Serialization.XmlElementAttribute("layoutblocks")]
        public System.Collections.ObjectModel.Collection<JMRI.LayoutBlockManagerType> Layoutblocks
        {
            get
            {
                return this._layoutblocks;
            }
            private set
            {
                this._layoutblocks = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Layoutblocks-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Layoutblocks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutblocksSpecified
        {
            get
            {
                return (this.Layoutblocks.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SignalElementManagerType> _signalelements;
        
        [System.Xml.Serialization.XmlElementAttribute("signalelements")]
        public System.Collections.ObjectModel.Collection<JMRI.SignalElementManagerType> Signalelements
        {
            get
            {
                return this._signalelements;
            }
            private set
            {
                this._signalelements = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalelements-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Signalelements collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalelementsSpecified
        {
            get
            {
                return (this.Signalelements.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.AudioManagerType> _audio;
        
        [System.Xml.Serialization.XmlElementAttribute("audio")]
        public System.Collections.ObjectModel.Collection<JMRI.AudioManagerType> Audio
        {
            get
            {
                return this._audio;
            }
            private set
            {
                this._audio = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audio-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Audio collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AudioSpecified
        {
            get
            {
                return (this.Audio.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.RouteManagerType> _routes;
        
        [System.Xml.Serialization.XmlElementAttribute("routes")]
        public System.Collections.ObjectModel.Collection<JMRI.RouteManagerType> Routes
        {
            get
            {
                return this._routes;
            }
            private set
            {
                this._routes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Routes-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Routes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoutesSpecified
        {
            get
            {
                return (this.Routes.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.LogixManagerType> _logixs;
        
        [System.Xml.Serialization.XmlElementAttribute("logixs")]
        public System.Collections.ObjectModel.Collection<JMRI.LogixManagerType> Logixs
        {
            get
            {
                return this._logixs;
            }
            private set
            {
                this._logixs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Logixs-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Logixs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogixsSpecified
        {
            get
            {
                return (this.Logixs.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.ConditionalManagerType> _conditionals;
        
        [System.Xml.Serialization.XmlElementAttribute("conditionals")]
        public System.Collections.ObjectModel.Collection<JMRI.ConditionalManagerType> Conditionals
        {
            get
            {
                return this._conditionals;
            }
            private set
            {
                this._conditionals = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Conditionals-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Conditionals collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionalsSpecified
        {
            get
            {
                return (this.Conditionals.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.WarrantManagerType> _warrants;
        
        [System.Xml.Serialization.XmlElementAttribute("warrants")]
        public System.Collections.ObjectModel.Collection<JMRI.WarrantManagerType> Warrants
        {
            get
            {
                return this._warrants;
            }
            private set
            {
                this._warrants = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Warrants-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Warrants collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WarrantsSpecified
        {
            get
            {
                return (this.Warrants.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.PanelEditorType> _paneleditor;
        
        [System.Xml.Serialization.XmlElementAttribute("paneleditor")]
        public System.Collections.ObjectModel.Collection<JMRI.PanelEditorType> Paneleditor
        {
            get
            {
                return this._paneleditor;
            }
            private set
            {
                this._paneleditor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Paneleditor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Paneleditor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaneleditorSpecified
        {
            get
            {
                return (this.Paneleditor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.SwitchboardEditorType> _switchboardeditor;
        
        [System.Xml.Serialization.XmlElementAttribute("switchboardeditor")]
        public System.Collections.ObjectModel.Collection<JMRI.SwitchboardEditorType> Switchboardeditor
        {
            get
            {
                return this._switchboardeditor;
            }
            private set
            {
                this._switchboardeditor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Switchboardeditor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Switchboardeditor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SwitchboardeditorSpecified
        {
            get
            {
                return (this.Switchboardeditor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.LayoutEditorType> _layoutEditor;
        
        [System.Xml.Serialization.XmlElementAttribute("LayoutEditor")]
        public System.Collections.ObjectModel.Collection<JMRI.LayoutEditorType> LayoutEditor
        {
            get
            {
                return this._layoutEditor;
            }
            private set
            {
                this._layoutEditor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LayoutEditor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutEditor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutEditorSpecified
        {
            get
            {
                return (this.LayoutEditor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.EntryExitPairType> _entryexitpairs;
        
        [System.Xml.Serialization.XmlElementAttribute("entryexitpairs")]
        public System.Collections.ObjectModel.Collection<JMRI.EntryExitPairType> Entryexitpairs
        {
            get
            {
                return this._entryexitpairs;
            }
            private set
            {
                this._entryexitpairs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Entryexitpairs-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Entryexitpairs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntryexitpairsSpecified
        {
            get
            {
                return (this.Entryexitpairs.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JMRI.FileHistoryType> _filehistory;
        
        [System.Xml.Serialization.XmlElementAttribute("filehistory")]
        public System.Collections.ObjectModel.Collection<JMRI.FileHistoryType> Filehistory
        {
            get
            {
                return this._filehistory;
            }
            private set
            {
                this._filehistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filehistory-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filehistory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilehistorySpecified
        {
            get
            {
                return (this.Filehistory.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigJmriversion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigJmriversion
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("major")]
        public int Major { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("minor")]
        public int Minor { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("test")]
        public int Test { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Test-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Test property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestSpecified { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("modifier")]
        public string Modifier { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigGui", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigGui
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("LAFclass")]
        public string LAFclass { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontsize")]
        public string Fontsize { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LocaleLanguage")]
        public string LocaleLanguage { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LocaleCountry")]
        public string LocaleCountry { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LocaleVariant")]
        public string LocaleVariant { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nonStandardMouseEvent")]
        public JMRI.YesNoType NonStandardMouseEvent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NonStandardMouseEvent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonStandardMouseEvent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonStandardMouseEventSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigConsole", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigConsole
    {
        
        [System.Xml.Serialization.XmlElementAttribute("position")]
        public Layout_ConfigConsolePosition Position { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("size")]
        public Layout_ConfigConsoleSize Size { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("scheme")]
        public string Scheme { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontfamily")]
        public string Fontfamily { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontsize")]
        public string Fontsize { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontstyle")]
        public string Fontstyle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("wrapstyle")]
        public string Wrapstyle { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigConsolePosition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigConsolePosition
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigConsoleSize", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigConsoleSize
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigFileLocations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigFileLocations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigFileLocationsFileLocation> _fileLocation;
        
        [System.Xml.Serialization.XmlElementAttribute("fileLocation")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigFileLocationsFileLocation> FileLocation
        {
            get
            {
                return this._fileLocation;
            }
            private set
            {
                this._fileLocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FileLocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FileLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileLocationSpecified
        {
            get
            {
                return (this.FileLocation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Layout_ConfigFileLocations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Layout_ConfigFileLocations" /> class.</para>
        /// </summary>
        public Layout_ConfigFileLocations()
        {
            this._fileLocation = new System.Collections.ObjectModel.Collection<Layout_ConfigFileLocationsFileLocation>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultScriptLocation")]
        public string DefaultScriptLocation { get; set; }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultUserLocation")]
        public string DefaultUserLocation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultThrottleLocation")]
        public string DefaultThrottleLocation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigFileLocationsFileLocation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigFileLocationsFileLocation
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultScriptLocation")]
        public string DefaultScriptLocation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultUserLocation")]
        public string DefaultUserLocation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("defaultThrottleLocation")]
        public string DefaultThrottleLocation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigManagerdefaults", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigManagerdefaults
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaultsSetting> _setting;
        
        [System.Xml.Serialization.XmlElementAttribute("setting")]
        public System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaultsSetting> Setting
        {
            get
            {
                return this._setting;
            }
            private set
            {
                this._setting = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Setting-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Setting collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SettingSpecified
        {
            get
            {
                return (this.Setting.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Layout_ConfigManagerdefaults" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Layout_ConfigManagerdefaults" /> class.</para>
        /// </summary>
        public Layout_ConfigManagerdefaults()
        {
            this._setting = new System.Collections.ObjectModel.Collection<Layout_ConfigManagerdefaultsSetting>();
        }
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigManagerdefaultsSetting", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigManagerdefaultsSetting
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _key;
        
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public System.Collections.ObjectModel.Collection<string> Key
        {
            get
            {
                return this._key;
            }
            private set
            {
                this._key = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Key-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Key collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeySpecified
        {
            get
            {
                return (this.Key.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Layout_ConfigManagerdefaultsSetting" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Layout_ConfigManagerdefaultsSetting" /> class.</para>
        /// </summary>
        public Layout_ConfigManagerdefaultsSetting()
        {
            this._key = new System.Collections.ObjectModel.Collection<string>();
            this._value = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _value;
        
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public System.Collections.ObjectModel.Collection<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Value-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigProgrammer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigProgrammer
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _verifyBeforeWrite = JMRI.YesNoType.No;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.No)]
        [System.Xml.Serialization.XmlAttributeAttribute("verifyBeforeWrite")]
        public JMRI.YesNoType VerifyBeforeWrite
        {
            get
            {
                return this._verifyBeforeWrite;
            }
            set
            {
                this._verifyBeforeWrite = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _showEmptyPanes = JMRI.YesNoType.Yes;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.Xml.Serialization.XmlAttributeAttribute("showEmptyPanes")]
        public JMRI.YesNoType ShowEmptyPanes
        {
            get
            {
                return this._showEmptyPanes;
            }
            set
            {
                this._showEmptyPanes = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _canCacheDefault = JMRI.YesNoType.Yes;
        
        /// <summary>
        /// <para>Defines default for whether to cache index CV writes,
        ///                      which can be overridden in a decoder definition file if desired.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.ComponentModel.DescriptionAttribute("Defines default for whether to cache index CV writes, which can be overridden in " +
            "a decoder definition file if desired.")]
        [System.Xml.Serialization.XmlAttributeAttribute("canCacheDefault")]
        public JMRI.YesNoType CanCacheDefault
        {
            get
            {
                return this._canCacheDefault;
            }
            set
            {
                this._canCacheDefault = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private JMRI.YesNoType _doConfirmWrite = JMRI.YesNoType.Yes;
        
        /// <summary>
        /// <para>Defines default for whether index CVs should be read for confirmation after being written,
        ///                      which can be overridden in a decoder definition file if desired.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(JMRI.YesNoType.Yes)]
        [System.ComponentModel.DescriptionAttribute("Defines default for whether index CVs should be read for confirmation after being" +
            " written, which can be overridden in a decoder definition file if desired.")]
        [System.Xml.Serialization.XmlAttributeAttribute("doConfirmWrite")]
        public JMRI.YesNoType DoConfirmWrite
        {
            get
            {
                return this._doConfirmWrite;
            }
            set
            {
                this._doConfirmWrite = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _defaultFile = "Basic.xml";
        
        [System.ComponentModel.DefaultValueAttribute("Basic.xml")]
        [System.Xml.Serialization.XmlAttributeAttribute("defaultFile")]
        public string DefaultFile
        {
            get
            {
                return this._defaultFile;
            }
            set
            {
                this._defaultFile = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigRoster", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigRoster
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("directory")]
        public string Directory { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ownerDefault")]
        public string OwnerDefault { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigPerform", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Layout_ConfigPerform
    {
        
        /// <summary>
        /// <para>Valid Java class name format</para>
        /// <para xml:lang="en">Pattern: [a-zA-Z0-9.]*[a-z].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-zA-Z0-9.]*[a-z]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private Layout_ConfigPerformType _type = JMRI.Layout_ConfigPerformType.Action;
        
        [System.ComponentModel.DefaultValueAttribute(JMRI.Layout_ConfigPerformType.Action)]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public Layout_ConfigPerformType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.436.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Layout_ConfigPerformType", Namespace="", AnonymousType=true)]
    public enum Layout_ConfigPerformType
    {
        
        Action,
        
        ScriptFile,
        
        XmlFile,
        
        Button,
    }
}
